id: https://w3id.org/semsql/obo
name: semsql_obo
title: Semantic SQL OBO module
description: >-
  OBO Module
license: https://creativecommons.org/publicdomain/zero/1.0/

prefixes:
  semsql_obo: https://w3id.org/semsql/obo
  linkml: https://w3id.org/linkml/
  
default_prefix: semsql_obo
default_range: string

default_curi_maps:
  - semweb_context

imports:
  - rdf
  - owl

classes:
  problem:
    abstract: true
    description: >-
      Represents an instance of a problem pertaining to conformance to OBO guidelines
    slots:
      - subject
      - description
    slot_usage:
      subject:
        description: >-
          The thing that is problematic

  property used with datatype values and objects:
    is_a: problem
    description: >-
      A problem in which the same property is used two two different ways, one
      in which the range is a literal value, the other where it is an object.
    comments:
      - >-
        in OWL, if a property is typed as object or datatype, this will constrain its use.
        However, annotation properties have no such constraints in OWL, but we still
        consider this problematic and unintentional, unless it is a truly generic
        predicate, such as owl:annotatedTarget or rdf:object
    see_also:
      - https://github.com/information-artifact-ontology/ontology-metadata/issues/67
    comments:
      - >-
        sqlview>>
          SELECT
            DISTINCT
              s1.predicate AS subject,
              s1.datatype
          FROM statements AS s1, statements AS s2 ON (s1.predicate=s2.predicate)
          WHERE s1.value IS NOT NULL and s2.object IS NOT NULL


  node with two labels problem:
    is_a: problem
    attributes:
      label1:
      label2:
    comments:
      - >-
        sqlview>>
          SELECT
             s1.subject AS subject,
             s1.value AS label1,
             s2.value AS label2
          FROM rdfs_label_statement AS s1, rdfs_label_statement AS s2
          WHERE s1.subject=s2.subject AND s1.value != s2.value
  all problems:
    is_a: problem
    comments:
      - sqlview>> SELECT * FROM node_with_two_labels_problem


slots:
