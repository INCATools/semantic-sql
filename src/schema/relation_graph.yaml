id: https://w3id.org/semsql/relation_graph
name: relation_graph
title: Relation Graph module
description: |-
  Module for representing Relation Graphs.

  The core concept in a relation graph is an [Edge](Edge.md), which consists of

   * [subject](subject.md)
   * [predicate](predicate.md)
   * [object](object.md)

  When mapping from OWL, an Edge corresponds to one of:

   * `A SubClassOf B`, where `B` is a named class, and the predicate is rdfs:subClassOf
   * `A SubClassOf P some B`, and the predicate is `P`

license: https://creativecommons.org/publicdomain/zero/1.0/

prefixes:
  semsql_rg: https://w3id.org/semsql/relation_graph
  linkml: https://w3id.org/linkml/

default_prefix: semsql_rg
default_range: string

default_curi_maps:
  - semweb_context

imports:
  - rdf
  - owl

classes:

  relation graph construct:
    abstract: true
    description: >-
      A construct used as part of a Relation Graph
    comments:
      - Relation Graphs are complementary abstractions to OWL in which axioms of the form A SubClassOf R some C form individual edges
    todos:
      - consider moving this to its own module

  edge:
    is_a: relation graph construct
    description: >-
      A relation graph edge that connects two entities by a predicate.
      Note an edge is distinct from a statement, in that an axiom such as
      A SubClassOf R some B is represented as multiple statements, but is
      a single relation graph edge
    slots:
      - subject
      - predicate
      - object
    in_subset:
      - base table
    comments:
      - >-
        sqlview>>
          SELECT subject, predicate, object FROM owl_subclass_of_some_values_from UNION
            SELECT subject, predicate, object FROM rdfs_subclass_of_named_statement

  subgraph query:
    abstract: true
    is_a: relation graph construct
    description: >-
      A subgraph query encompasses as subgraph edge and a seed/anchor object and seed/anchor predicate
    slots:
      - subject
      - predicate
      - object
      - anchor object
      - anchor predicate
    slot_usage:
      subject:
        description: subject of the subgraph edge
      predicate:
        description: predicate of the subgraph edge
      object:
        description: object of the subgraph edge
      anchor object:
        description: >-
          The entity that is used to seed the graph.
          The seed entity will bear some relationship to each subgraph edge;
          E.g. with an ancestor subgraph query, all edges will have a subject that
          descends from the ancestor
      anchor predicate:
        description: >-
          The predicate that is used to determine if an edge should be included
          based on relationship to the anchor_object.

  subgraph edge by ancestor:
    is_a: subgraph query
    description: >-
      An edge within a subgraph anchored around a set of ancestor terms
    slots:
      - subject
      - predicate
      - object
      - anchor object
      - anchor predicate
    slot_usage:
      anchor object:
        description: >-
          The ancestor term
      anchor predicate:
        description: >-
          The entailed predicate that holds between each edge subject and the ancestor
    comments:
      - Example: subgraph under uberon limb "SELECT * FROM sg_edge WHERE anchor_object='UBERON:0002101';"
      - Example: subgraph from part-descendants of uberon limb "SELECT * FROM sg_edge WHERE anchor_object='UBERON:0002101' AND ancestor_predicate='BFO:0000050';"
      - >-
        sqlview>>
          SELECT
            edge.*,
            ee.predicate AS anchor_predicate,
            ee.object AS anchor_object
          FROM edge JOIN entailed_edge AS ee ON (edge.subject = ee.subject)

  subgraph edge by descendant:
    is_a: subgraph query
    description: >-
      An edge within a subgraph anchored around a set of descendant terms
    slots:
      - subject
      - predicate
      - object
      - anchor object
      - anchor predicate
    slot_usage:
      anchor object:
        description: >-
          The descendant term
      anchor predicate:
        description: >-
          The entailed predicate that holds between the descendant and each edge subject
    comments:
      - Example: subgraph under uberon limb "SELECT * FROM sg_edge WHERE anchor_object='UBERON:0002101';"
      - >-
        sqlview>>
          SELECT
            edge.*,
            ee.predicate AS anchor_predicate,
            ee.subject AS anchor_object
          FROM edge JOIN entailed_edge AS ee ON (edge.subject = ee.object)

  subgraph edge by parent:
    is_a: subgraph query
    description: >-
      An edge within a subgraph anchored around a set of parent terms
    slots:
      - subject
      - predicate
      - object
      - anchor object
      - anchor predicate
    slot_usage:
      anchor object:
        description: >-
          The parent term
      anchor predicate:
        description: >-
          The entailed predicate that holds between each edge subject and the parent
    comments:
      - >-
        sqlview>>
          SELECT
            edge.*,
            ee.predicate AS anchor_predicate,
            ee.object AS anchor_object
          FROM edge JOIN edge AS ee ON (edge.subject = ee.subject)

  subgraph edge by child:
    is_a: subgraph query
    description: >-
      An edge within a subgraph anchored around a set of child terms
    slots:
      - subject
      - predicate
      - object
      - anchor object
      - anchor predicate
    slot_usage:
      anchor object:
        description: >-
          The child term
      anchor predicate:
        description: >-
          The entailed predicate that holds between the child and each edge subject
    comments:
      - >-
        sqlview>>
          SELECT
            edge.*,
            ee.predicate AS anchor_predicate,
            ee.subject AS anchor_object
          FROM edge JOIN edge AS ee ON (edge.subject = ee.object)

  subgraph edge by self:
    is_a: subgraph query
    description: >-
      A special null form of a subgraph query where there is no expansion
    slots:
      - subject
      - predicate
      - object
      - anchor object
      - anchor predicate
    comments:
      - >-
        sqlview>>
          SELECT
            edge.*,
            edge.predicate AS anchor_predicate,
            edge.subject AS anchor_object
          FROM edge

  entailed_edge:
    is_a: relation graph construct
    description: >-
      A relation graph edge that is inferred
    comments: >-
      - It is common to populate this via a procedure external to the database, e.g balhoff/relation-graph
    slots:
      - subject
      - predicate
      - object
    see_also:
      - https://github.com/balhoff/relation-graph
    in_subset:
      - base table
slots:
  anchor object:
    range: node
  anchor predicate:
