id: https://w3id.org/semsql/relation_graph
name: relation_graph
title: Relation Graph module
description: >-
  Module for representing Relation Graphs
license: https://creativecommons.org/publicdomain/zero/1.0/

prefixes:
  semsql_rg: https://w3id.org/semsql/relation_graph
  linkml: https://w3id.org/linkml/

default_prefix: semsql_rg
default_range: string

default_curi_maps:
  - semweb_context

imports:
  - rdf
  - owl

classes:

  relation graph construct:
    abstract: true
    description: >-
      A construct used as part of a Relation Graph
    comments:
      - Relation Graphs are complementary abstractions to OWL in which axioms of the form A SubClassOf R some C form individual edges
    todos:
      - consider moving this to its own module

  edge:
    is_a: relation graph construct
    description: >-
      A relation graph edge that connects two entities by a predicate.
      Note an edge is distinct from a statement, in that an axiom such as
      A SubClassOf R some B is represented as multiple statements, but is
      a single relation graph edge
    slots:
      - subject
      - predicate
      - object
    in_subset:
      - base table
    comments:
      - >-
        sqlview>>
          SELECT subject, predicate, object FROM owl_subclass_of_some_values_from UNION
            SELECT subject, predicate, object FROM rdfs_subclass_of_named_statement

  subgraph edge by ancestor:
    is_a: relation graph construct
    description: >-
      An edge within a subgraph
    slots:
      - subject
      - predicate
      - object
      - ancestor object
      - ancestor predicate
    comments:
      - Example: subgraph under uberon limb "SELECT * FROM sg_edge WHERE ancestor_object='UBERON:0002101';"
      - Example: subgraph from part-descendants of uberon limb "SELECT * FROM sg_edge WHERE ancestor_object='UBERON:0002101' AND ancestor_predicate='BFO:0000050';"
      - >-
        sqlview>>
          SELECT
            edge.*,
            ee.predicate AS ancestor_predicate,
            ee.object AS ancestor_object
          FROM edge JOIN entailed_edge AS ee ON (edge.subject = ee.subject)

  entailed_edge:
    is_a: relation graph construct
    description: >-
      A relation graph edge that is inferred
    comments: >-
      - It is common to populate this via a procedure external to the database, e.g balhoff/relation-graph
    slots:
      - subject
      - predicate
      - object
    see_also:
      - https://github.com/balhoff/relation-graph
    in_subset:
      - base table
slots:
  ancestor object:
    range: node
  ancestor predicate: