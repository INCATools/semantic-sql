name: rdf
description: Abstractions for working with RDF and RDFS triples
title: Semantic SQL RDF module
id: https://w3id.org/semsql/rdf
imports:
- linkml:types
license: https://creativecommons.org/publicdomain/zero/1.0/
prefixes:
  semsql_rdf: https://w3id.org/semsql/rdf
  linkml: https://w3id.org/linkml/
  sh: http://www.w3.org/ns/shacl#
default_curi_maps:
- semweb_context
default_prefix: semsql_rdf
default_range: string
subsets:
  export:
    description: Used to indicate a table/class that should be dumped as part of the
      export of a db
  base table:
    description: Indicates the class/table is typically not constructed from a view
types:
  node id type:
    description: IDs are either CURIEs, IRI, or blank nodes. IRIs are wrapped in <>s
      to distinguish them from CURIEs, but in general it is good practice to populate
      the [prefixes][Prefixes.md] table such that they are shortened to CURIEs. Blank
      nodes are ids starting with `_:`.
    see_also:
    - https://github.com/ontodev/rdftab.rs/issues/18
    typeof: uriorcurie
  literal as string type:
    typeof: string
slots:
  id:
    description: An identifier for an element. Note blank node ids are not unique
      across databases
    identifier: true
    range: node id type
  label:
    description: A label for an element
    range: string
    see_also:
      - semsql:rdfs_label_statements
    comments:
      - intended for use as a node property. Labels can also be retrieved as rdfs_label_statement objects
  subject:
    aliases:
      - about
      - source
      - head
    slot_uri: rdf:subject
    range: node
    description: The subject of the statement
  predicate:
    aliases:
      - relationship type
      - property
    slot_uri: rdf:predicate
    range: property_node
    description: The predicate of the statement
  object:
    aliases:
      - target
      - sink
      - tail
    description: Note the range of this slot is always a node. If the triple represents
      a literal, instead value will be populated
    slot_uri: rdf:object
    range: node
  stanza:
    see_also:
    - https://github.com/ontodev/rdftab.rs#stanzas
    range: node
    deprecated: this will disappear in future versions
    description: the term which this statement is about
  datatype:
    description: the rdf datatype of the value, for example, xsd:string
    comments:
      - only used when value is populated
  value:
    close_mappings:
    - rdf:object
    description: Note the range of this slot is always a string. Only used the triple
      represents a literal assertion
    range: literal as string type
    slot_uri: rdf:object
  language:
    todos:
    - use an enum
    range: string
    description: the human language in which the value is encoded, e.g. en
    comments:
      - only used when value is populated
  prefix:
    description: A standardized prefix such as 'GO' or 'rdf' or 'FlyBase'
    slot_uri: sh:prefix
    range: ncname
  base:
    description: The base URI a prefix will expand to
    slot_uri: sh:namespace
    range: uri
  description:
    slot_uri: dcterms:description
classes:
  prefix:
    description: Maps CURIEs to URIs
    in_subset:
    - export
    - base table
    slots:
    - prefix
    - base
    class_uri: sh:PrefixDeclaration
  statements:
    aliases:
    - triple
    description: Represents an RDF triple
    in_subset:
    - base table
    slots:
    - stanza
    - subject
    - predicate
    - object
    - value
    - datatype
    - language
    class_uri: rdf:Statement
  node_to_node_statement:
    description: A statement where object is non-null and value is not populated
    comments:
    - sqlview>> SELECT * FROM statements WHERE object IS NOT NULL
    is_a: statements
    abstract: true
    slot_usage:
      object:
        required: true
  node_to_value_statement:
    description: A statement where value is non-null and object is not populated
    comments:
    - sqlview>> SELECT * FROM statements WHERE value IS NOT NULL
    is_a: statements
    abstract: true
    slot_usage:
      value:
        required: true
  rdf_type_statement:
    description: A statement that indicates the asserted type of the subject entity
    is_a: node_to_node_statement
    slot_usage:
      object:
        description: The entity type
        range: class_node
    classification_rules:
      is_a: statements
      slot_conditions:
        predicate:
          equals_string: "rdf:type"
  rdfs_subclass_of_statement:
    is_a: node_to_node_statement
    slot_usage:
      subject:
        description: The subclass element of the triple
        range: class_node
      object:
        description: The superclass element of the triple
        range: class_node
    classification_rules:
      is_a: statements
      slot_conditions:
        predicate:
          equals_string: "rdfs:subClassOf"
  rdfs_subclass_of_named_statement:
    comments:
    - sqlview>> SELECT * FROM rdfs_subclass_of_statement WHERE object NOT LIKE '_:%';
    is_a: rdfs_subclass_of_statement
  rdfs_subproperty_of_statement:
    is_a: node_to_node_statement
    slot_usage:
      subject:
        description: The subproperty element of the triple
        range: property_node
      object:
        description: The superproperty element of the triple
        range: property_node
    classification_rules:
      is_a: statements
      slot_conditions:
        predicate:
          equals_string: "rdfs:subPropertyOf"
  rdfs_label_statement:
    is_a: node_to_value_statement
    slot_usage:
      value:
        description: The label value
        range: string
    classification_rules:
      is_a: statements
      slot_conditions:
        predicate:
          equals_string: "rdfs:label"
  rdfs_domain_statement:
    comments:
    - sqlview>> SELECT * FROM statements WHERE predicate='rdfs:domain'
    is_a: node_to_node_statement
  rdfs_range_statement:
    comments:
    - sqlview>> SELECT * FROM statements WHERE predicate='rdfs:range'
    is_a: node_to_node_statement
  rdf_list_statement:
    description: A statement that is used to represent aspects of RDF lists
    is_a: statements
    abstract: true
    slot_usage:
      subject:
        description: The rdf:List to which the statement applies
        range: rdf_list_node
  rdf_first_statement:
    description: A statement that connects a list to its first element. This is a
      low-level triple, it is unlikely you need to use this directly. It is used to
      define rdf_list_member_statement, which is more useful
    comments:
    - sqlview>> SELECT * FROM statements WHERE predicate='rdf:first'
    is_a: rdf_list_statement
  rdf_rest_statement:
    description: A statement that connects a list to its remaining elements. This
      is a low-level triple, it is unlikely you need to use this directly. It is used
      to define rdf_list_member_statement, which is more useful
    comments:
    - sqlview>> SELECT * FROM statements WHERE predicate='rdf:rest'
    is_a: rdf_list_statement
  rdf_rest_transitive_statement:
    comments:
    - "sqlview>>\n  WITH RECURSIVE rdf_rest_transitive_statement\n             (\n\
      \                   subject, object\n             )\n             AS\n     \
      \        (SELECT subject, object\n                FROM rdf_rest_statement\n\
      \               UNION ALL\n              SELECT\n                   rest.subject,\
      \ rest_t.object\n                FROM rdf_rest_statement AS rest\n         \
      \       JOIN rdf_rest_transitive_statement AS rest_t\n                  ON rest.object\
      \ = rest_t.subject\n             )\n          SELECT * FROM rdf_rest_transitive_statement"
    is_a: rdf_list_statement
  rdf_list_member_statement:
    comments:
    - "sqlview>>\n  SELECT\n     rest_t.subject,\n     f.object\n    FROM rdf_rest_transitive_statement\
      \ AS rest_t JOIN rdf_first_statement AS f ON (rest_t.object = f.subject)\n \
      \   UNION\n    SELECT subject,object FROM rdf_first_statement;"
    is_a: rdf_list_statement
  node:
    aliases:
    - object
    - resource
    exact_mappings:
    - rdf:Resource
    description: The basic unit of representation in an RDF or OWL graph
    comments:
    - sqlview>> SELECT distinct(subject) AS id FROM statements UNION SELECT distinct(object)
      AS id FROM statements WHERE datatype IS NOT NULL
    slots:
    - id
  blank_node:
    description: A node with an ID that is not preserved between databases
    comments:
    - sqlview>> SELECT * FROM node WHERE id LIKE '_:%'
    is_a: node
  rdf_list_node:
    description: A node representing an RDF list. Note that you will not likely need
      to use this directly.
    comments:
    - sqlview>> SELECT distinct subject AS id from rdf_type_statement WHERE object
      = 'rdf:List';
    is_a: blank_node
  iri_node:
    aliases:
    - IRI
    - named entity
    comments:
    - sqlview>> SELECT * FROM node WHERE id NOT LIKE '_:%'
    is_a: node
    slot_usage:
      id:
        pattern: '^_:'
  class_node:
    description: A node that represents an RDFS/OWL class
    comments:
    - sqlview>> SELECT distinct subject AS id from rdf_type_statement WHERE object
      = 'owl:Class';
    is_a: node
    mixins:
    - class_trait
    class_uri: owl:Class
  property_node:
    description: Note this only directly classifies nodes asserted to be rdf:Properties
    comments:
    - sqlview>> SELECT distinct subject AS id from rdf_type_statement WHERE object
      = 'owl:Property';
    is_a: node
    abstract: true
    class_uri: owl:Propery
  named_individual_node:
    description: A node that represents an OWL Named Individual
    comments:
    - sqlview>> SELECT distinct subject AS id from rdf_type_statement WHERE object
      = 'owl:NamedIndividual';
    is_a: node
    class_uri: owl:NamedIndividual
  rdf_level_summary_statistic:
    description: Abstract grouping for views/classes that provide some kind of count
      summary about an individual element
    abstract: true
    mixins:
    - is_report
    attributes:
      element:
        range: node
      count_value:
        range: integer
  count_of_predicates:
    description: 'Number of distinct usages of a predicate. NOTE MAY CHANGE: does
      not currently count existential usage in OWL'
    comments:
    - sqlview>> SELECT predicate AS element, count(*) AS count_value FROM statements
      GROUP BY predicate ORDER BY count_value DESC
    is_a: rdf_level_summary_statistic
  count_of_instantiated_classes:
    description: Number of distinct instantiations of a class. Note in many OBOs,
      classes are not directly instantiated
    comments:
    - sqlview>> SELECT object AS element, count(*) AS count_value FROM rdf_type_statement
      GROUP BY element ORDER BY count_value DESC
    is_a: rdf_level_summary_statistic
  count_of_subclasses:
    description: Number of subclasses for a given class
    comments:
    - sqlview>> SELECT sc.object AS element, count(distinct sc.subject) AS count_value
      FROM rdfs_subclass_of_statement AS sc GROUP BY sc.object ORDER BY count_value
      DESC
    is_a: rdf_level_summary_statistic
  node_trait:
    description: abstract groupings/properties for different aspects of the model
    abstract: true
    mixin: true
  class_trait:
    is_a: node_trait
    mixin: true
  property_trait:
    is_a: node_trait
    mixin: true
  individual_trait:
    is_a: node_trait
    mixin: true
  is_report:
    description: Used to describe classes/views that have a reporting function
    abstract: true
    mixin: true

