{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Semsql schema A datamodel for RDF, OWL, and OBO Ontologies designed to work harmoniously with SQL databases. See https://github.com/cmungall/semantic-sql for GitHub repo Classes Node BlankNode AnonymousExpression AnonymousClassExpression OwlRestriction OwlAllValuesFrom OwlSomeValuesFrom AnonymousIndividualExpression AnonymousPropertyExpression RdfListNode - A node representing an RDF list ClassNode IriNode NamedIndividualNode OntologyNode - A node representing an ontology PropertyNode AnnotationPropertyNode ObjectPropertyNode TransitivePropertyNode OwlComplexAxiom - An axiom that is composed of two or more statements OwlEquivalentToIntersectionMember - Composition of OwlEquivalentClass, OwlIntersectionOf, and RdfListMember; C = X1 and ... and Xn OwlSubclassOfSomeValuesFrom - Composition of subClassOf and SomeValuesFrom Prefix - Maps CURIEs to URIs Problem - Represents an instance of a problem pertaining to conformance to OBO guidelines AllProblems LexicalProblem - a problem with the textual value of an annotation property NodeWithTwoLabelsProblem PropertyUsedWithDatatypeValuesAndObjects - A problem in which the same property is used two two different ways, one in which the range is a literal value, the other where it is an object. TrailingWhitespaceProblem RdfLevelSummaryStatistic CountOfInstantiatedClasses CountOfPredicates RelationGraphConstruct - A construct used as part of a Relation Graph Edge - A relation graph edge that connects two entities by a predicate. Note an edge is distinct from a statement, in that an axiom such as A SubClassOf R some B is represented as multiple statements, but is a single relation graph edge EntailedEdge - A relation graph edge that is inferred RepairAction - Represents an action that needs to be taken to repair a problem Statements - Represents an RDF triple NodeToNodeStatement - A statement where object is non-null and value is not populated OwlDisjointClassStatement OwlEquivalentClassStatement RdfTypeStatement - A statement that indicates the asserted type of the subject entity RdfsSubclassOfStatement NodeToValueStatement - A statement where value is non-null and object is not populated HasMappingStatement HasDbxrefStatement HasMatchStatement HasBroadMatchStatement HasExactMatchStatement HasNarrowMatchStatement HasRelatedMatchStatement HasOioSynonymStatement HasBroadSynonymStatement HasExactSynonymStatement HasNarrowSynonymStatement HasRelatedSynonymStatement HasSynonymStatement RdfsLabelStatement RdfListStatement - A statement that is used to represent aspects of RDF lists RdfFirstStatement - A statement that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfListMemberStatement RdfRestStatement - A statement that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfRestTransitiveStatement Mixins ClassTrait IndividualTrait IsReport NodeTrait ClassTrait IndividualTrait PropertyTrait PropertyTrait Slots base datatype description filler id owl restriction\u279eid - the id of the restriction language \u279elabel1 \u279elabel2 object - Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated node to node statement\u279eobject owl disjoint class statement\u279eobject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279eobject - One of the two classes that are equivalent. No significance to subject vs object rdf type statement\u279eobject - The entity type rdfs subclass of statement\u279eobject - The superclass element of the triple owl equivalent to intersection member\u279eobject - a class expression that forms the defining expression owl subclass of some values from\u279eobject - the class D in the axiom C subClassOf P some D on property predicate owl subclass of some values from\u279epredicate - the predicate P in the axiom C subClassOf P some D prefix \u279eelement \u279enumber_of_usages restriction stanza subject owl disjoint class statement\u279esubject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279esubject - One of the two classes that are equivalent. No significance to subject vs object owl equivalent to intersection member\u279esubject - the defined class owl subclass of some values from\u279esubject - the class C in the axiom C subClassOf P some D problem\u279esubject - The thing that is problematic rdf list statement\u279esubject - The rdf:List to which the statement applies rdfs subclass of statement\u279esubject - The subclass element of the triple repair action\u279esubject - The thing that is problematic value - Note the range of this slot is always a string. Only used the triple represents a literal assertion node to value statement\u279evalue Enums Types Built in Bool Decimal ElementIdentifier NCName NodeIdentifier URI URIorCURIE XSDDate XSDDateTime XSDTime float int str Defined Boolean ( Bool ) - A binary (true or false) value Date ( XSDDate ) - a date (year, month and day) in an idealized calendar Datetime ( XSDDateTime ) - The combination of a date and time Decimal ( Decimal ) - A real number with arbitrary precision that conforms to the xsd:decimal specification Double ( float ) - A real number that conforms to the xsd:double specification Float ( float ) - A real number that conforms to the xsd:float specification Integer ( int ) - An integer LiteralAsStringType ( String ) Ncname ( NCName ) - Prefix part of CURIE NodeIdType ( Uriorcurie ) Nodeidentifier ( NodeIdentifier ) - A URI, CURIE or BNODE that represents a node in a model. Objectidentifier ( ElementIdentifier ) - A URI or CURIE that represents an object in the model. String ( str ) - A character string Time ( XSDTime ) - A time object represents a (local) time of day, independent of any particular day Uri ( URI ) - a complete URI Uriorcurie ( URIorCURIE ) - a URI or a CURIE","title":"Home"},{"location":"#semsql-schema","text":"A datamodel for RDF, OWL, and OBO Ontologies designed to work harmoniously with SQL databases. See https://github.com/cmungall/semantic-sql for GitHub repo","title":"Semsql schema"},{"location":"#classes","text":"Node BlankNode AnonymousExpression AnonymousClassExpression OwlRestriction OwlAllValuesFrom OwlSomeValuesFrom AnonymousIndividualExpression AnonymousPropertyExpression RdfListNode - A node representing an RDF list ClassNode IriNode NamedIndividualNode OntologyNode - A node representing an ontology PropertyNode AnnotationPropertyNode ObjectPropertyNode TransitivePropertyNode OwlComplexAxiom - An axiom that is composed of two or more statements OwlEquivalentToIntersectionMember - Composition of OwlEquivalentClass, OwlIntersectionOf, and RdfListMember; C = X1 and ... and Xn OwlSubclassOfSomeValuesFrom - Composition of subClassOf and SomeValuesFrom Prefix - Maps CURIEs to URIs Problem - Represents an instance of a problem pertaining to conformance to OBO guidelines AllProblems LexicalProblem - a problem with the textual value of an annotation property NodeWithTwoLabelsProblem PropertyUsedWithDatatypeValuesAndObjects - A problem in which the same property is used two two different ways, one in which the range is a literal value, the other where it is an object. TrailingWhitespaceProblem RdfLevelSummaryStatistic CountOfInstantiatedClasses CountOfPredicates RelationGraphConstruct - A construct used as part of a Relation Graph Edge - A relation graph edge that connects two entities by a predicate. Note an edge is distinct from a statement, in that an axiom such as A SubClassOf R some B is represented as multiple statements, but is a single relation graph edge EntailedEdge - A relation graph edge that is inferred RepairAction - Represents an action that needs to be taken to repair a problem Statements - Represents an RDF triple NodeToNodeStatement - A statement where object is non-null and value is not populated OwlDisjointClassStatement OwlEquivalentClassStatement RdfTypeStatement - A statement that indicates the asserted type of the subject entity RdfsSubclassOfStatement NodeToValueStatement - A statement where value is non-null and object is not populated HasMappingStatement HasDbxrefStatement HasMatchStatement HasBroadMatchStatement HasExactMatchStatement HasNarrowMatchStatement HasRelatedMatchStatement HasOioSynonymStatement HasBroadSynonymStatement HasExactSynonymStatement HasNarrowSynonymStatement HasRelatedSynonymStatement HasSynonymStatement RdfsLabelStatement RdfListStatement - A statement that is used to represent aspects of RDF lists RdfFirstStatement - A statement that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfListMemberStatement RdfRestStatement - A statement that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfRestTransitiveStatement","title":"Classes"},{"location":"#mixins","text":"ClassTrait IndividualTrait IsReport NodeTrait ClassTrait IndividualTrait PropertyTrait PropertyTrait","title":"Mixins"},{"location":"#slots","text":"base datatype description filler id owl restriction\u279eid - the id of the restriction language \u279elabel1 \u279elabel2 object - Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated node to node statement\u279eobject owl disjoint class statement\u279eobject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279eobject - One of the two classes that are equivalent. No significance to subject vs object rdf type statement\u279eobject - The entity type rdfs subclass of statement\u279eobject - The superclass element of the triple owl equivalent to intersection member\u279eobject - a class expression that forms the defining expression owl subclass of some values from\u279eobject - the class D in the axiom C subClassOf P some D on property predicate owl subclass of some values from\u279epredicate - the predicate P in the axiom C subClassOf P some D prefix \u279eelement \u279enumber_of_usages restriction stanza subject owl disjoint class statement\u279esubject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279esubject - One of the two classes that are equivalent. No significance to subject vs object owl equivalent to intersection member\u279esubject - the defined class owl subclass of some values from\u279esubject - the class C in the axiom C subClassOf P some D problem\u279esubject - The thing that is problematic rdf list statement\u279esubject - The rdf:List to which the statement applies rdfs subclass of statement\u279esubject - The subclass element of the triple repair action\u279esubject - The thing that is problematic value - Note the range of this slot is always a string. Only used the triple represents a literal assertion node to value statement\u279evalue","title":"Slots"},{"location":"#enums","text":"","title":"Enums"},{"location":"#types","text":"","title":"Types"},{"location":"#built-in","text":"Bool Decimal ElementIdentifier NCName NodeIdentifier URI URIorCURIE XSDDate XSDDateTime XSDTime float int str","title":"Built in"},{"location":"#defined","text":"Boolean ( Bool ) - A binary (true or false) value Date ( XSDDate ) - a date (year, month and day) in an idealized calendar Datetime ( XSDDateTime ) - The combination of a date and time Decimal ( Decimal ) - A real number with arbitrary precision that conforms to the xsd:decimal specification Double ( float ) - A real number that conforms to the xsd:double specification Float ( float ) - A real number that conforms to the xsd:float specification Integer ( int ) - An integer LiteralAsStringType ( String ) Ncname ( NCName ) - Prefix part of CURIE NodeIdType ( Uriorcurie ) Nodeidentifier ( NodeIdentifier ) - A URI, CURIE or BNODE that represents a node in a model. Objectidentifier ( ElementIdentifier ) - A URI or CURIE that represents an object in the model. String ( str ) - A character string Time ( XSDTime ) - A time object represents a (local) time of day, independent of any particular day Uri ( URI ) - a complete URI Uriorcurie ( URIorCURIE ) - a URI or a CURIE","title":"Defined"},{"location":"AllProblems/","text":"Class: AllProblems URI: semsql:AllProblems Parents is_a: Problem - Represents an instance of a problem pertaining to conformance to OBO guidelines Attributes Inherited from problem: description OPT range: String problem\u279esubject OPT Description: The thing that is problematic range: Node Other properties Comments: sqlview>> SELECT * FROM node_with_two_labels_problem","title":"Class: AllProblems"},{"location":"AllProblems/#class-allproblems","text":"URI: semsql:AllProblems","title":"Class: AllProblems"},{"location":"AllProblems/#parents","text":"is_a: Problem - Represents an instance of a problem pertaining to conformance to OBO guidelines","title":"Parents"},{"location":"AllProblems/#attributes","text":"","title":"Attributes"},{"location":"AllProblems/#inherited-from-problem","text":"description OPT range: String problem\u279esubject OPT Description: The thing that is problematic range: Node","title":"Inherited from problem:"},{"location":"AllProblems/#other-properties","text":"Comments: sqlview>> SELECT * FROM node_with_two_labels_problem","title":"Other properties"},{"location":"AnnotationPropertyNode/","text":"Class: AnnotationPropertyNode URI: semsql:AnnotationPropertyNode Parents is_a: PropertyNode Attributes Inherited from property node: id REQ range: NodeIdType Other properties Comments: sqlview>> SELECT DISTINCT subject AS id FROM rdf_type_statement WHERE object='owl:AnnotatonProperty'","title":"Class: AnnotationPropertyNode"},{"location":"AnnotationPropertyNode/#class-annotationpropertynode","text":"URI: semsql:AnnotationPropertyNode","title":"Class: AnnotationPropertyNode"},{"location":"AnnotationPropertyNode/#parents","text":"is_a: PropertyNode","title":"Parents"},{"location":"AnnotationPropertyNode/#attributes","text":"","title":"Attributes"},{"location":"AnnotationPropertyNode/#inherited-from-property-node","text":"id REQ range: NodeIdType","title":"Inherited from property node:"},{"location":"AnnotationPropertyNode/#other-properties","text":"Comments: sqlview>> SELECT DISTINCT subject AS id FROM rdf_type_statement WHERE object='owl:AnnotatonProperty'","title":"Other properties"},{"location":"AnonymousClassExpression/","text":"Class: AnonymousClassExpression URI: semsql:AnonymousClassExpression Parents is_a: AnonymousExpression Uses Mixins mixin: ClassTrait Children OwlRestriction Referenced by class Attributes Inherited from anonymous expression: id REQ range: NodeIdType","title":"Class: AnonymousClassExpression"},{"location":"AnonymousClassExpression/#class-anonymousclassexpression","text":"URI: semsql:AnonymousClassExpression","title":"Class: AnonymousClassExpression"},{"location":"AnonymousClassExpression/#parents","text":"is_a: AnonymousExpression","title":"Parents"},{"location":"AnonymousClassExpression/#uses-mixins","text":"mixin: ClassTrait","title":"Uses Mixins"},{"location":"AnonymousClassExpression/#children","text":"OwlRestriction","title":"Children"},{"location":"AnonymousClassExpression/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"AnonymousClassExpression/#attributes","text":"","title":"Attributes"},{"location":"AnonymousClassExpression/#inherited-from-anonymous-expression","text":"id REQ range: NodeIdType","title":"Inherited from anonymous expression:"},{"location":"AnonymousExpression/","text":"Class: AnonymousExpression URI: semsql:AnonymousExpression Parents is_a: BlankNode Children AnonymousClassExpression AnonymousIndividualExpression AnonymousPropertyExpression Referenced by class Attributes Inherited from blank node: id REQ range: NodeIdType","title":"Class: AnonymousExpression"},{"location":"AnonymousExpression/#class-anonymousexpression","text":"URI: semsql:AnonymousExpression","title":"Class: AnonymousExpression"},{"location":"AnonymousExpression/#parents","text":"is_a: BlankNode","title":"Parents"},{"location":"AnonymousExpression/#children","text":"AnonymousClassExpression AnonymousIndividualExpression AnonymousPropertyExpression","title":"Children"},{"location":"AnonymousExpression/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"AnonymousExpression/#attributes","text":"","title":"Attributes"},{"location":"AnonymousExpression/#inherited-from-blank-node","text":"id REQ range: NodeIdType","title":"Inherited from blank node:"},{"location":"AnonymousIndividualExpression/","text":"Class: AnonymousIndividualExpression URI: semsql:AnonymousIndividualExpression Parents is_a: AnonymousExpression Uses Mixins mixin: IndividualTrait Attributes Inherited from anonymous expression: id REQ range: NodeIdType","title":"Class: AnonymousIndividualExpression"},{"location":"AnonymousIndividualExpression/#class-anonymousindividualexpression","text":"URI: semsql:AnonymousIndividualExpression","title":"Class: AnonymousIndividualExpression"},{"location":"AnonymousIndividualExpression/#parents","text":"is_a: AnonymousExpression","title":"Parents"},{"location":"AnonymousIndividualExpression/#uses-mixins","text":"mixin: IndividualTrait","title":"Uses Mixins"},{"location":"AnonymousIndividualExpression/#attributes","text":"","title":"Attributes"},{"location":"AnonymousIndividualExpression/#inherited-from-anonymous-expression","text":"id REQ range: NodeIdType","title":"Inherited from anonymous expression:"},{"location":"AnonymousPropertyExpression/","text":"Class: AnonymousPropertyExpression URI: semsql:AnonymousPropertyExpression Parents is_a: AnonymousExpression Uses Mixins mixin: PropertyTrait Attributes Inherited from anonymous expression: id REQ range: NodeIdType","title":"Class: AnonymousPropertyExpression"},{"location":"AnonymousPropertyExpression/#class-anonymouspropertyexpression","text":"URI: semsql:AnonymousPropertyExpression","title":"Class: AnonymousPropertyExpression"},{"location":"AnonymousPropertyExpression/#parents","text":"is_a: AnonymousExpression","title":"Parents"},{"location":"AnonymousPropertyExpression/#uses-mixins","text":"mixin: PropertyTrait","title":"Uses Mixins"},{"location":"AnonymousPropertyExpression/#attributes","text":"","title":"Attributes"},{"location":"AnonymousPropertyExpression/#inherited-from-anonymous-expression","text":"id REQ range: NodeIdType","title":"Inherited from anonymous expression:"},{"location":"BlankNode/","text":"Class: BlankNode URI: semsql:BlankNode Parents is_a: Node Children AnonymousExpression RdfListNode - A node representing an RDF list Referenced by class None restriction OPT BlankNode Attributes Inherited from node: id REQ range: NodeIdType Other properties Comments: sqlview>> SELECT * FROM node WHERE id LIKE '_:%'","title":"Class: BlankNode"},{"location":"BlankNode/#class-blanknode","text":"URI: semsql:BlankNode","title":"Class: BlankNode"},{"location":"BlankNode/#parents","text":"is_a: Node","title":"Parents"},{"location":"BlankNode/#children","text":"AnonymousExpression RdfListNode - A node representing an RDF list","title":"Children"},{"location":"BlankNode/#referenced-by-class","text":"None restriction OPT BlankNode","title":"Referenced by class"},{"location":"BlankNode/#attributes","text":"","title":"Attributes"},{"location":"BlankNode/#inherited-from-node","text":"id REQ range: NodeIdType","title":"Inherited from node:"},{"location":"BlankNode/#other-properties","text":"Comments: sqlview>> SELECT * FROM node WHERE id LIKE '_:%'","title":"Other properties"},{"location":"ClassNode/","text":"Class: ClassNode URI: semsql:ClassNode Parents is_a: Node Uses Mixins mixin: ClassTrait Referenced by class None filler OPT ClassNode OwlDisjointClassStatement owl disjoint class statement\u279eobject REQ ClassNode OwlDisjointClassStatement owl disjoint class statement\u279esubject OPT ClassNode OwlEquivalentClassStatement owl equivalent class statement\u279eobject REQ ClassNode OwlEquivalentClassStatement owl equivalent class statement\u279esubject OPT ClassNode RdfTypeStatement rdf type statement\u279eobject REQ ClassNode RdfsSubclassOfStatement rdfs subclass of statement\u279eobject REQ ClassNode RdfsSubclassOfStatement rdfs subclass of statement\u279esubject OPT ClassNode Attributes Inherited from node: id REQ range: NodeIdType Other properties Mappings: owl:Class Comments: sqlview>> SELECT distinct subject AS id from rdf_type_statement WHERE object = 'owl:Class';","title":"Class: ClassNode"},{"location":"ClassNode/#class-classnode","text":"URI: semsql:ClassNode","title":"Class: ClassNode"},{"location":"ClassNode/#parents","text":"is_a: Node","title":"Parents"},{"location":"ClassNode/#uses-mixins","text":"mixin: ClassTrait","title":"Uses Mixins"},{"location":"ClassNode/#referenced-by-class","text":"None filler OPT ClassNode OwlDisjointClassStatement owl disjoint class statement\u279eobject REQ ClassNode OwlDisjointClassStatement owl disjoint class statement\u279esubject OPT ClassNode OwlEquivalentClassStatement owl equivalent class statement\u279eobject REQ ClassNode OwlEquivalentClassStatement owl equivalent class statement\u279esubject OPT ClassNode RdfTypeStatement rdf type statement\u279eobject REQ ClassNode RdfsSubclassOfStatement rdfs subclass of statement\u279eobject REQ ClassNode RdfsSubclassOfStatement rdfs subclass of statement\u279esubject OPT ClassNode","title":"Referenced by class"},{"location":"ClassNode/#attributes","text":"","title":"Attributes"},{"location":"ClassNode/#inherited-from-node","text":"id REQ range: NodeIdType","title":"Inherited from node:"},{"location":"ClassNode/#other-properties","text":"Mappings: owl:Class Comments: sqlview>> SELECT distinct subject AS id from rdf_type_statement WHERE object = 'owl:Class';","title":"Other properties"},{"location":"ClassTrait/","text":"Class: ClassTrait URI: semsql:ClassTrait Parents is_a: NodeTrait Mixin for AnonymousClassExpression (mixin) ClassNode (mixin) Referenced by class Attributes","title":"Class: ClassTrait"},{"location":"ClassTrait/#class-classtrait","text":"URI: semsql:ClassTrait","title":"Class: ClassTrait"},{"location":"ClassTrait/#parents","text":"is_a: NodeTrait","title":"Parents"},{"location":"ClassTrait/#mixin-for","text":"AnonymousClassExpression (mixin) ClassNode (mixin)","title":"Mixin for"},{"location":"ClassTrait/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"ClassTrait/#attributes","text":"","title":"Attributes"},{"location":"CountOfInstantiatedClasses/","text":"Class: CountOfInstantiatedClasses URI: semsql:CountOfInstantiatedClasses Parents is_a: RdfLevelSummaryStatistic Attributes Inherited from rdf level summary statistic: \u279eelement OPT range: Node \u279enumber_of_usages OPT range: Integer Other properties Comments: sqlview>> SELECT object AS element, count(*) AS number_of_usages FROM rdf_type_statement GROUP BY element ORDER BY number_of_usages DESC","title":"Class: CountOfInstantiatedClasses"},{"location":"CountOfInstantiatedClasses/#class-countofinstantiatedclasses","text":"URI: semsql:CountOfInstantiatedClasses","title":"Class: CountOfInstantiatedClasses"},{"location":"CountOfInstantiatedClasses/#parents","text":"is_a: RdfLevelSummaryStatistic","title":"Parents"},{"location":"CountOfInstantiatedClasses/#attributes","text":"","title":"Attributes"},{"location":"CountOfInstantiatedClasses/#inherited-from-rdf-level-summary-statistic","text":"\u279eelement OPT range: Node \u279enumber_of_usages OPT range: Integer","title":"Inherited from rdf level summary statistic:"},{"location":"CountOfInstantiatedClasses/#other-properties","text":"Comments: sqlview>> SELECT object AS element, count(*) AS number_of_usages FROM rdf_type_statement GROUP BY element ORDER BY number_of_usages DESC","title":"Other properties"},{"location":"CountOfPredicates/","text":"Class: CountOfPredicates URI: semsql:CountOfPredicates Parents is_a: RdfLevelSummaryStatistic Attributes Inherited from rdf level summary statistic: \u279eelement OPT range: Node \u279enumber_of_usages OPT range: Integer Other properties Comments: sqlview>> SELECT predicate AS element, count(*) AS number_of_usages FROM statements GROUP BY predicate ORDER BY number_of_usages DESC","title":"Class: CountOfPredicates"},{"location":"CountOfPredicates/#class-countofpredicates","text":"URI: semsql:CountOfPredicates","title":"Class: CountOfPredicates"},{"location":"CountOfPredicates/#parents","text":"is_a: RdfLevelSummaryStatistic","title":"Parents"},{"location":"CountOfPredicates/#attributes","text":"","title":"Attributes"},{"location":"CountOfPredicates/#inherited-from-rdf-level-summary-statistic","text":"\u279eelement OPT range: Node \u279enumber_of_usages OPT range: Integer","title":"Inherited from rdf level summary statistic:"},{"location":"CountOfPredicates/#other-properties","text":"Comments: sqlview>> SELECT predicate AS element, count(*) AS number_of_usages FROM statements GROUP BY predicate ORDER BY number_of_usages DESC","title":"Other properties"},{"location":"Edge/","text":"Class: Edge A relation graph edge that connects two entities by a predicate. Note an edge is distinct from a statement, in that an axiom such as A SubClassOf R some B is represented as multiple statements, but is a single relation graph edge URI: semsql:Edge Parents is_a: RelationGraphConstruct - A construct used as part of a Relation Graph Attributes Own object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String subject OPT range: Node","title":"Class: Edge"},{"location":"Edge/#class-edge","text":"A relation graph edge that connects two entities by a predicate. Note an edge is distinct from a statement, in that an axiom such as A SubClassOf R some B is represented as multiple statements, but is a single relation graph edge URI: semsql:Edge","title":"Class: Edge"},{"location":"Edge/#parents","text":"is_a: RelationGraphConstruct - A construct used as part of a Relation Graph","title":"Parents"},{"location":"Edge/#attributes","text":"","title":"Attributes"},{"location":"Edge/#own","text":"object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String subject OPT range: Node","title":"Own"},{"location":"EntailedEdge/","text":"Class: EntailedEdge A relation graph edge that is inferred URI: semsql:EntailedEdge Parents is_a: RelationGraphConstruct - A construct used as part of a Relation Graph Attributes Own object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String subject OPT range: Node Other properties See also: https://github.com/balhoff/relation-graph","title":"Class: EntailedEdge"},{"location":"EntailedEdge/#class-entailededge","text":"A relation graph edge that is inferred URI: semsql:EntailedEdge","title":"Class: EntailedEdge"},{"location":"EntailedEdge/#parents","text":"is_a: RelationGraphConstruct - A construct used as part of a Relation Graph","title":"Parents"},{"location":"EntailedEdge/#attributes","text":"","title":"Attributes"},{"location":"EntailedEdge/#own","text":"object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String subject OPT range: Node","title":"Own"},{"location":"EntailedEdge/#other-properties","text":"See also: https://github.com/balhoff/relation-graph","title":"Other properties"},{"location":"HasBroadMatchStatement/","text":"Class: HasBroadMatchStatement URI: semsql:HasBroadMatchStatement Parents is_a: HasMatchStatement Attributes Inherited from has match statement: datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String stanza OPT range: Node subject OPT range: Node Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='skos:hasBroadMatch' Exact Mappings: skos:hasBroadMatch","title":"Class: HasBroadMatchStatement"},{"location":"HasBroadMatchStatement/#class-hasbroadmatchstatement","text":"URI: semsql:HasBroadMatchStatement","title":"Class: HasBroadMatchStatement"},{"location":"HasBroadMatchStatement/#parents","text":"is_a: HasMatchStatement","title":"Parents"},{"location":"HasBroadMatchStatement/#attributes","text":"","title":"Attributes"},{"location":"HasBroadMatchStatement/#inherited-from-has-match-statement","text":"datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String stanza OPT range: Node subject OPT range: Node","title":"Inherited from has match statement:"},{"location":"HasBroadMatchStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='skos:hasBroadMatch' Exact Mappings: skos:hasBroadMatch","title":"Other properties"},{"location":"HasBroadSynonymStatement/","text":"Class: HasBroadSynonymStatement URI: semsql:HasBroadSynonymStatement Parents is_a: HasOioSynonymStatement Attributes Inherited from has oio synonym statement: datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String stanza OPT range: Node subject OPT range: Node Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='oio:hasBroadSynonym' Exact Mappings: oio:hasBroadSynonym","title":"Class: HasBroadSynonymStatement"},{"location":"HasBroadSynonymStatement/#class-hasbroadsynonymstatement","text":"URI: semsql:HasBroadSynonymStatement","title":"Class: HasBroadSynonymStatement"},{"location":"HasBroadSynonymStatement/#parents","text":"is_a: HasOioSynonymStatement","title":"Parents"},{"location":"HasBroadSynonymStatement/#attributes","text":"","title":"Attributes"},{"location":"HasBroadSynonymStatement/#inherited-from-has-oio-synonym-statement","text":"datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String stanza OPT range: Node subject OPT range: Node","title":"Inherited from has oio synonym statement:"},{"location":"HasBroadSynonymStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='oio:hasBroadSynonym' Exact Mappings: oio:hasBroadSynonym","title":"Other properties"},{"location":"HasDbxrefStatement/","text":"Class: HasDbxrefStatement URI: semsql:HasDbxrefStatement Parents is_a: HasMappingStatement Attributes Inherited from has mapping statement: datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String stanza OPT range: Node subject OPT range: Node Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='oio:hasDbXref'","title":"Class: HasDbxrefStatement"},{"location":"HasDbxrefStatement/#class-hasdbxrefstatement","text":"URI: semsql:HasDbxrefStatement","title":"Class: HasDbxrefStatement"},{"location":"HasDbxrefStatement/#parents","text":"is_a: HasMappingStatement","title":"Parents"},{"location":"HasDbxrefStatement/#attributes","text":"","title":"Attributes"},{"location":"HasDbxrefStatement/#inherited-from-has-mapping-statement","text":"datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String stanza OPT range: Node subject OPT range: Node","title":"Inherited from has mapping statement:"},{"location":"HasDbxrefStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='oio:hasDbXref'","title":"Other properties"},{"location":"HasExactMatchStatement/","text":"Class: HasExactMatchStatement URI: semsql:HasExactMatchStatement Parents is_a: HasMatchStatement Attributes Inherited from has match statement: datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String stanza OPT range: Node subject OPT range: Node Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='skos:hasExactMatch' Exact Mappings: skos:hasExactMatch","title":"Class: HasExactMatchStatement"},{"location":"HasExactMatchStatement/#class-hasexactmatchstatement","text":"URI: semsql:HasExactMatchStatement","title":"Class: HasExactMatchStatement"},{"location":"HasExactMatchStatement/#parents","text":"is_a: HasMatchStatement","title":"Parents"},{"location":"HasExactMatchStatement/#attributes","text":"","title":"Attributes"},{"location":"HasExactMatchStatement/#inherited-from-has-match-statement","text":"datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String stanza OPT range: Node subject OPT range: Node","title":"Inherited from has match statement:"},{"location":"HasExactMatchStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='skos:hasExactMatch' Exact Mappings: skos:hasExactMatch","title":"Other properties"},{"location":"HasExactSynonymStatement/","text":"Class: HasExactSynonymStatement URI: semsql:HasExactSynonymStatement Parents is_a: HasOioSynonymStatement Attributes Inherited from has oio synonym statement: datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String stanza OPT range: Node subject OPT range: Node Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='oio:hasExactSynonym' Exact Mappings: oio:hasExactSynonym","title":"Class: HasExactSynonymStatement"},{"location":"HasExactSynonymStatement/#class-hasexactsynonymstatement","text":"URI: semsql:HasExactSynonymStatement","title":"Class: HasExactSynonymStatement"},{"location":"HasExactSynonymStatement/#parents","text":"is_a: HasOioSynonymStatement","title":"Parents"},{"location":"HasExactSynonymStatement/#attributes","text":"","title":"Attributes"},{"location":"HasExactSynonymStatement/#inherited-from-has-oio-synonym-statement","text":"datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String stanza OPT range: Node subject OPT range: Node","title":"Inherited from has oio synonym statement:"},{"location":"HasExactSynonymStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='oio:hasExactSynonym' Exact Mappings: oio:hasExactSynonym","title":"Other properties"},{"location":"HasMappingStatement/","text":"Class: HasMappingStatement URI: semsql:HasMappingStatement Parents is_a: NodeToValueStatement - A statement where value is non-null and object is not populated Children HasDbxrefStatement Referenced by class Attributes Inherited from node to value statement: datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String stanza OPT range: Node subject OPT range: Node","title":"Class: HasMappingStatement"},{"location":"HasMappingStatement/#class-hasmappingstatement","text":"URI: semsql:HasMappingStatement","title":"Class: HasMappingStatement"},{"location":"HasMappingStatement/#parents","text":"is_a: NodeToValueStatement - A statement where value is non-null and object is not populated","title":"Parents"},{"location":"HasMappingStatement/#children","text":"HasDbxrefStatement","title":"Children"},{"location":"HasMappingStatement/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"HasMappingStatement/#attributes","text":"","title":"Attributes"},{"location":"HasMappingStatement/#inherited-from-node-to-value-statement","text":"datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String stanza OPT range: Node subject OPT range: Node","title":"Inherited from node to value statement:"},{"location":"HasMatchStatement/","text":"Class: HasMatchStatement URI: semsql:HasMatchStatement Parents is_a: NodeToValueStatement - A statement where value is non-null and object is not populated Children HasBroadMatchStatement HasExactMatchStatement HasNarrowMatchStatement HasRelatedMatchStatement Referenced by class Attributes Inherited from node to value statement: datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String stanza OPT range: Node subject OPT range: Node","title":"Class: HasMatchStatement"},{"location":"HasMatchStatement/#class-hasmatchstatement","text":"URI: semsql:HasMatchStatement","title":"Class: HasMatchStatement"},{"location":"HasMatchStatement/#parents","text":"is_a: NodeToValueStatement - A statement where value is non-null and object is not populated","title":"Parents"},{"location":"HasMatchStatement/#children","text":"HasBroadMatchStatement HasExactMatchStatement HasNarrowMatchStatement HasRelatedMatchStatement","title":"Children"},{"location":"HasMatchStatement/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"HasMatchStatement/#attributes","text":"","title":"Attributes"},{"location":"HasMatchStatement/#inherited-from-node-to-value-statement","text":"datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String stanza OPT range: Node subject OPT range: Node","title":"Inherited from node to value statement:"},{"location":"HasNarrowMatchStatement/","text":"Class: HasNarrowMatchStatement URI: semsql:HasNarrowMatchStatement Parents is_a: HasMatchStatement Attributes Inherited from has match statement: datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String stanza OPT range: Node subject OPT range: Node Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='skos:hasNarrowMatch' Exact Mappings: skos:hasNarrowMatch","title":"Class: HasNarrowMatchStatement"},{"location":"HasNarrowMatchStatement/#class-hasnarrowmatchstatement","text":"URI: semsql:HasNarrowMatchStatement","title":"Class: HasNarrowMatchStatement"},{"location":"HasNarrowMatchStatement/#parents","text":"is_a: HasMatchStatement","title":"Parents"},{"location":"HasNarrowMatchStatement/#attributes","text":"","title":"Attributes"},{"location":"HasNarrowMatchStatement/#inherited-from-has-match-statement","text":"datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String stanza OPT range: Node subject OPT range: Node","title":"Inherited from has match statement:"},{"location":"HasNarrowMatchStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='skos:hasNarrowMatch' Exact Mappings: skos:hasNarrowMatch","title":"Other properties"},{"location":"HasNarrowSynonymStatement/","text":"Class: HasNarrowSynonymStatement URI: semsql:HasNarrowSynonymStatement Parents is_a: HasOioSynonymStatement Attributes Inherited from has oio synonym statement: datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String stanza OPT range: Node subject OPT range: Node Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='oio:hasNarrowSynonym' Exact Mappings: oio:hasNarrowSynonym","title":"Class: HasNarrowSynonymStatement"},{"location":"HasNarrowSynonymStatement/#class-hasnarrowsynonymstatement","text":"URI: semsql:HasNarrowSynonymStatement","title":"Class: HasNarrowSynonymStatement"},{"location":"HasNarrowSynonymStatement/#parents","text":"is_a: HasOioSynonymStatement","title":"Parents"},{"location":"HasNarrowSynonymStatement/#attributes","text":"","title":"Attributes"},{"location":"HasNarrowSynonymStatement/#inherited-from-has-oio-synonym-statement","text":"datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String stanza OPT range: Node subject OPT range: Node","title":"Inherited from has oio synonym statement:"},{"location":"HasNarrowSynonymStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='oio:hasNarrowSynonym' Exact Mappings: oio:hasNarrowSynonym","title":"Other properties"},{"location":"HasOioSynonymStatement/","text":"Class: HasOioSynonymStatement URI: semsql:HasOioSynonymStatement Parents is_a: NodeToValueStatement - A statement where value is non-null and object is not populated Children HasBroadSynonymStatement HasExactSynonymStatement HasNarrowSynonymStatement HasRelatedSynonymStatement Referenced by class Attributes Inherited from node to value statement: datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String stanza OPT range: Node subject OPT range: Node","title":"Class: HasOioSynonymStatement"},{"location":"HasOioSynonymStatement/#class-hasoiosynonymstatement","text":"URI: semsql:HasOioSynonymStatement","title":"Class: HasOioSynonymStatement"},{"location":"HasOioSynonymStatement/#parents","text":"is_a: NodeToValueStatement - A statement where value is non-null and object is not populated","title":"Parents"},{"location":"HasOioSynonymStatement/#children","text":"HasBroadSynonymStatement HasExactSynonymStatement HasNarrowSynonymStatement HasRelatedSynonymStatement","title":"Children"},{"location":"HasOioSynonymStatement/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"HasOioSynonymStatement/#attributes","text":"","title":"Attributes"},{"location":"HasOioSynonymStatement/#inherited-from-node-to-value-statement","text":"datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String stanza OPT range: Node subject OPT range: Node","title":"Inherited from node to value statement:"},{"location":"HasRelatedMatchStatement/","text":"Class: HasRelatedMatchStatement URI: semsql:HasRelatedMatchStatement Parents is_a: HasMatchStatement Attributes Inherited from has match statement: datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String stanza OPT range: Node subject OPT range: Node Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='skos:hasRelatedMatch' Exact Mappings: skos:hasRelatedMatch","title":"Class: HasRelatedMatchStatement"},{"location":"HasRelatedMatchStatement/#class-hasrelatedmatchstatement","text":"URI: semsql:HasRelatedMatchStatement","title":"Class: HasRelatedMatchStatement"},{"location":"HasRelatedMatchStatement/#parents","text":"is_a: HasMatchStatement","title":"Parents"},{"location":"HasRelatedMatchStatement/#attributes","text":"","title":"Attributes"},{"location":"HasRelatedMatchStatement/#inherited-from-has-match-statement","text":"datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String stanza OPT range: Node subject OPT range: Node","title":"Inherited from has match statement:"},{"location":"HasRelatedMatchStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='skos:hasRelatedMatch' Exact Mappings: skos:hasRelatedMatch","title":"Other properties"},{"location":"HasRelatedSynonymStatement/","text":"Class: HasRelatedSynonymStatement URI: semsql:HasRelatedSynonymStatement Parents is_a: HasOioSynonymStatement Attributes Inherited from has oio synonym statement: datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String stanza OPT range: Node subject OPT range: Node Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='oio:hasRelatedSynonym' Exact Mappings: oio:hasRelatedSynonym","title":"Class: HasRelatedSynonymStatement"},{"location":"HasRelatedSynonymStatement/#class-hasrelatedsynonymstatement","text":"URI: semsql:HasRelatedSynonymStatement","title":"Class: HasRelatedSynonymStatement"},{"location":"HasRelatedSynonymStatement/#parents","text":"is_a: HasOioSynonymStatement","title":"Parents"},{"location":"HasRelatedSynonymStatement/#attributes","text":"","title":"Attributes"},{"location":"HasRelatedSynonymStatement/#inherited-from-has-oio-synonym-statement","text":"datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String stanza OPT range: Node subject OPT range: Node","title":"Inherited from has oio synonym statement:"},{"location":"HasRelatedSynonymStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='oio:hasRelatedSynonym' Exact Mappings: oio:hasRelatedSynonym","title":"Other properties"},{"location":"HasSynonymStatement/","text":"Class: HasSynonymStatement URI: semsql:HasSynonymStatement Parents is_a: NodeToValueStatement - A statement where value is non-null and object is not populated Attributes Inherited from node to value statement: datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String stanza OPT range: Node subject OPT range: Node","title":"Class: HasSynonymStatement"},{"location":"HasSynonymStatement/#class-hassynonymstatement","text":"URI: semsql:HasSynonymStatement","title":"Class: HasSynonymStatement"},{"location":"HasSynonymStatement/#parents","text":"is_a: NodeToValueStatement - A statement where value is non-null and object is not populated","title":"Parents"},{"location":"HasSynonymStatement/#attributes","text":"","title":"Attributes"},{"location":"HasSynonymStatement/#inherited-from-node-to-value-statement","text":"datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String stanza OPT range: Node subject OPT range: Node","title":"Inherited from node to value statement:"},{"location":"IndividualTrait/","text":"Class: IndividualTrait URI: semsql:IndividualTrait Parents is_a: NodeTrait Mixin for AnonymousIndividualExpression (mixin) Referenced by class Attributes","title":"Class: IndividualTrait"},{"location":"IndividualTrait/#class-individualtrait","text":"URI: semsql:IndividualTrait","title":"Class: IndividualTrait"},{"location":"IndividualTrait/#parents","text":"is_a: NodeTrait","title":"Parents"},{"location":"IndividualTrait/#mixin-for","text":"AnonymousIndividualExpression (mixin)","title":"Mixin for"},{"location":"IndividualTrait/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"IndividualTrait/#attributes","text":"","title":"Attributes"},{"location":"IriNode/","text":"Class: IriNode URI: semsql:IriNode Parents is_a: Node Attributes Inherited from node: id REQ range: NodeIdType Other properties Comments: sqlview>> SELECT * FROM node WHERE id NOT LIKE '_:%'","title":"Class: IriNode"},{"location":"IriNode/#class-irinode","text":"URI: semsql:IriNode","title":"Class: IriNode"},{"location":"IriNode/#parents","text":"is_a: Node","title":"Parents"},{"location":"IriNode/#attributes","text":"","title":"Attributes"},{"location":"IriNode/#inherited-from-node","text":"id REQ range: NodeIdType","title":"Inherited from node:"},{"location":"IriNode/#other-properties","text":"Comments: sqlview>> SELECT * FROM node WHERE id NOT LIKE '_:%'","title":"Other properties"},{"location":"IsReport/","text":"Class: IsReport URI: semsql:IsReport Mixin for RdfLevelSummaryStatistic (mixin) Referenced by class Attributes","title":"Class: IsReport"},{"location":"IsReport/#class-isreport","text":"URI: semsql:IsReport","title":"Class: IsReport"},{"location":"IsReport/#mixin-for","text":"RdfLevelSummaryStatistic (mixin)","title":"Mixin for"},{"location":"IsReport/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"IsReport/#attributes","text":"","title":"Attributes"},{"location":"LexicalProblem/","text":"Class: LexicalProblem a problem with the textual value of an annotation property URI: semsql:LexicalProblem Parents is_a: Problem - Represents an instance of a problem pertaining to conformance to OBO guidelines Attributes Inherited from problem: description OPT range: String problem\u279esubject OPT Description: The thing that is problematic range: Node","title":"Class: LexicalProblem"},{"location":"LexicalProblem/#class-lexicalproblem","text":"a problem with the textual value of an annotation property URI: semsql:LexicalProblem","title":"Class: LexicalProblem"},{"location":"LexicalProblem/#parents","text":"is_a: Problem - Represents an instance of a problem pertaining to conformance to OBO guidelines","title":"Parents"},{"location":"LexicalProblem/#attributes","text":"","title":"Attributes"},{"location":"LexicalProblem/#inherited-from-problem","text":"description OPT range: String problem\u279esubject OPT Description: The thing that is problematic range: Node","title":"Inherited from problem:"},{"location":"NamedIndividualNode/","text":"Class: NamedIndividualNode URI: semsql:NamedIndividualNode Parents is_a: Node Attributes Inherited from node: id REQ range: NodeIdType Other properties Mappings: owl:NamedIndividual Comments: sqlview>> SELECT distinct subject AS id from rdf_type_statement WHERE object = 'owl:NamedIndividual';","title":"Class: NamedIndividualNode"},{"location":"NamedIndividualNode/#class-namedindividualnode","text":"URI: semsql:NamedIndividualNode","title":"Class: NamedIndividualNode"},{"location":"NamedIndividualNode/#parents","text":"is_a: Node","title":"Parents"},{"location":"NamedIndividualNode/#attributes","text":"","title":"Attributes"},{"location":"NamedIndividualNode/#inherited-from-node","text":"id REQ range: NodeIdType","title":"Inherited from node:"},{"location":"NamedIndividualNode/#other-properties","text":"Mappings: owl:NamedIndividual Comments: sqlview>> SELECT distinct subject AS id from rdf_type_statement WHERE object = 'owl:NamedIndividual';","title":"Other properties"},{"location":"Node/","text":"Class: Node URI: semsql:Node Children BlankNode ClassNode IriNode NamedIndividualNode OntologyNode - A node representing an ontology PropertyNode Referenced by class NodeToNodeStatement node to node statement\u279eobject REQ Node None object OPT Node None on property OPT Node OwlEquivalentToIntersectionMember owl equivalent to intersection member\u279eobject OPT Node OwlEquivalentToIntersectionMember owl equivalent to intersection member\u279esubject OPT Node OwlSubclassOfSomeValuesFrom owl subclass of some values from\u279eobject OPT Node OwlSubclassOfSomeValuesFrom owl subclass of some values from\u279esubject OPT Node Problem problem\u279esubject OPT Node None \u279eelement OPT Node RepairAction repair action\u279esubject OPT Node None stanza OPT Node None subject OPT Node Attributes Own id REQ range: NodeIdType Other properties Comments: sqlview>> SELECT distinct(subject) AS id FROM statements UNION SELECT distinct(object) AS id FROM statements WHERE datatype IS NOT NULL","title":"Class: Node"},{"location":"Node/#class-node","text":"URI: semsql:Node","title":"Class: Node"},{"location":"Node/#children","text":"BlankNode ClassNode IriNode NamedIndividualNode OntologyNode - A node representing an ontology PropertyNode","title":"Children"},{"location":"Node/#referenced-by-class","text":"NodeToNodeStatement node to node statement\u279eobject REQ Node None object OPT Node None on property OPT Node OwlEquivalentToIntersectionMember owl equivalent to intersection member\u279eobject OPT Node OwlEquivalentToIntersectionMember owl equivalent to intersection member\u279esubject OPT Node OwlSubclassOfSomeValuesFrom owl subclass of some values from\u279eobject OPT Node OwlSubclassOfSomeValuesFrom owl subclass of some values from\u279esubject OPT Node Problem problem\u279esubject OPT Node None \u279eelement OPT Node RepairAction repair action\u279esubject OPT Node None stanza OPT Node None subject OPT Node","title":"Referenced by class"},{"location":"Node/#attributes","text":"","title":"Attributes"},{"location":"Node/#own","text":"id REQ range: NodeIdType","title":"Own"},{"location":"Node/#other-properties","text":"Comments: sqlview>> SELECT distinct(subject) AS id FROM statements UNION SELECT distinct(object) AS id FROM statements WHERE datatype IS NOT NULL","title":"Other properties"},{"location":"NodeToNodeStatement/","text":"Class: NodeToNodeStatement A statement where object is non-null and value is not populated URI: semsql:NodeToNodeStatement Parents is_a: Statements - Represents an RDF triple Children OwlDisjointClassStatement OwlEquivalentClassStatement RdfTypeStatement - A statement that indicates the asserted type of the subject entity RdfsSubclassOfStatement Referenced by class Attributes Own node to node statement\u279eobject REQ range: Node Inherited from statements: datatype OPT range: String language OPT range: String predicate OPT range: String stanza OPT range: Node subject OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType Other properties Comments: sqlview>> SELECT * FROM statements WHERE object IS NOT NULL","title":"Class: NodeToNodeStatement"},{"location":"NodeToNodeStatement/#class-nodetonodestatement","text":"A statement where object is non-null and value is not populated URI: semsql:NodeToNodeStatement","title":"Class: NodeToNodeStatement"},{"location":"NodeToNodeStatement/#parents","text":"is_a: Statements - Represents an RDF triple","title":"Parents"},{"location":"NodeToNodeStatement/#children","text":"OwlDisjointClassStatement OwlEquivalentClassStatement RdfTypeStatement - A statement that indicates the asserted type of the subject entity RdfsSubclassOfStatement","title":"Children"},{"location":"NodeToNodeStatement/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"NodeToNodeStatement/#attributes","text":"","title":"Attributes"},{"location":"NodeToNodeStatement/#own","text":"node to node statement\u279eobject REQ range: Node","title":"Own"},{"location":"NodeToNodeStatement/#inherited-from-statements","text":"datatype OPT range: String language OPT range: String predicate OPT range: String stanza OPT range: Node subject OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Inherited from statements:"},{"location":"NodeToNodeStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE object IS NOT NULL","title":"Other properties"},{"location":"NodeToValueStatement/","text":"Class: NodeToValueStatement A statement where value is non-null and object is not populated URI: semsql:NodeToValueStatement Parents is_a: Statements - Represents an RDF triple Children HasMappingStatement HasMatchStatement HasOioSynonymStatement HasSynonymStatement RdfsLabelStatement Referenced by class Attributes Own node to value statement\u279evalue REQ range: LiteralAsStringType Inherited from statements: datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String stanza OPT range: Node subject OPT range: Node Other properties Comments: sqlview>> SELECT * FROM statements WHERE value IS NOT NULL","title":"Class: NodeToValueStatement"},{"location":"NodeToValueStatement/#class-nodetovaluestatement","text":"A statement where value is non-null and object is not populated URI: semsql:NodeToValueStatement","title":"Class: NodeToValueStatement"},{"location":"NodeToValueStatement/#parents","text":"is_a: Statements - Represents an RDF triple","title":"Parents"},{"location":"NodeToValueStatement/#children","text":"HasMappingStatement HasMatchStatement HasOioSynonymStatement HasSynonymStatement RdfsLabelStatement","title":"Children"},{"location":"NodeToValueStatement/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"NodeToValueStatement/#attributes","text":"","title":"Attributes"},{"location":"NodeToValueStatement/#own","text":"node to value statement\u279evalue REQ range: LiteralAsStringType","title":"Own"},{"location":"NodeToValueStatement/#inherited-from-statements","text":"datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String stanza OPT range: Node subject OPT range: Node","title":"Inherited from statements:"},{"location":"NodeToValueStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE value IS NOT NULL","title":"Other properties"},{"location":"NodeTrait/","text":"Class: NodeTrait URI: semsql:NodeTrait Children ClassTrait IndividualTrait PropertyTrait Referenced by class Attributes","title":"Class: NodeTrait"},{"location":"NodeTrait/#class-nodetrait","text":"URI: semsql:NodeTrait","title":"Class: NodeTrait"},{"location":"NodeTrait/#children","text":"ClassTrait IndividualTrait PropertyTrait","title":"Children"},{"location":"NodeTrait/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"NodeTrait/#attributes","text":"","title":"Attributes"},{"location":"NodeWithTwoLabelsProblem/","text":"Class: NodeWithTwoLabelsProblem URI: semsql:NodeWithTwoLabelsProblem Parents is_a: Problem - Represents an instance of a problem pertaining to conformance to OBO guidelines Attributes Own \u279elabel1 OPT range: String \u279elabel2 OPT range: String Inherited from problem: description OPT range: String problem\u279esubject OPT Description: The thing that is problematic range: Node Other properties Comments: sqlview>> SELECT s1.subject AS subject, s1.value AS label1, s2.value AS label2 FROM rdfs_label_statement AS s1, rdfs_label_statement AS s2 WHERE s1.subject=s2.subject AND s1.value != s2.value","title":"Class: NodeWithTwoLabelsProblem"},{"location":"NodeWithTwoLabelsProblem/#class-nodewithtwolabelsproblem","text":"URI: semsql:NodeWithTwoLabelsProblem","title":"Class: NodeWithTwoLabelsProblem"},{"location":"NodeWithTwoLabelsProblem/#parents","text":"is_a: Problem - Represents an instance of a problem pertaining to conformance to OBO guidelines","title":"Parents"},{"location":"NodeWithTwoLabelsProblem/#attributes","text":"","title":"Attributes"},{"location":"NodeWithTwoLabelsProblem/#own","text":"\u279elabel1 OPT range: String \u279elabel2 OPT range: String","title":"Own"},{"location":"NodeWithTwoLabelsProblem/#inherited-from-problem","text":"description OPT range: String problem\u279esubject OPT Description: The thing that is problematic range: Node","title":"Inherited from problem:"},{"location":"NodeWithTwoLabelsProblem/#other-properties","text":"Comments: sqlview>> SELECT s1.subject AS subject, s1.value AS label1, s2.value AS label2 FROM rdfs_label_statement AS s1, rdfs_label_statement AS s2 WHERE s1.subject=s2.subject AND s1.value != s2.value","title":"Other properties"},{"location":"ObjectPropertyNode/","text":"Class: ObjectPropertyNode URI: semsql:ObjectPropertyNode Parents is_a: PropertyNode Children TransitivePropertyNode Referenced by class Attributes Inherited from property node: id REQ range: NodeIdType Other properties Comments: sqlview>> SELECT DISTINCT subject AS id FROM rdf_type_statement WHERE object='owl:ObjectProperty'","title":"Class: ObjectPropertyNode"},{"location":"ObjectPropertyNode/#class-objectpropertynode","text":"URI: semsql:ObjectPropertyNode","title":"Class: ObjectPropertyNode"},{"location":"ObjectPropertyNode/#parents","text":"is_a: PropertyNode","title":"Parents"},{"location":"ObjectPropertyNode/#children","text":"TransitivePropertyNode","title":"Children"},{"location":"ObjectPropertyNode/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"ObjectPropertyNode/#attributes","text":"","title":"Attributes"},{"location":"ObjectPropertyNode/#inherited-from-property-node","text":"id REQ range: NodeIdType","title":"Inherited from property node:"},{"location":"ObjectPropertyNode/#other-properties","text":"Comments: sqlview>> SELECT DISTINCT subject AS id FROM rdf_type_statement WHERE object='owl:ObjectProperty'","title":"Other properties"},{"location":"OntologyNode/","text":"Class: OntologyNode A node representing an ontology URI: semsql:OntologyNode Parents is_a: Node Attributes Inherited from node: id REQ range: NodeIdType Other properties Comments: sqlview>> SELECT DISTINCT subject AS id FROM rdf_type_statement WHERE object='owl:Ontology'","title":"Class: OntologyNode"},{"location":"OntologyNode/#class-ontologynode","text":"A node representing an ontology URI: semsql:OntologyNode","title":"Class: OntologyNode"},{"location":"OntologyNode/#parents","text":"is_a: Node","title":"Parents"},{"location":"OntologyNode/#attributes","text":"","title":"Attributes"},{"location":"OntologyNode/#inherited-from-node","text":"id REQ range: NodeIdType","title":"Inherited from node:"},{"location":"OntologyNode/#other-properties","text":"Comments: sqlview>> SELECT DISTINCT subject AS id FROM rdf_type_statement WHERE object='owl:Ontology'","title":"Other properties"},{"location":"OwlAllValuesFrom/","text":"Class: OwlAllValuesFrom URI: semsql:OwlAllValuesFrom Parents is_a: OwlRestriction Attributes Inherited from owl restriction: filler OPT range: ClassNode on property OPT range: Node owl restriction\u279eid REQ Description: the id of the restriction range: NodeIdType Other properties Aliases: universal restriction Comments: sqlview>> SELECT onProperty.subject AS id, onProperty.object AS on_property, someValuesFrom.object AS filler FROM statements AS onProperty, statements AS someValuesFrom WHERE onProperty.predicate = 'owl:onProperty' AND onProperty.subject=someValuesFrom.subject AND someValuesFrom.predicate='owl:allValuesFrom'","title":"Class: OwlAllValuesFrom"},{"location":"OwlAllValuesFrom/#class-owlallvaluesfrom","text":"URI: semsql:OwlAllValuesFrom","title":"Class: OwlAllValuesFrom"},{"location":"OwlAllValuesFrom/#parents","text":"is_a: OwlRestriction","title":"Parents"},{"location":"OwlAllValuesFrom/#attributes","text":"","title":"Attributes"},{"location":"OwlAllValuesFrom/#inherited-from-owl-restriction","text":"filler OPT range: ClassNode on property OPT range: Node owl restriction\u279eid REQ Description: the id of the restriction range: NodeIdType","title":"Inherited from owl restriction:"},{"location":"OwlAllValuesFrom/#other-properties","text":"Aliases: universal restriction Comments: sqlview>> SELECT onProperty.subject AS id, onProperty.object AS on_property, someValuesFrom.object AS filler FROM statements AS onProperty, statements AS someValuesFrom WHERE onProperty.predicate = 'owl:onProperty' AND onProperty.subject=someValuesFrom.subject AND someValuesFrom.predicate='owl:allValuesFrom'","title":"Other properties"},{"location":"OwlComplexAxiom/","text":"Class: OwlComplexAxiom An axiom that is composed of two or more statements URI: semsql:OwlComplexAxiom Children OwlEquivalentToIntersectionMember - Composition of OwlEquivalentClass, OwlIntersectionOf, and RdfListMember; C = X1 and ... and Xn OwlSubclassOfSomeValuesFrom - Composition of subClassOf and SomeValuesFrom Referenced by class Attributes","title":"Class: OwlComplexAxiom"},{"location":"OwlComplexAxiom/#class-owlcomplexaxiom","text":"An axiom that is composed of two or more statements URI: semsql:OwlComplexAxiom","title":"Class: OwlComplexAxiom"},{"location":"OwlComplexAxiom/#children","text":"OwlEquivalentToIntersectionMember - Composition of OwlEquivalentClass, OwlIntersectionOf, and RdfListMember; C = X1 and ... and Xn OwlSubclassOfSomeValuesFrom - Composition of subClassOf and SomeValuesFrom","title":"Children"},{"location":"OwlComplexAxiom/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"OwlComplexAxiom/#attributes","text":"","title":"Attributes"},{"location":"OwlDisjointClassStatement/","text":"Class: OwlDisjointClassStatement URI: semsql:OwlDisjointClassStatement Parents is_a: NodeToNodeStatement - A statement where object is non-null and value is not populated Referenced by class Attributes Own owl disjoint class statement\u279eobject REQ Description: One of the two classes that are disjoint. No significance to subject vs object range: ClassNode owl disjoint class statement\u279esubject OPT Description: One of the two classes that are disjoint. No significance to subject vs object range: ClassNode Inherited from node to node statement: datatype OPT range: String language OPT range: String predicate OPT range: String stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='owl:disjointClass'","title":"Class: OwlDisjointClassStatement"},{"location":"OwlDisjointClassStatement/#class-owldisjointclassstatement","text":"URI: semsql:OwlDisjointClassStatement","title":"Class: OwlDisjointClassStatement"},{"location":"OwlDisjointClassStatement/#parents","text":"is_a: NodeToNodeStatement - A statement where object is non-null and value is not populated","title":"Parents"},{"location":"OwlDisjointClassStatement/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"OwlDisjointClassStatement/#attributes","text":"","title":"Attributes"},{"location":"OwlDisjointClassStatement/#own","text":"owl disjoint class statement\u279eobject REQ Description: One of the two classes that are disjoint. No significance to subject vs object range: ClassNode owl disjoint class statement\u279esubject OPT Description: One of the two classes that are disjoint. No significance to subject vs object range: ClassNode","title":"Own"},{"location":"OwlDisjointClassStatement/#inherited-from-node-to-node-statement","text":"datatype OPT range: String language OPT range: String predicate OPT range: String stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Inherited from node to node statement:"},{"location":"OwlDisjointClassStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='owl:disjointClass'","title":"Other properties"},{"location":"OwlEquivalentClassStatement/","text":"Class: OwlEquivalentClassStatement URI: semsql:OwlEquivalentClassStatement Parents is_a: NodeToNodeStatement - A statement where object is non-null and value is not populated Referenced by class Attributes Own owl equivalent class statement\u279eobject REQ Description: One of the two classes that are equivalent. No significance to subject vs object range: ClassNode owl equivalent class statement\u279esubject OPT Description: One of the two classes that are equivalent. No significance to subject vs object range: ClassNode Inherited from node to node statement: datatype OPT range: String language OPT range: String predicate OPT range: String stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='owl:equivalentClass'","title":"Class: OwlEquivalentClassStatement"},{"location":"OwlEquivalentClassStatement/#class-owlequivalentclassstatement","text":"URI: semsql:OwlEquivalentClassStatement","title":"Class: OwlEquivalentClassStatement"},{"location":"OwlEquivalentClassStatement/#parents","text":"is_a: NodeToNodeStatement - A statement where object is non-null and value is not populated","title":"Parents"},{"location":"OwlEquivalentClassStatement/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"OwlEquivalentClassStatement/#attributes","text":"","title":"Attributes"},{"location":"OwlEquivalentClassStatement/#own","text":"owl equivalent class statement\u279eobject REQ Description: One of the two classes that are equivalent. No significance to subject vs object range: ClassNode owl equivalent class statement\u279esubject OPT Description: One of the two classes that are equivalent. No significance to subject vs object range: ClassNode","title":"Own"},{"location":"OwlEquivalentClassStatement/#inherited-from-node-to-node-statement","text":"datatype OPT range: String language OPT range: String predicate OPT range: String stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Inherited from node to node statement:"},{"location":"OwlEquivalentClassStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='owl:equivalentClass'","title":"Other properties"},{"location":"OwlEquivalentToIntersectionMember/","text":"Class: OwlEquivalentToIntersectionMember Composition of OwlEquivalentClass, OwlIntersectionOf, and RdfListMember; C = X1 and ... and Xn URI: semsql:OwlEquivalentToIntersectionMember Parents is_a: OwlComplexAxiom - An axiom that is composed of two or more statements Referenced by class Attributes Own owl equivalent to intersection member\u279eobject OPT Description: a class expression that forms the defining expression range: Node owl equivalent to intersection member\u279esubject OPT Description: the defined class range: Node Other properties Comments: sqlview>> SELECT e.stanza, e.subject, m.object FROM owl_equivalent_class_statement AS e JOIN statements AS i ON (e.object=i.subject) JOIN rdf_list_member_statement AS m ON (i.object=m.subject) WHERE i.predicate = 'owl:intersectionOf'","title":"Class: OwlEquivalentToIntersectionMember"},{"location":"OwlEquivalentToIntersectionMember/#class-owlequivalenttointersectionmember","text":"Composition of OwlEquivalentClass, OwlIntersectionOf, and RdfListMember; C = X1 and ... and Xn URI: semsql:OwlEquivalentToIntersectionMember","title":"Class: OwlEquivalentToIntersectionMember"},{"location":"OwlEquivalentToIntersectionMember/#parents","text":"is_a: OwlComplexAxiom - An axiom that is composed of two or more statements","title":"Parents"},{"location":"OwlEquivalentToIntersectionMember/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"OwlEquivalentToIntersectionMember/#attributes","text":"","title":"Attributes"},{"location":"OwlEquivalentToIntersectionMember/#own","text":"owl equivalent to intersection member\u279eobject OPT Description: a class expression that forms the defining expression range: Node owl equivalent to intersection member\u279esubject OPT Description: the defined class range: Node","title":"Own"},{"location":"OwlEquivalentToIntersectionMember/#other-properties","text":"Comments: sqlview>> SELECT e.stanza, e.subject, m.object FROM owl_equivalent_class_statement AS e JOIN statements AS i ON (e.object=i.subject) JOIN rdf_list_member_statement AS m ON (i.object=m.subject) WHERE i.predicate = 'owl:intersectionOf'","title":"Other properties"},{"location":"OwlRestriction/","text":"Class: OwlRestriction URI: semsql:OwlRestriction Parents is_a: AnonymousClassExpression Children OwlAllValuesFrom OwlSomeValuesFrom Referenced by class Attributes Own filler OPT range: ClassNode on property OPT range: Node owl restriction\u279eid REQ Description: the id of the restriction range: NodeIdType Other properties Mappings: owl:Restriction","title":"Class: OwlRestriction"},{"location":"OwlRestriction/#class-owlrestriction","text":"URI: semsql:OwlRestriction","title":"Class: OwlRestriction"},{"location":"OwlRestriction/#parents","text":"is_a: AnonymousClassExpression","title":"Parents"},{"location":"OwlRestriction/#children","text":"OwlAllValuesFrom OwlSomeValuesFrom","title":"Children"},{"location":"OwlRestriction/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"OwlRestriction/#attributes","text":"","title":"Attributes"},{"location":"OwlRestriction/#own","text":"filler OPT range: ClassNode on property OPT range: Node owl restriction\u279eid REQ Description: the id of the restriction range: NodeIdType","title":"Own"},{"location":"OwlRestriction/#other-properties","text":"Mappings: owl:Restriction","title":"Other properties"},{"location":"OwlSomeValuesFrom/","text":"Class: OwlSomeValuesFrom URI: semsql:OwlSomeValuesFrom Parents is_a: OwlRestriction Attributes Inherited from owl restriction: filler OPT range: ClassNode on property OPT range: Node owl restriction\u279eid REQ Description: the id of the restriction range: NodeIdType Other properties Aliases: existential restriction Comments: sqlview>> SELECT onProperty.subject AS id, onProperty.object AS on_property, someValuesFrom.object AS filler FROM statements AS onProperty, statements AS someValuesFrom WHERE onProperty.predicate = 'owl:onProperty' AND onProperty.subject=someValuesFrom.subject AND someValuesFrom.predicate='owl:someValuesFrom'","title":"Class: OwlSomeValuesFrom"},{"location":"OwlSomeValuesFrom/#class-owlsomevaluesfrom","text":"URI: semsql:OwlSomeValuesFrom","title":"Class: OwlSomeValuesFrom"},{"location":"OwlSomeValuesFrom/#parents","text":"is_a: OwlRestriction","title":"Parents"},{"location":"OwlSomeValuesFrom/#attributes","text":"","title":"Attributes"},{"location":"OwlSomeValuesFrom/#inherited-from-owl-restriction","text":"filler OPT range: ClassNode on property OPT range: Node owl restriction\u279eid REQ Description: the id of the restriction range: NodeIdType","title":"Inherited from owl restriction:"},{"location":"OwlSomeValuesFrom/#other-properties","text":"Aliases: existential restriction Comments: sqlview>> SELECT onProperty.subject AS id, onProperty.object AS on_property, someValuesFrom.object AS filler FROM statements AS onProperty, statements AS someValuesFrom WHERE onProperty.predicate = 'owl:onProperty' AND onProperty.subject=someValuesFrom.subject AND someValuesFrom.predicate='owl:someValuesFrom'","title":"Other properties"},{"location":"OwlSubclassOfSomeValuesFrom/","text":"Class: OwlSubclassOfSomeValuesFrom Composition of subClassOf and SomeValuesFrom URI: semsql:OwlSubclassOfSomeValuesFrom Parents is_a: OwlComplexAxiom - An axiom that is composed of two or more statements Referenced by class Attributes Own owl subclass of some values from\u279eobject OPT Description: the class D in the axiom C subClassOf P some D range: Node owl subclass of some values from\u279epredicate OPT Description: the predicate P in the axiom C subClassOf P some D range: String owl subclass of some values from\u279esubject OPT Description: the class C in the axiom C subClassOf P some D range: Node Other properties Comments: sqlview>> SELECT subClassOf.stanza, subClassOf.subject, svf.on_property AS predicate, svf.filler AS object FROM statements AS subClassOf, owl_some_values_from AS svf WHERE subClassOf.predicate = 'rdfs:subClassOf' AND svf.id=subClassOf.object","title":"Class: OwlSubclassOfSomeValuesFrom"},{"location":"OwlSubclassOfSomeValuesFrom/#class-owlsubclassofsomevaluesfrom","text":"Composition of subClassOf and SomeValuesFrom URI: semsql:OwlSubclassOfSomeValuesFrom","title":"Class: OwlSubclassOfSomeValuesFrom"},{"location":"OwlSubclassOfSomeValuesFrom/#parents","text":"is_a: OwlComplexAxiom - An axiom that is composed of two or more statements","title":"Parents"},{"location":"OwlSubclassOfSomeValuesFrom/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"OwlSubclassOfSomeValuesFrom/#attributes","text":"","title":"Attributes"},{"location":"OwlSubclassOfSomeValuesFrom/#own","text":"owl subclass of some values from\u279eobject OPT Description: the class D in the axiom C subClassOf P some D range: Node owl subclass of some values from\u279epredicate OPT Description: the predicate P in the axiom C subClassOf P some D range: String owl subclass of some values from\u279esubject OPT Description: the class C in the axiom C subClassOf P some D range: Node","title":"Own"},{"location":"OwlSubclassOfSomeValuesFrom/#other-properties","text":"Comments: sqlview>> SELECT subClassOf.stanza, subClassOf.subject, svf.on_property AS predicate, svf.filler AS object FROM statements AS subClassOf, owl_some_values_from AS svf WHERE subClassOf.predicate = 'rdfs:subClassOf' AND svf.id=subClassOf.object","title":"Other properties"},{"location":"Problem/","text":"Class: Problem Represents an instance of a problem pertaining to conformance to OBO guidelines URI: semsql:Problem Children AllProblems LexicalProblem - a problem with the textual value of an annotation property NodeWithTwoLabelsProblem PropertyUsedWithDatatypeValuesAndObjects - A problem in which the same property is used two two different ways, one in which the range is a literal value, the other where it is an object. TrailingWhitespaceProblem Referenced by class Attributes Own description OPT range: String problem\u279esubject OPT Description: The thing that is problematic range: Node","title":"Class: Problem"},{"location":"Problem/#class-problem","text":"Represents an instance of a problem pertaining to conformance to OBO guidelines URI: semsql:Problem","title":"Class: Problem"},{"location":"Problem/#children","text":"AllProblems LexicalProblem - a problem with the textual value of an annotation property NodeWithTwoLabelsProblem PropertyUsedWithDatatypeValuesAndObjects - A problem in which the same property is used two two different ways, one in which the range is a literal value, the other where it is an object. TrailingWhitespaceProblem","title":"Children"},{"location":"Problem/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"Problem/#attributes","text":"","title":"Attributes"},{"location":"Problem/#own","text":"description OPT range: String problem\u279esubject OPT Description: The thing that is problematic range: Node","title":"Own"},{"location":"PropertyNode/","text":"Class: PropertyNode URI: semsql:PropertyNode Parents is_a: Node Children AnnotationPropertyNode ObjectPropertyNode Referenced by class Attributes Inherited from node: id REQ range: NodeIdType","title":"Class: PropertyNode"},{"location":"PropertyNode/#class-propertynode","text":"URI: semsql:PropertyNode","title":"Class: PropertyNode"},{"location":"PropertyNode/#parents","text":"is_a: Node","title":"Parents"},{"location":"PropertyNode/#children","text":"AnnotationPropertyNode ObjectPropertyNode","title":"Children"},{"location":"PropertyNode/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"PropertyNode/#attributes","text":"","title":"Attributes"},{"location":"PropertyNode/#inherited-from-node","text":"id REQ range: NodeIdType","title":"Inherited from node:"},{"location":"PropertyTrait/","text":"Class: PropertyTrait URI: semsql:PropertyTrait Parents is_a: NodeTrait Mixin for AnonymousPropertyExpression (mixin) Referenced by class Attributes","title":"Class: PropertyTrait"},{"location":"PropertyTrait/#class-propertytrait","text":"URI: semsql:PropertyTrait","title":"Class: PropertyTrait"},{"location":"PropertyTrait/#parents","text":"is_a: NodeTrait","title":"Parents"},{"location":"PropertyTrait/#mixin-for","text":"AnonymousPropertyExpression (mixin)","title":"Mixin for"},{"location":"PropertyTrait/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"PropertyTrait/#attributes","text":"","title":"Attributes"},{"location":"PropertyUsedWithDatatypeValuesAndObjects/","text":"Class: PropertyUsedWithDatatypeValuesAndObjects A problem in which the same property is used two two different ways, one in which the range is a literal value, the other where it is an object. URI: semsql:PropertyUsedWithDatatypeValuesAndObjects Parents is_a: Problem - Represents an instance of a problem pertaining to conformance to OBO guidelines Attributes Inherited from problem: description OPT range: String problem\u279esubject OPT Description: The thing that is problematic range: Node Other properties Comments: in OWL, if a property is typed as object or datatype, this will constrain its use. However, annotation properties have no such constraints in OWL, but we still consider this problematic and unintentional, unless it is a truly generic predicate, such as owl:annotatedTarget or rdf:object sqlview>> SELECT DISTINCT s1.predicate AS subject, s1.datatype FROM statements AS s1, statements AS s2 ON (s1.predicate=s2.predicate) WHERE s1.value IS NOT NULL and s2.object IS NOT NULL See also: https://github.com/information-artifact-ontology/ontology-metadata/issues/67","title":"Class: PropertyUsedWithDatatypeValuesAndObjects"},{"location":"PropertyUsedWithDatatypeValuesAndObjects/#class-propertyusedwithdatatypevaluesandobjects","text":"A problem in which the same property is used two two different ways, one in which the range is a literal value, the other where it is an object. URI: semsql:PropertyUsedWithDatatypeValuesAndObjects","title":"Class: PropertyUsedWithDatatypeValuesAndObjects"},{"location":"PropertyUsedWithDatatypeValuesAndObjects/#parents","text":"is_a: Problem - Represents an instance of a problem pertaining to conformance to OBO guidelines","title":"Parents"},{"location":"PropertyUsedWithDatatypeValuesAndObjects/#attributes","text":"","title":"Attributes"},{"location":"PropertyUsedWithDatatypeValuesAndObjects/#inherited-from-problem","text":"description OPT range: String problem\u279esubject OPT Description: The thing that is problematic range: Node","title":"Inherited from problem:"},{"location":"PropertyUsedWithDatatypeValuesAndObjects/#other-properties","text":"Comments: in OWL, if a property is typed as object or datatype, this will constrain its use. However, annotation properties have no such constraints in OWL, but we still consider this problematic and unintentional, unless it is a truly generic predicate, such as owl:annotatedTarget or rdf:object sqlview>> SELECT DISTINCT s1.predicate AS subject, s1.datatype FROM statements AS s1, statements AS s2 ON (s1.predicate=s2.predicate) WHERE s1.value IS NOT NULL and s2.object IS NOT NULL See also: https://github.com/information-artifact-ontology/ontology-metadata/issues/67","title":"Other properties"},{"location":"RdfFirstStatement/","text":"Class: RdfFirstStatement A statement that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful URI: semsql:RdfFirstStatement Parents is_a: RdfListStatement - A statement that is used to represent aspects of RDF lists Attributes Inherited from rdf list statement: datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String rdf list statement\u279esubject OPT Description: The rdf:List to which the statement applies range: RdfListNode stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='rdf:first'","title":"Class: RdfFirstStatement"},{"location":"RdfFirstStatement/#class-rdffirststatement","text":"A statement that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful URI: semsql:RdfFirstStatement","title":"Class: RdfFirstStatement"},{"location":"RdfFirstStatement/#parents","text":"is_a: RdfListStatement - A statement that is used to represent aspects of RDF lists","title":"Parents"},{"location":"RdfFirstStatement/#attributes","text":"","title":"Attributes"},{"location":"RdfFirstStatement/#inherited-from-rdf-list-statement","text":"datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String rdf list statement\u279esubject OPT Description: The rdf:List to which the statement applies range: RdfListNode stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Inherited from rdf list statement:"},{"location":"RdfFirstStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='rdf:first'","title":"Other properties"},{"location":"RdfLevelSummaryStatistic/","text":"Class: RdfLevelSummaryStatistic URI: semsql:RdfLevelSummaryStatistic Uses Mixins mixin: IsReport Children CountOfInstantiatedClasses CountOfPredicates Referenced by class Attributes Own \u279eelement OPT range: Node \u279enumber_of_usages OPT range: Integer","title":"Class: RdfLevelSummaryStatistic"},{"location":"RdfLevelSummaryStatistic/#class-rdflevelsummarystatistic","text":"URI: semsql:RdfLevelSummaryStatistic","title":"Class: RdfLevelSummaryStatistic"},{"location":"RdfLevelSummaryStatistic/#uses-mixins","text":"mixin: IsReport","title":"Uses Mixins"},{"location":"RdfLevelSummaryStatistic/#children","text":"CountOfInstantiatedClasses CountOfPredicates","title":"Children"},{"location":"RdfLevelSummaryStatistic/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"RdfLevelSummaryStatistic/#attributes","text":"","title":"Attributes"},{"location":"RdfLevelSummaryStatistic/#own","text":"\u279eelement OPT range: Node \u279enumber_of_usages OPT range: Integer","title":"Own"},{"location":"RdfListMemberStatement/","text":"Class: RdfListMemberStatement URI: semsql:RdfListMemberStatement Parents is_a: RdfListStatement - A statement that is used to represent aspects of RDF lists Attributes Inherited from rdf list statement: datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String rdf list statement\u279esubject OPT Description: The rdf:List to which the statement applies range: RdfListNode stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType Other properties Comments: sqlview>> SELECT rest_t.subject, f.object FROM rdf_rest_transitive_statement AS rest_t JOIN rdf_first_statement AS f ON (rest_t.object = f.subject) UNION SELECT subject,object FROM rdf_first_statement;","title":"Class: RdfListMemberStatement"},{"location":"RdfListMemberStatement/#class-rdflistmemberstatement","text":"URI: semsql:RdfListMemberStatement","title":"Class: RdfListMemberStatement"},{"location":"RdfListMemberStatement/#parents","text":"is_a: RdfListStatement - A statement that is used to represent aspects of RDF lists","title":"Parents"},{"location":"RdfListMemberStatement/#attributes","text":"","title":"Attributes"},{"location":"RdfListMemberStatement/#inherited-from-rdf-list-statement","text":"datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String rdf list statement\u279esubject OPT Description: The rdf:List to which the statement applies range: RdfListNode stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Inherited from rdf list statement:"},{"location":"RdfListMemberStatement/#other-properties","text":"Comments: sqlview>> SELECT rest_t.subject, f.object FROM rdf_rest_transitive_statement AS rest_t JOIN rdf_first_statement AS f ON (rest_t.object = f.subject) UNION SELECT subject,object FROM rdf_first_statement;","title":"Other properties"},{"location":"RdfListNode/","text":"Class: RdfListNode A node representing an RDF list URI: semsql:RdfListNode Parents is_a: BlankNode Referenced by class RdfListStatement rdf list statement\u279esubject OPT RdfListNode Attributes Inherited from blank node: id REQ range: NodeIdType Other properties Comments: sqlview>> SELECT distinct subject AS id from rdf_type_statement WHERE object = 'rdf:List';","title":"Class: RdfListNode"},{"location":"RdfListNode/#class-rdflistnode","text":"A node representing an RDF list URI: semsql:RdfListNode","title":"Class: RdfListNode"},{"location":"RdfListNode/#parents","text":"is_a: BlankNode","title":"Parents"},{"location":"RdfListNode/#referenced-by-class","text":"RdfListStatement rdf list statement\u279esubject OPT RdfListNode","title":"Referenced by class"},{"location":"RdfListNode/#attributes","text":"","title":"Attributes"},{"location":"RdfListNode/#inherited-from-blank-node","text":"id REQ range: NodeIdType","title":"Inherited from blank node:"},{"location":"RdfListNode/#other-properties","text":"Comments: sqlview>> SELECT distinct subject AS id from rdf_type_statement WHERE object = 'rdf:List';","title":"Other properties"},{"location":"RdfListStatement/","text":"Class: RdfListStatement A statement that is used to represent aspects of RDF lists URI: semsql:RdfListStatement Parents is_a: Statements - Represents an RDF triple Children RdfFirstStatement - A statement that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfListMemberStatement RdfRestStatement - A statement that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfRestTransitiveStatement Referenced by class Attributes Own rdf list statement\u279esubject OPT Description: The rdf:List to which the statement applies range: RdfListNode Inherited from statements: datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Class: RdfListStatement"},{"location":"RdfListStatement/#class-rdfliststatement","text":"A statement that is used to represent aspects of RDF lists URI: semsql:RdfListStatement","title":"Class: RdfListStatement"},{"location":"RdfListStatement/#parents","text":"is_a: Statements - Represents an RDF triple","title":"Parents"},{"location":"RdfListStatement/#children","text":"RdfFirstStatement - A statement that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfListMemberStatement RdfRestStatement - A statement that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfRestTransitiveStatement","title":"Children"},{"location":"RdfListStatement/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"RdfListStatement/#attributes","text":"","title":"Attributes"},{"location":"RdfListStatement/#own","text":"rdf list statement\u279esubject OPT Description: The rdf:List to which the statement applies range: RdfListNode","title":"Own"},{"location":"RdfListStatement/#inherited-from-statements","text":"datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Inherited from statements:"},{"location":"RdfRestStatement/","text":"Class: RdfRestStatement A statement that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful URI: semsql:RdfRestStatement Parents is_a: RdfListStatement - A statement that is used to represent aspects of RDF lists Attributes Inherited from rdf list statement: datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String rdf list statement\u279esubject OPT Description: The rdf:List to which the statement applies range: RdfListNode stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='rdf:rest'","title":"Class: RdfRestStatement"},{"location":"RdfRestStatement/#class-rdfreststatement","text":"A statement that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful URI: semsql:RdfRestStatement","title":"Class: RdfRestStatement"},{"location":"RdfRestStatement/#parents","text":"is_a: RdfListStatement - A statement that is used to represent aspects of RDF lists","title":"Parents"},{"location":"RdfRestStatement/#attributes","text":"","title":"Attributes"},{"location":"RdfRestStatement/#inherited-from-rdf-list-statement","text":"datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String rdf list statement\u279esubject OPT Description: The rdf:List to which the statement applies range: RdfListNode stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Inherited from rdf list statement:"},{"location":"RdfRestStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='rdf:rest'","title":"Other properties"},{"location":"RdfRestTransitiveStatement/","text":"Class: RdfRestTransitiveStatement URI: semsql:RdfRestTransitiveStatement Parents is_a: RdfListStatement - A statement that is used to represent aspects of RDF lists Attributes Inherited from rdf list statement: datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String rdf list statement\u279esubject OPT Description: The rdf:List to which the statement applies range: RdfListNode stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType Other properties Comments: sqlview>> WITH RECURSIVE rdf_rest_transitive_statement ( subject, object ) AS (SELECT subject, object FROM rdf_rest_statement UNION ALL SELECT rest.subject, rest_t.object FROM rdf_rest_statement AS rest JOIN rdf_rest_transitive_statement AS rest_t ON rest.object = rest_t.subject ) SELECT * FROM rdf_rest_transitive_statement","title":"Class: RdfRestTransitiveStatement"},{"location":"RdfRestTransitiveStatement/#class-rdfresttransitivestatement","text":"URI: semsql:RdfRestTransitiveStatement","title":"Class: RdfRestTransitiveStatement"},{"location":"RdfRestTransitiveStatement/#parents","text":"is_a: RdfListStatement - A statement that is used to represent aspects of RDF lists","title":"Parents"},{"location":"RdfRestTransitiveStatement/#attributes","text":"","title":"Attributes"},{"location":"RdfRestTransitiveStatement/#inherited-from-rdf-list-statement","text":"datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String rdf list statement\u279esubject OPT Description: The rdf:List to which the statement applies range: RdfListNode stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Inherited from rdf list statement:"},{"location":"RdfRestTransitiveStatement/#other-properties","text":"Comments: sqlview>> WITH RECURSIVE rdf_rest_transitive_statement ( subject, object ) AS (SELECT subject, object FROM rdf_rest_statement UNION ALL SELECT rest.subject, rest_t.object FROM rdf_rest_statement AS rest JOIN rdf_rest_transitive_statement AS rest_t ON rest.object = rest_t.subject ) SELECT * FROM rdf_rest_transitive_statement","title":"Other properties"},{"location":"RdfTypeStatement/","text":"Class: RdfTypeStatement A statement that indicates the asserted type of the subject entity URI: semsql:RdfTypeStatement Parents is_a: NodeToNodeStatement - A statement where object is non-null and value is not populated Referenced by class Attributes Own rdf type statement\u279eobject REQ Description: The entity type range: ClassNode Inherited from node to node statement: datatype OPT range: String language OPT range: String predicate OPT range: String stanza OPT range: Node subject OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='rdf:type'","title":"Class: RdfTypeStatement"},{"location":"RdfTypeStatement/#class-rdftypestatement","text":"A statement that indicates the asserted type of the subject entity URI: semsql:RdfTypeStatement","title":"Class: RdfTypeStatement"},{"location":"RdfTypeStatement/#parents","text":"is_a: NodeToNodeStatement - A statement where object is non-null and value is not populated","title":"Parents"},{"location":"RdfTypeStatement/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"RdfTypeStatement/#attributes","text":"","title":"Attributes"},{"location":"RdfTypeStatement/#own","text":"rdf type statement\u279eobject REQ Description: The entity type range: ClassNode","title":"Own"},{"location":"RdfTypeStatement/#inherited-from-node-to-node-statement","text":"datatype OPT range: String language OPT range: String predicate OPT range: String stanza OPT range: Node subject OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Inherited from node to node statement:"},{"location":"RdfTypeStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='rdf:type'","title":"Other properties"},{"location":"RdfsLabelStatement/","text":"Class: RdfsLabelStatement URI: semsql:RdfsLabelStatement Parents is_a: NodeToValueStatement - A statement where value is non-null and object is not populated Attributes Inherited from node to value statement: datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String stanza OPT range: Node subject OPT range: Node Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='rdfs:label'","title":"Class: RdfsLabelStatement"},{"location":"RdfsLabelStatement/#class-rdfslabelstatement","text":"URI: semsql:RdfsLabelStatement","title":"Class: RdfsLabelStatement"},{"location":"RdfsLabelStatement/#parents","text":"is_a: NodeToValueStatement - A statement where value is non-null and object is not populated","title":"Parents"},{"location":"RdfsLabelStatement/#attributes","text":"","title":"Attributes"},{"location":"RdfsLabelStatement/#inherited-from-node-to-value-statement","text":"datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String stanza OPT range: Node subject OPT range: Node","title":"Inherited from node to value statement:"},{"location":"RdfsLabelStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='rdfs:label'","title":"Other properties"},{"location":"RdfsSubClassOfStatement/","text":"Class: RdfsSubclassOfStatement URI: semsql:RdfsSubclassOfStatement Parents is_a: NodeToNodeStatement - A statement where object is non-null and value is not populated Referenced by class Attributes Own rdfs subclass of statement\u279eobject REQ Description: The superclass element of the triple range: ClassNode rdfs subclass of statement\u279esubject OPT Description: The subclass element of the triple range: ClassNode Inherited from node to node statement: datatype OPT range: String language OPT range: String predicate OPT range: String stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='rdfs:subClassOf'","title":"Class: RdfsSubclassOfStatement"},{"location":"RdfsSubClassOfStatement/#class-rdfssubclassofstatement","text":"URI: semsql:RdfsSubclassOfStatement","title":"Class: RdfsSubclassOfStatement"},{"location":"RdfsSubClassOfStatement/#parents","text":"is_a: NodeToNodeStatement - A statement where object is non-null and value is not populated","title":"Parents"},{"location":"RdfsSubClassOfStatement/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"RdfsSubClassOfStatement/#attributes","text":"","title":"Attributes"},{"location":"RdfsSubClassOfStatement/#own","text":"rdfs subclass of statement\u279eobject REQ Description: The superclass element of the triple range: ClassNode rdfs subclass of statement\u279esubject OPT Description: The subclass element of the triple range: ClassNode","title":"Own"},{"location":"RdfsSubClassOfStatement/#inherited-from-node-to-node-statement","text":"datatype OPT range: String language OPT range: String predicate OPT range: String stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Inherited from node to node statement:"},{"location":"RdfsSubClassOfStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='rdfs:subClassOf'","title":"Other properties"},{"location":"RelationGraphConstruct/","text":"Class: RelationGraphConstruct A construct used as part of a Relation Graph URI: semsql:RelationGraphConstruct Children Edge - A relation graph edge that connects two entities by a predicate. Note an edge is distinct from a statement, in that an axiom such as A SubClassOf R some B is represented as multiple statements, but is a single relation graph edge EntailedEdge - A relation graph edge that is inferred Referenced by class Attributes Other properties Comments: Relation Graphs are complementary abstractions to OWL in which axioms of the form A SubClassOf R some C form individual edges","title":"Class: RelationGraphConstruct"},{"location":"RelationGraphConstruct/#class-relationgraphconstruct","text":"A construct used as part of a Relation Graph URI: semsql:RelationGraphConstruct","title":"Class: RelationGraphConstruct"},{"location":"RelationGraphConstruct/#children","text":"Edge - A relation graph edge that connects two entities by a predicate. Note an edge is distinct from a statement, in that an axiom such as A SubClassOf R some B is represented as multiple statements, but is a single relation graph edge EntailedEdge - A relation graph edge that is inferred","title":"Children"},{"location":"RelationGraphConstruct/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"RelationGraphConstruct/#attributes","text":"","title":"Attributes"},{"location":"RelationGraphConstruct/#other-properties","text":"Comments: Relation Graphs are complementary abstractions to OWL in which axioms of the form A SubClassOf R some C form individual edges","title":"Other properties"},{"location":"RepairAction/","text":"Class: RepairAction Represents an action that needs to be taken to repair a problem URI: semsql:RepairAction Referenced by class Attributes Own description OPT range: String repair action\u279esubject OPT Description: The thing that is problematic range: Node","title":"Class: RepairAction"},{"location":"RepairAction/#class-repairaction","text":"Represents an action that needs to be taken to repair a problem URI: semsql:RepairAction","title":"Class: RepairAction"},{"location":"RepairAction/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"RepairAction/#attributes","text":"","title":"Attributes"},{"location":"RepairAction/#own","text":"description OPT range: String repair action\u279esubject OPT Description: The thing that is problematic range: Node","title":"Own"},{"location":"Statements/","text":"Class: Statements Represents an RDF triple URI: semsql:Statements Children NodeToNodeStatement - A statement where object is non-null and value is not populated NodeToValueStatement - A statement where value is non-null and object is not populated RdfListStatement - A statement that is used to represent aspects of RDF lists Referenced by class Attributes Own datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String stanza OPT range: Node subject OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType Other properties Aliases: triple Mappings: rdf:Statement","title":"Class: Statements"},{"location":"Statements/#class-statements","text":"Represents an RDF triple URI: semsql:Statements","title":"Class: Statements"},{"location":"Statements/#children","text":"NodeToNodeStatement - A statement where object is non-null and value is not populated NodeToValueStatement - A statement where value is non-null and object is not populated RdfListStatement - A statement that is used to represent aspects of RDF lists","title":"Children"},{"location":"Statements/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"Statements/#attributes","text":"","title":"Attributes"},{"location":"Statements/#own","text":"datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: String stanza OPT range: Node subject OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Own"},{"location":"Statements/#other-properties","text":"Aliases: triple Mappings: rdf:Statement","title":"Other properties"},{"location":"TodoNode/","text":"Class: TodoNode URI: semsql.owl:TodoNode Children OntologyNode Referenced by class Attributes","title":"Class: TodoNode"},{"location":"TodoNode/#class-todonode","text":"URI: semsql.owl:TodoNode","title":"Class: TodoNode"},{"location":"TodoNode/#children","text":"OntologyNode","title":"Children"},{"location":"TodoNode/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"TodoNode/#attributes","text":"","title":"Attributes"},{"location":"TrailingWhitespaceProblem/","text":"Class: TrailingWhitespaceProblem URI: semsql:TrailingWhitespaceProblem Parents is_a: Problem - Represents an instance of a problem pertaining to conformance to OBO guidelines Attributes Inherited from problem: description OPT range: String problem\u279esubject OPT Description: The thing that is problematic range: Node Other properties Comments: sqlview>> SELECT subject, value AS description FROM statements WHERE VALUE like ' %' OR VALUE like '% '","title":"Class: TrailingWhitespaceProblem"},{"location":"TrailingWhitespaceProblem/#class-trailingwhitespaceproblem","text":"URI: semsql:TrailingWhitespaceProblem","title":"Class: TrailingWhitespaceProblem"},{"location":"TrailingWhitespaceProblem/#parents","text":"is_a: Problem - Represents an instance of a problem pertaining to conformance to OBO guidelines","title":"Parents"},{"location":"TrailingWhitespaceProblem/#attributes","text":"","title":"Attributes"},{"location":"TrailingWhitespaceProblem/#inherited-from-problem","text":"description OPT range: String problem\u279esubject OPT Description: The thing that is problematic range: Node","title":"Inherited from problem:"},{"location":"TrailingWhitespaceProblem/#other-properties","text":"Comments: sqlview>> SELECT subject, value AS description FROM statements WHERE VALUE like ' %' OR VALUE like '% '","title":"Other properties"},{"location":"TransitivePropertyNode/","text":"Class: TransitivePropertyNode URI: semsql:TransitivePropertyNode Parents is_a: ObjectPropertyNode Attributes Inherited from object property node: id REQ range: NodeIdType Other properties Comments: sqlview>> SELECT DISTINCT subject AS id FROM rdf_type_statement WHERE object='owl:TransitiveProperty'","title":"Class: TransitivePropertyNode"},{"location":"TransitivePropertyNode/#class-transitivepropertynode","text":"URI: semsql:TransitivePropertyNode","title":"Class: TransitivePropertyNode"},{"location":"TransitivePropertyNode/#parents","text":"is_a: ObjectPropertyNode","title":"Parents"},{"location":"TransitivePropertyNode/#attributes","text":"","title":"Attributes"},{"location":"TransitivePropertyNode/#inherited-from-object-property-node","text":"id REQ range: NodeIdType","title":"Inherited from object property node:"},{"location":"TransitivePropertyNode/#other-properties","text":"Comments: sqlview>> SELECT DISTINCT subject AS id FROM rdf_type_statement WHERE object='owl:TransitiveProperty'","title":"Other properties"},{"location":"base/","text":"Slot: base URI: semsql:base Domain and Range None -> OPT Uri Parents Children Used by Prefix Other properties Mappings: sh:namespace","title":"Slot: base"},{"location":"base/#slot-base","text":"URI: semsql:base","title":"Slot: base"},{"location":"base/#domain-and-range","text":"None -> OPT Uri","title":"Domain and Range"},{"location":"base/#parents","text":"","title":"Parents"},{"location":"base/#children","text":"","title":"Children"},{"location":"base/#used-by","text":"Prefix","title":"Used by"},{"location":"base/#other-properties","text":"Mappings: sh:namespace","title":"Other properties"},{"location":"datatype/","text":"Slot: datatype URI: semsql:datatype Domain and Range None -> OPT String Parents Children Used by HasBroadMatchStatement HasBroadSynonymStatement HasDbxrefStatement HasExactMatchStatement HasExactSynonymStatement HasMappingStatement HasMatchStatement HasNarrowMatchStatement HasNarrowSynonymStatement HasOioSynonymStatement HasRelatedMatchStatement HasRelatedSynonymStatement HasSynonymStatement NodeToNodeStatement NodeToValueStatement OwlDisjointClassStatement OwlEquivalentClassStatement RdfFirstStatement RdfListMemberStatement RdfListStatement RdfRestStatement RdfRestTransitiveStatement RdfTypeStatement RdfsLabelStatement RdfsSubclassOfStatement Statements","title":"Slot: datatype"},{"location":"datatype/#slot-datatype","text":"URI: semsql:datatype","title":"Slot: datatype"},{"location":"datatype/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"datatype/#parents","text":"","title":"Parents"},{"location":"datatype/#children","text":"","title":"Children"},{"location":"datatype/#used-by","text":"HasBroadMatchStatement HasBroadSynonymStatement HasDbxrefStatement HasExactMatchStatement HasExactSynonymStatement HasMappingStatement HasMatchStatement HasNarrowMatchStatement HasNarrowSynonymStatement HasOioSynonymStatement HasRelatedMatchStatement HasRelatedSynonymStatement HasSynonymStatement NodeToNodeStatement NodeToValueStatement OwlDisjointClassStatement OwlEquivalentClassStatement RdfFirstStatement RdfListMemberStatement RdfListStatement RdfRestStatement RdfRestTransitiveStatement RdfTypeStatement RdfsLabelStatement RdfsSubclassOfStatement Statements","title":"Used by"},{"location":"description/","text":"Slot: description URI: semsql:description Domain and Range None -> OPT String Parents Children Used by AllProblems LexicalProblem NodeWithTwoLabelsProblem Problem PropertyUsedWithDatatypeValuesAndObjects RepairAction TrailingWhitespaceProblem Other properties Mappings: dcterms:description","title":"Slot: description"},{"location":"description/#slot-description","text":"URI: semsql:description","title":"Slot: description"},{"location":"description/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"description/#parents","text":"","title":"Parents"},{"location":"description/#children","text":"","title":"Children"},{"location":"description/#used-by","text":"AllProblems LexicalProblem NodeWithTwoLabelsProblem Problem PropertyUsedWithDatatypeValuesAndObjects RepairAction TrailingWhitespaceProblem","title":"Used by"},{"location":"description/#other-properties","text":"Mappings: dcterms:description","title":"Other properties"},{"location":"filler/","text":"Slot: filler URI: semsql:filler Domain and Range None -> OPT ClassNode Parents Children Used by OwlAllValuesFrom OwlRestriction OwlSomeValuesFrom","title":"Slot: filler"},{"location":"filler/#slot-filler","text":"URI: semsql:filler","title":"Slot: filler"},{"location":"filler/#domain-and-range","text":"None -> OPT ClassNode","title":"Domain and Range"},{"location":"filler/#parents","text":"","title":"Parents"},{"location":"filler/#children","text":"","title":"Children"},{"location":"filler/#used-by","text":"OwlAllValuesFrom OwlRestriction OwlSomeValuesFrom","title":"Used by"},{"location":"id/","text":"Slot: id URI: semsql:id Domain and Range None -> REQ NodeIdType Parents Children owl restriction\u279eid Used by AnnotationPropertyNode AnonymousClassExpression AnonymousExpression AnonymousIndividualExpression AnonymousPropertyExpression BlankNode ClassNode IriNode NamedIndividualNode Node ObjectPropertyNode OntologyNode PropertyNode RdfListNode TransitivePropertyNode","title":"Slot: id"},{"location":"id/#slot-id","text":"URI: semsql:id","title":"Slot: id"},{"location":"id/#domain-and-range","text":"None -> REQ NodeIdType","title":"Domain and Range"},{"location":"id/#parents","text":"","title":"Parents"},{"location":"id/#children","text":"owl restriction\u279eid","title":"Children"},{"location":"id/#used-by","text":"AnnotationPropertyNode AnonymousClassExpression AnonymousExpression AnonymousIndividualExpression AnonymousPropertyExpression BlankNode ClassNode IriNode NamedIndividualNode Node ObjectPropertyNode OntologyNode PropertyNode RdfListNode TransitivePropertyNode","title":"Used by"},{"location":"language/","text":"Slot: language URI: semsql:language Domain and Range None -> OPT String Parents Children Used by HasBroadMatchStatement HasBroadSynonymStatement HasDbxrefStatement HasExactMatchStatement HasExactSynonymStatement HasMappingStatement HasMatchStatement HasNarrowMatchStatement HasNarrowSynonymStatement HasOioSynonymStatement HasRelatedMatchStatement HasRelatedSynonymStatement HasSynonymStatement NodeToNodeStatement NodeToValueStatement OwlDisjointClassStatement OwlEquivalentClassStatement RdfFirstStatement RdfListMemberStatement RdfListStatement RdfRestStatement RdfRestTransitiveStatement RdfTypeStatement RdfsLabelStatement RdfsSubclassOfStatement Statements","title":"Slot: language"},{"location":"language/#slot-language","text":"URI: semsql:language","title":"Slot: language"},{"location":"language/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"language/#parents","text":"","title":"Parents"},{"location":"language/#children","text":"","title":"Children"},{"location":"language/#used-by","text":"HasBroadMatchStatement HasBroadSynonymStatement HasDbxrefStatement HasExactMatchStatement HasExactSynonymStatement HasMappingStatement HasMatchStatement HasNarrowMatchStatement HasNarrowSynonymStatement HasOioSynonymStatement HasRelatedMatchStatement HasRelatedSynonymStatement HasSynonymStatement NodeToNodeStatement NodeToValueStatement OwlDisjointClassStatement OwlEquivalentClassStatement RdfFirstStatement RdfListMemberStatement RdfListStatement RdfRestStatement RdfRestTransitiveStatement RdfTypeStatement RdfsLabelStatement RdfsSubclassOfStatement Statements","title":"Used by"},{"location":"nodeWithTwoLabelsProblem__label1/","text":"Slot: nodeWithTwoLabelsProblem__label1 URI: semsql:nodeWithTwoLabelsProblem__label1 Domain and Range None -> OPT String Parents Children Used by NodeWithTwoLabelsProblem","title":"Slot: nodeWithTwoLabelsProblem__label1"},{"location":"nodeWithTwoLabelsProblem__label1/#slot-nodewithtwolabelsproblem__label1","text":"URI: semsql:nodeWithTwoLabelsProblem__label1","title":"Slot: nodeWithTwoLabelsProblem__label1"},{"location":"nodeWithTwoLabelsProblem__label1/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"nodeWithTwoLabelsProblem__label1/#parents","text":"","title":"Parents"},{"location":"nodeWithTwoLabelsProblem__label1/#children","text":"","title":"Children"},{"location":"nodeWithTwoLabelsProblem__label1/#used-by","text":"NodeWithTwoLabelsProblem","title":"Used by"},{"location":"nodeWithTwoLabelsProblem__label2/","text":"Slot: nodeWithTwoLabelsProblem__label2 URI: semsql:nodeWithTwoLabelsProblem__label2 Domain and Range None -> OPT String Parents Children Used by NodeWithTwoLabelsProblem","title":"Slot: nodeWithTwoLabelsProblem__label2"},{"location":"nodeWithTwoLabelsProblem__label2/#slot-nodewithtwolabelsproblem__label2","text":"URI: semsql:nodeWithTwoLabelsProblem__label2","title":"Slot: nodeWithTwoLabelsProblem__label2"},{"location":"nodeWithTwoLabelsProblem__label2/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"nodeWithTwoLabelsProblem__label2/#parents","text":"","title":"Parents"},{"location":"nodeWithTwoLabelsProblem__label2/#children","text":"","title":"Children"},{"location":"nodeWithTwoLabelsProblem__label2/#used-by","text":"NodeWithTwoLabelsProblem","title":"Used by"},{"location":"node_to_node_statement_object/","text":"Slot: node_to_node_statement_object URI: semsql:node_to_node_statement_object Domain and Range NodeToNodeStatement -> REQ Node Parents is_a: object Children owl disjoint class statement\u279eobject owl equivalent class statement\u279eobject rdf type statement\u279eobject rdfs subclass of statement\u279eobject Used by NodeToNodeStatement","title":"Slot: node_to_node_statement_object"},{"location":"node_to_node_statement_object/#slot-node_to_node_statement_object","text":"URI: semsql:node_to_node_statement_object","title":"Slot: node_to_node_statement_object"},{"location":"node_to_node_statement_object/#domain-and-range","text":"NodeToNodeStatement -> REQ Node","title":"Domain and Range"},{"location":"node_to_node_statement_object/#parents","text":"is_a: object","title":"Parents"},{"location":"node_to_node_statement_object/#children","text":"owl disjoint class statement\u279eobject owl equivalent class statement\u279eobject rdf type statement\u279eobject rdfs subclass of statement\u279eobject","title":"Children"},{"location":"node_to_node_statement_object/#used-by","text":"NodeToNodeStatement","title":"Used by"},{"location":"node_to_value_statement_value/","text":"Slot: node_to_value_statement_value URI: semsql:node_to_value_statement_value Domain and Range NodeToValueStatement -> REQ LiteralAsStringType Parents is_a: value Children Used by HasBroadMatchStatement HasBroadSynonymStatement HasDbxrefStatement HasExactMatchStatement HasExactSynonymStatement HasMappingStatement HasMatchStatement HasNarrowMatchStatement HasNarrowSynonymStatement HasOioSynonymStatement HasRelatedMatchStatement HasRelatedSynonymStatement HasSynonymStatement NodeToValueStatement RdfsLabelStatement","title":"Slot: node_to_value_statement_value"},{"location":"node_to_value_statement_value/#slot-node_to_value_statement_value","text":"URI: semsql:node_to_value_statement_value","title":"Slot: node_to_value_statement_value"},{"location":"node_to_value_statement_value/#domain-and-range","text":"NodeToValueStatement -> REQ LiteralAsStringType","title":"Domain and Range"},{"location":"node_to_value_statement_value/#parents","text":"is_a: value","title":"Parents"},{"location":"node_to_value_statement_value/#children","text":"","title":"Children"},{"location":"node_to_value_statement_value/#used-by","text":"HasBroadMatchStatement HasBroadSynonymStatement HasDbxrefStatement HasExactMatchStatement HasExactSynonymStatement HasMappingStatement HasMatchStatement HasNarrowMatchStatement HasNarrowSynonymStatement HasOioSynonymStatement HasRelatedMatchStatement HasRelatedSynonymStatement HasSynonymStatement NodeToValueStatement RdfsLabelStatement","title":"Used by"},{"location":"object/","text":"Slot: object Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated URI: semsql:object Domain and Range None -> OPT Node Parents Children node to node statement\u279eobject owl equivalent to intersection member\u279eobject owl subclass of some values from\u279eobject Used by Edge EntailedEdge HasBroadMatchStatement HasBroadSynonymStatement HasDbxrefStatement HasExactMatchStatement HasExactSynonymStatement HasMappingStatement HasMatchStatement HasNarrowMatchStatement HasNarrowSynonymStatement HasOioSynonymStatement HasRelatedMatchStatement HasRelatedSynonymStatement HasSynonymStatement NodeToValueStatement RdfFirstStatement RdfListMemberStatement RdfListStatement RdfRestStatement RdfRestTransitiveStatement RdfsLabelStatement Statements","title":"Slot: object"},{"location":"object/#slot-object","text":"Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated URI: semsql:object","title":"Slot: object"},{"location":"object/#domain-and-range","text":"None -> OPT Node","title":"Domain and Range"},{"location":"object/#parents","text":"","title":"Parents"},{"location":"object/#children","text":"node to node statement\u279eobject owl equivalent to intersection member\u279eobject owl subclass of some values from\u279eobject","title":"Children"},{"location":"object/#used-by","text":"Edge EntailedEdge HasBroadMatchStatement HasBroadSynonymStatement HasDbxrefStatement HasExactMatchStatement HasExactSynonymStatement HasMappingStatement HasMatchStatement HasNarrowMatchStatement HasNarrowSynonymStatement HasOioSynonymStatement HasRelatedMatchStatement HasRelatedSynonymStatement HasSynonymStatement NodeToValueStatement RdfFirstStatement RdfListMemberStatement RdfListStatement RdfRestStatement RdfRestTransitiveStatement RdfsLabelStatement Statements","title":"Used by"},{"location":"obo_index/","text":"Semsql_Obo schema Abstractions for working with OBO ontologies. Assumes usage of OMO. Currently this module contains mostly checks/reports, similar to ROBOT report Classes Node BlankNode AnonymousExpression AnonymousClassExpression OwlRestriction OwlAllValuesFrom OwlSomeValuesFrom AnonymousIndividualExpression AnonymousPropertyExpression RdfListNode - A node representing an RDF list ClassNode IriNode NamedIndividualNode OntologyNode - A node representing an ontology PropertyNode AnnotationPropertyNode ObjectPropertyNode TransitivePropertyNode OwlComplexAxiom - An axiom that is composed of two or more statements OwlEquivalentToIntersectionMember - Composition of OwlEquivalentClass, OwlIntersectionOf, and RdfListMember; C = X1 and ... and Xn OwlSubclassOfSomeValuesFrom - Composition of subClassOf and SomeValuesFrom Prefix - Maps CURIEs to URIs Problem - Represents an instance of a problem pertaining to conformance to OBO guidelines AllProblems LexicalProblem - a problem with the textual value of an annotation property NodeWithTwoLabelsProblem PropertyUsedWithDatatypeValuesAndObjects - A problem in which the same property is used two two different ways, one in which the range is a literal value, the other where it is an object. TrailingWhitespaceProblem RdfLevelSummaryStatistic CountOfInstantiatedClasses CountOfPredicates RepairAction - Represents an action that needs to be taken to repair a problem Statements - Represents an RDF triple NodeToNodeStatement - A statement where object is non-null and value is not populated OwlDisjointClassStatement OwlEquivalentClassStatement RdfTypeStatement - A statement that indicates the asserted type of the subject entity RdfsSubclassOfStatement NodeToValueStatement - A statement where value is non-null and object is not populated HasMappingStatement HasDbxrefStatement HasMatchStatement HasBroadMatchStatement HasExactMatchStatement HasNarrowMatchStatement HasRelatedMatchStatement HasOioSynonymStatement HasBroadSynonymStatement HasExactSynonymStatement HasNarrowSynonymStatement HasRelatedSynonymStatement HasSynonymStatement RdfsLabelStatement RdfListStatement - A statement that is used to represent aspects of RDF lists RdfFirstStatement - A statement that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfListMemberStatement RdfRestStatement - A statement that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfRestTransitiveStatement Mixins ClassTrait IndividualTrait IsReport NodeTrait ClassTrait IndividualTrait PropertyTrait PropertyTrait Slots base datatype description filler id owl restriction\u279eid - the id of the restriction language \u279elabel1 \u279elabel2 object - Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated node to node statement\u279eobject owl disjoint class statement\u279eobject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279eobject - One of the two classes that are equivalent. No significance to subject vs object rdf type statement\u279eobject - The entity type rdfs subclass of statement\u279eobject - The superclass element of the triple owl equivalent to intersection member\u279eobject - a class expression that forms the defining expression owl subclass of some values from\u279eobject - the class D in the axiom C subClassOf P some D on property predicate owl subclass of some values from\u279epredicate - the predicate P in the axiom C subClassOf P some D prefix \u279eelement \u279enumber_of_usages restriction stanza subject owl disjoint class statement\u279esubject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279esubject - One of the two classes that are equivalent. No significance to subject vs object owl equivalent to intersection member\u279esubject - the defined class owl subclass of some values from\u279esubject - the class C in the axiom C subClassOf P some D problem\u279esubject - The thing that is problematic rdf list statement\u279esubject - The rdf:List to which the statement applies rdfs subclass of statement\u279esubject - The subclass element of the triple repair action\u279esubject - The thing that is problematic value - Note the range of this slot is always a string. Only used the triple represents a literal assertion node to value statement\u279evalue Enums Types Built in Bool Decimal ElementIdentifier NCName NodeIdentifier URI URIorCURIE XSDDate XSDDateTime XSDTime float int str Defined Boolean ( Bool ) - A binary (true or false) value Date ( XSDDate ) - a date (year, month and day) in an idealized calendar Datetime ( XSDDateTime ) - The combination of a date and time Decimal ( Decimal ) - A real number with arbitrary precision that conforms to the xsd:decimal specification Double ( float ) - A real number that conforms to the xsd:double specification Float ( float ) - A real number that conforms to the xsd:float specification Integer ( int ) - An integer LiteralAsStringType ( String ) Ncname ( NCName ) - Prefix part of CURIE NodeIdType ( Uriorcurie ) Nodeidentifier ( NodeIdentifier ) - A URI, CURIE or BNODE that represents a node in a model. Objectidentifier ( ElementIdentifier ) - A URI or CURIE that represents an object in the model. String ( str ) - A character string Time ( XSDTime ) - A time object represents a (local) time of day, independent of any particular day Uri ( URI ) - a complete URI Uriorcurie ( URIorCURIE ) - a URI or a CURIE","title":"OBO"},{"location":"obo_index/#semsql_obo-schema","text":"Abstractions for working with OBO ontologies. Assumes usage of OMO. Currently this module contains mostly checks/reports, similar to ROBOT report","title":"Semsql_Obo schema"},{"location":"obo_index/#classes","text":"Node BlankNode AnonymousExpression AnonymousClassExpression OwlRestriction OwlAllValuesFrom OwlSomeValuesFrom AnonymousIndividualExpression AnonymousPropertyExpression RdfListNode - A node representing an RDF list ClassNode IriNode NamedIndividualNode OntologyNode - A node representing an ontology PropertyNode AnnotationPropertyNode ObjectPropertyNode TransitivePropertyNode OwlComplexAxiom - An axiom that is composed of two or more statements OwlEquivalentToIntersectionMember - Composition of OwlEquivalentClass, OwlIntersectionOf, and RdfListMember; C = X1 and ... and Xn OwlSubclassOfSomeValuesFrom - Composition of subClassOf and SomeValuesFrom Prefix - Maps CURIEs to URIs Problem - Represents an instance of a problem pertaining to conformance to OBO guidelines AllProblems LexicalProblem - a problem with the textual value of an annotation property NodeWithTwoLabelsProblem PropertyUsedWithDatatypeValuesAndObjects - A problem in which the same property is used two two different ways, one in which the range is a literal value, the other where it is an object. TrailingWhitespaceProblem RdfLevelSummaryStatistic CountOfInstantiatedClasses CountOfPredicates RepairAction - Represents an action that needs to be taken to repair a problem Statements - Represents an RDF triple NodeToNodeStatement - A statement where object is non-null and value is not populated OwlDisjointClassStatement OwlEquivalentClassStatement RdfTypeStatement - A statement that indicates the asserted type of the subject entity RdfsSubclassOfStatement NodeToValueStatement - A statement where value is non-null and object is not populated HasMappingStatement HasDbxrefStatement HasMatchStatement HasBroadMatchStatement HasExactMatchStatement HasNarrowMatchStatement HasRelatedMatchStatement HasOioSynonymStatement HasBroadSynonymStatement HasExactSynonymStatement HasNarrowSynonymStatement HasRelatedSynonymStatement HasSynonymStatement RdfsLabelStatement RdfListStatement - A statement that is used to represent aspects of RDF lists RdfFirstStatement - A statement that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfListMemberStatement RdfRestStatement - A statement that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfRestTransitiveStatement","title":"Classes"},{"location":"obo_index/#mixins","text":"ClassTrait IndividualTrait IsReport NodeTrait ClassTrait IndividualTrait PropertyTrait PropertyTrait","title":"Mixins"},{"location":"obo_index/#slots","text":"base datatype description filler id owl restriction\u279eid - the id of the restriction language \u279elabel1 \u279elabel2 object - Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated node to node statement\u279eobject owl disjoint class statement\u279eobject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279eobject - One of the two classes that are equivalent. No significance to subject vs object rdf type statement\u279eobject - The entity type rdfs subclass of statement\u279eobject - The superclass element of the triple owl equivalent to intersection member\u279eobject - a class expression that forms the defining expression owl subclass of some values from\u279eobject - the class D in the axiom C subClassOf P some D on property predicate owl subclass of some values from\u279epredicate - the predicate P in the axiom C subClassOf P some D prefix \u279eelement \u279enumber_of_usages restriction stanza subject owl disjoint class statement\u279esubject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279esubject - One of the two classes that are equivalent. No significance to subject vs object owl equivalent to intersection member\u279esubject - the defined class owl subclass of some values from\u279esubject - the class C in the axiom C subClassOf P some D problem\u279esubject - The thing that is problematic rdf list statement\u279esubject - The rdf:List to which the statement applies rdfs subclass of statement\u279esubject - The subclass element of the triple repair action\u279esubject - The thing that is problematic value - Note the range of this slot is always a string. Only used the triple represents a literal assertion node to value statement\u279evalue","title":"Slots"},{"location":"obo_index/#enums","text":"","title":"Enums"},{"location":"obo_index/#types","text":"","title":"Types"},{"location":"obo_index/#built-in","text":"Bool Decimal ElementIdentifier NCName NodeIdentifier URI URIorCURIE XSDDate XSDDateTime XSDTime float int str","title":"Built in"},{"location":"obo_index/#defined","text":"Boolean ( Bool ) - A binary (true or false) value Date ( XSDDate ) - a date (year, month and day) in an idealized calendar Datetime ( XSDDateTime ) - The combination of a date and time Decimal ( Decimal ) - A real number with arbitrary precision that conforms to the xsd:decimal specification Double ( float ) - A real number that conforms to the xsd:double specification Float ( float ) - A real number that conforms to the xsd:float specification Integer ( int ) - An integer LiteralAsStringType ( String ) Ncname ( NCName ) - Prefix part of CURIE NodeIdType ( Uriorcurie ) Nodeidentifier ( NodeIdentifier ) - A URI, CURIE or BNODE that represents a node in a model. Objectidentifier ( ElementIdentifier ) - A URI or CURIE that represents an object in the model. String ( str ) - A character string Time ( XSDTime ) - A time object represents a (local) time of day, independent of any particular day Uri ( URI ) - a complete URI Uriorcurie ( URIorCURIE ) - a URI or a CURIE","title":"Defined"},{"location":"omo_index/","text":"Semsql_Obo schema Module representing OBO Metadata Ontology abstractions Classes Node BlankNode AnonymousExpression AnonymousClassExpression OwlRestriction OwlAllValuesFrom OwlSomeValuesFrom AnonymousIndividualExpression AnonymousPropertyExpression RdfListNode - A node representing an RDF list ClassNode IriNode NamedIndividualNode OntologyNode - A node representing an ontology PropertyNode AnnotationPropertyNode ObjectPropertyNode TransitivePropertyNode OwlComplexAxiom - An axiom that is composed of two or more statements OwlEquivalentToIntersectionMember - Composition of OwlEquivalentClass, OwlIntersectionOf, and RdfListMember; C = X1 and ... and Xn OwlSubclassOfSomeValuesFrom - Composition of subClassOf and SomeValuesFrom Prefix - Maps CURIEs to URIs RdfLevelSummaryStatistic CountOfInstantiatedClasses CountOfPredicates Statements - Represents an RDF triple NodeToNodeStatement - A statement where object is non-null and value is not populated OwlDisjointClassStatement OwlEquivalentClassStatement RdfTypeStatement - A statement that indicates the asserted type of the subject entity RdfsSubclassOfStatement NodeToValueStatement - A statement where value is non-null and object is not populated HasMappingStatement HasDbxrefStatement HasMatchStatement HasBroadMatchStatement HasExactMatchStatement HasNarrowMatchStatement HasRelatedMatchStatement HasOioSynonymStatement HasBroadSynonymStatement HasExactSynonymStatement HasNarrowSynonymStatement HasRelatedSynonymStatement HasSynonymStatement RdfsLabelStatement RdfListStatement - A statement that is used to represent aspects of RDF lists RdfFirstStatement - A statement that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfListMemberStatement RdfRestStatement - A statement that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfRestTransitiveStatement Mixins ClassTrait IndividualTrait IsReport NodeTrait ClassTrait IndividualTrait PropertyTrait PropertyTrait Slots base datatype description filler id owl restriction\u279eid - the id of the restriction language object - Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated node to node statement\u279eobject owl disjoint class statement\u279eobject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279eobject - One of the two classes that are equivalent. No significance to subject vs object rdf type statement\u279eobject - The entity type rdfs subclass of statement\u279eobject - The superclass element of the triple owl equivalent to intersection member\u279eobject - a class expression that forms the defining expression owl subclass of some values from\u279eobject - the class D in the axiom C subClassOf P some D on property predicate owl subclass of some values from\u279epredicate - the predicate P in the axiom C subClassOf P some D prefix \u279eelement \u279enumber_of_usages restriction stanza subject owl disjoint class statement\u279esubject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279esubject - One of the two classes that are equivalent. No significance to subject vs object owl equivalent to intersection member\u279esubject - the defined class owl subclass of some values from\u279esubject - the class C in the axiom C subClassOf P some D rdf list statement\u279esubject - The rdf:List to which the statement applies rdfs subclass of statement\u279esubject - The subclass element of the triple value - Note the range of this slot is always a string. Only used the triple represents a literal assertion node to value statement\u279evalue Enums Types Built in Bool Decimal ElementIdentifier NCName NodeIdentifier URI URIorCURIE XSDDate XSDDateTime XSDTime float int str Defined Boolean ( Bool ) - A binary (true or false) value Date ( XSDDate ) - a date (year, month and day) in an idealized calendar Datetime ( XSDDateTime ) - The combination of a date and time Decimal ( Decimal ) - A real number with arbitrary precision that conforms to the xsd:decimal specification Double ( float ) - A real number that conforms to the xsd:double specification Float ( float ) - A real number that conforms to the xsd:float specification Integer ( int ) - An integer LiteralAsStringType ( String ) Ncname ( NCName ) - Prefix part of CURIE NodeIdType ( Uriorcurie ) Nodeidentifier ( NodeIdentifier ) - A URI, CURIE or BNODE that represents a node in a model. Objectidentifier ( ElementIdentifier ) - A URI or CURIE that represents an object in the model. String ( str ) - A character string Time ( XSDTime ) - A time object represents a (local) time of day, independent of any particular day Uri ( URI ) - a complete URI Uriorcurie ( URIorCURIE ) - a URI or a CURIE","title":"OMO"},{"location":"omo_index/#semsql_obo-schema","text":"Module representing OBO Metadata Ontology abstractions","title":"Semsql_Obo schema"},{"location":"omo_index/#classes","text":"Node BlankNode AnonymousExpression AnonymousClassExpression OwlRestriction OwlAllValuesFrom OwlSomeValuesFrom AnonymousIndividualExpression AnonymousPropertyExpression RdfListNode - A node representing an RDF list ClassNode IriNode NamedIndividualNode OntologyNode - A node representing an ontology PropertyNode AnnotationPropertyNode ObjectPropertyNode TransitivePropertyNode OwlComplexAxiom - An axiom that is composed of two or more statements OwlEquivalentToIntersectionMember - Composition of OwlEquivalentClass, OwlIntersectionOf, and RdfListMember; C = X1 and ... and Xn OwlSubclassOfSomeValuesFrom - Composition of subClassOf and SomeValuesFrom Prefix - Maps CURIEs to URIs RdfLevelSummaryStatistic CountOfInstantiatedClasses CountOfPredicates Statements - Represents an RDF triple NodeToNodeStatement - A statement where object is non-null and value is not populated OwlDisjointClassStatement OwlEquivalentClassStatement RdfTypeStatement - A statement that indicates the asserted type of the subject entity RdfsSubclassOfStatement NodeToValueStatement - A statement where value is non-null and object is not populated HasMappingStatement HasDbxrefStatement HasMatchStatement HasBroadMatchStatement HasExactMatchStatement HasNarrowMatchStatement HasRelatedMatchStatement HasOioSynonymStatement HasBroadSynonymStatement HasExactSynonymStatement HasNarrowSynonymStatement HasRelatedSynonymStatement HasSynonymStatement RdfsLabelStatement RdfListStatement - A statement that is used to represent aspects of RDF lists RdfFirstStatement - A statement that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfListMemberStatement RdfRestStatement - A statement that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfRestTransitiveStatement","title":"Classes"},{"location":"omo_index/#mixins","text":"ClassTrait IndividualTrait IsReport NodeTrait ClassTrait IndividualTrait PropertyTrait PropertyTrait","title":"Mixins"},{"location":"omo_index/#slots","text":"base datatype description filler id owl restriction\u279eid - the id of the restriction language object - Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated node to node statement\u279eobject owl disjoint class statement\u279eobject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279eobject - One of the two classes that are equivalent. No significance to subject vs object rdf type statement\u279eobject - The entity type rdfs subclass of statement\u279eobject - The superclass element of the triple owl equivalent to intersection member\u279eobject - a class expression that forms the defining expression owl subclass of some values from\u279eobject - the class D in the axiom C subClassOf P some D on property predicate owl subclass of some values from\u279epredicate - the predicate P in the axiom C subClassOf P some D prefix \u279eelement \u279enumber_of_usages restriction stanza subject owl disjoint class statement\u279esubject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279esubject - One of the two classes that are equivalent. No significance to subject vs object owl equivalent to intersection member\u279esubject - the defined class owl subclass of some values from\u279esubject - the class C in the axiom C subClassOf P some D rdf list statement\u279esubject - The rdf:List to which the statement applies rdfs subclass of statement\u279esubject - The subclass element of the triple value - Note the range of this slot is always a string. Only used the triple represents a literal assertion node to value statement\u279evalue","title":"Slots"},{"location":"omo_index/#enums","text":"","title":"Enums"},{"location":"omo_index/#types","text":"","title":"Types"},{"location":"omo_index/#built-in","text":"Bool Decimal ElementIdentifier NCName NodeIdentifier URI URIorCURIE XSDDate XSDDateTime XSDTime float int str","title":"Built in"},{"location":"omo_index/#defined","text":"Boolean ( Bool ) - A binary (true or false) value Date ( XSDDate ) - a date (year, month and day) in an idealized calendar Datetime ( XSDDateTime ) - The combination of a date and time Decimal ( Decimal ) - A real number with arbitrary precision that conforms to the xsd:decimal specification Double ( float ) - A real number that conforms to the xsd:double specification Float ( float ) - A real number that conforms to the xsd:float specification Integer ( int ) - An integer LiteralAsStringType ( String ) Ncname ( NCName ) - Prefix part of CURIE NodeIdType ( Uriorcurie ) Nodeidentifier ( NodeIdentifier ) - A URI, CURIE or BNODE that represents a node in a model. Objectidentifier ( ElementIdentifier ) - A URI or CURIE that represents an object in the model. String ( str ) - A character string Time ( XSDTime ) - A time object represents a (local) time of day, independent of any particular day Uri ( URI ) - a complete URI Uriorcurie ( URIorCURIE ) - a URI or a CURIE","title":"Defined"},{"location":"on_property/","text":"Slot: on_property URI: semsql:on_property Domain and Range None -> OPT Node Parents Children Used by OwlAllValuesFrom OwlRestriction OwlSomeValuesFrom","title":"Slot: on_property"},{"location":"on_property/#slot-on_property","text":"URI: semsql:on_property","title":"Slot: on_property"},{"location":"on_property/#domain-and-range","text":"None -> OPT Node","title":"Domain and Range"},{"location":"on_property/#parents","text":"","title":"Parents"},{"location":"on_property/#children","text":"","title":"Children"},{"location":"on_property/#used-by","text":"OwlAllValuesFrom OwlRestriction OwlSomeValuesFrom","title":"Used by"},{"location":"owl_disjoint_class_statement_object/","text":"Slot: owl_disjoint_class_statement_object One of the two classes that are disjoint. No significance to subject vs object URI: semsql:owl_disjoint_class_statement_object Domain and Range OwlDisjointClassStatement -> REQ ClassNode Parents is_a: node to node statement\u279eobject Children Used by OwlDisjointClassStatement","title":"Slot: owl_disjoint_class_statement_object"},{"location":"owl_disjoint_class_statement_object/#slot-owl_disjoint_class_statement_object","text":"One of the two classes that are disjoint. No significance to subject vs object URI: semsql:owl_disjoint_class_statement_object","title":"Slot: owl_disjoint_class_statement_object"},{"location":"owl_disjoint_class_statement_object/#domain-and-range","text":"OwlDisjointClassStatement -> REQ ClassNode","title":"Domain and Range"},{"location":"owl_disjoint_class_statement_object/#parents","text":"is_a: node to node statement\u279eobject","title":"Parents"},{"location":"owl_disjoint_class_statement_object/#children","text":"","title":"Children"},{"location":"owl_disjoint_class_statement_object/#used-by","text":"OwlDisjointClassStatement","title":"Used by"},{"location":"owl_disjoint_class_statement_subject/","text":"Slot: owl_disjoint_class_statement_subject One of the two classes that are disjoint. No significance to subject vs object URI: semsql:owl_disjoint_class_statement_subject Domain and Range OwlDisjointClassStatement -> OPT ClassNode Parents is_a: subject Children Used by OwlDisjointClassStatement","title":"Slot: owl_disjoint_class_statement_subject"},{"location":"owl_disjoint_class_statement_subject/#slot-owl_disjoint_class_statement_subject","text":"One of the two classes that are disjoint. No significance to subject vs object URI: semsql:owl_disjoint_class_statement_subject","title":"Slot: owl_disjoint_class_statement_subject"},{"location":"owl_disjoint_class_statement_subject/#domain-and-range","text":"OwlDisjointClassStatement -> OPT ClassNode","title":"Domain and Range"},{"location":"owl_disjoint_class_statement_subject/#parents","text":"is_a: subject","title":"Parents"},{"location":"owl_disjoint_class_statement_subject/#children","text":"","title":"Children"},{"location":"owl_disjoint_class_statement_subject/#used-by","text":"OwlDisjointClassStatement","title":"Used by"},{"location":"owl_equivalent_class_statement_object/","text":"Slot: owl_equivalent_class_statement_object One of the two classes that are equivalent. No significance to subject vs object URI: semsql:owl_equivalent_class_statement_object Domain and Range OwlEquivalentClassStatement -> REQ ClassNode Parents is_a: node to node statement\u279eobject Children Used by OwlEquivalentClassStatement","title":"Slot: owl_equivalent_class_statement_object"},{"location":"owl_equivalent_class_statement_object/#slot-owl_equivalent_class_statement_object","text":"One of the two classes that are equivalent. No significance to subject vs object URI: semsql:owl_equivalent_class_statement_object","title":"Slot: owl_equivalent_class_statement_object"},{"location":"owl_equivalent_class_statement_object/#domain-and-range","text":"OwlEquivalentClassStatement -> REQ ClassNode","title":"Domain and Range"},{"location":"owl_equivalent_class_statement_object/#parents","text":"is_a: node to node statement\u279eobject","title":"Parents"},{"location":"owl_equivalent_class_statement_object/#children","text":"","title":"Children"},{"location":"owl_equivalent_class_statement_object/#used-by","text":"OwlEquivalentClassStatement","title":"Used by"},{"location":"owl_equivalent_class_statement_subject/","text":"Slot: owl_equivalent_class_statement_subject One of the two classes that are equivalent. No significance to subject vs object URI: semsql:owl_equivalent_class_statement_subject Domain and Range OwlEquivalentClassStatement -> OPT ClassNode Parents is_a: subject Children Used by OwlEquivalentClassStatement","title":"Slot: owl_equivalent_class_statement_subject"},{"location":"owl_equivalent_class_statement_subject/#slot-owl_equivalent_class_statement_subject","text":"One of the two classes that are equivalent. No significance to subject vs object URI: semsql:owl_equivalent_class_statement_subject","title":"Slot: owl_equivalent_class_statement_subject"},{"location":"owl_equivalent_class_statement_subject/#domain-and-range","text":"OwlEquivalentClassStatement -> OPT ClassNode","title":"Domain and Range"},{"location":"owl_equivalent_class_statement_subject/#parents","text":"is_a: subject","title":"Parents"},{"location":"owl_equivalent_class_statement_subject/#children","text":"","title":"Children"},{"location":"owl_equivalent_class_statement_subject/#used-by","text":"OwlEquivalentClassStatement","title":"Used by"},{"location":"owl_equivalent_to_intersection_member_object/","text":"Slot: owl_equivalent_to_intersection_member_object a class expression that forms the defining expression URI: semsql:owl_equivalent_to_intersection_member_object Domain and Range OwlEquivalentToIntersectionMember -> OPT Node Parents is_a: object Children Used by OwlEquivalentToIntersectionMember","title":"Slot: owl_equivalent_to_intersection_member_object"},{"location":"owl_equivalent_to_intersection_member_object/#slot-owl_equivalent_to_intersection_member_object","text":"a class expression that forms the defining expression URI: semsql:owl_equivalent_to_intersection_member_object","title":"Slot: owl_equivalent_to_intersection_member_object"},{"location":"owl_equivalent_to_intersection_member_object/#domain-and-range","text":"OwlEquivalentToIntersectionMember -> OPT Node","title":"Domain and Range"},{"location":"owl_equivalent_to_intersection_member_object/#parents","text":"is_a: object","title":"Parents"},{"location":"owl_equivalent_to_intersection_member_object/#children","text":"","title":"Children"},{"location":"owl_equivalent_to_intersection_member_object/#used-by","text":"OwlEquivalentToIntersectionMember","title":"Used by"},{"location":"owl_equivalent_to_intersection_member_subject/","text":"Slot: owl_equivalent_to_intersection_member_subject the defined class URI: semsql:owl_equivalent_to_intersection_member_subject Domain and Range OwlEquivalentToIntersectionMember -> OPT Node Parents is_a: subject Children Used by OwlEquivalentToIntersectionMember","title":"Slot: owl_equivalent_to_intersection_member_subject"},{"location":"owl_equivalent_to_intersection_member_subject/#slot-owl_equivalent_to_intersection_member_subject","text":"the defined class URI: semsql:owl_equivalent_to_intersection_member_subject","title":"Slot: owl_equivalent_to_intersection_member_subject"},{"location":"owl_equivalent_to_intersection_member_subject/#domain-and-range","text":"OwlEquivalentToIntersectionMember -> OPT Node","title":"Domain and Range"},{"location":"owl_equivalent_to_intersection_member_subject/#parents","text":"is_a: subject","title":"Parents"},{"location":"owl_equivalent_to_intersection_member_subject/#children","text":"","title":"Children"},{"location":"owl_equivalent_to_intersection_member_subject/#used-by","text":"OwlEquivalentToIntersectionMember","title":"Used by"},{"location":"owl_index/","text":"Semsql_Owl schema OWL Module Classes Node BlankNode AnonymousExpression AnonymousClassExpression OwlRestriction OwlAllValuesFrom OwlSomeValuesFrom AnonymousIndividualExpression AnonymousPropertyExpression RdfListNode - A node representing an RDF list ClassNode IriNode NamedIndividualNode OntologyNode - A node representing an ontology PropertyNode AnnotationPropertyNode ObjectPropertyNode TransitivePropertyNode OwlComplexAxiom - An axiom that is composed of two or more statements OwlEquivalentToIntersectionMember - Composition of OwlEquivalentClass, OwlIntersectionOf, and RdfListMember; C = X1 and ... and Xn OwlSubclassOfSomeValuesFrom - Composition of subClassOf and SomeValuesFrom Prefix - Maps CURIEs to URIs RdfLevelSummaryStatistic CountOfInstantiatedClasses CountOfPredicates Statements - Represents an RDF triple NodeToNodeStatement - A statement where object is non-null and value is not populated OwlDisjointClassStatement OwlEquivalentClassStatement RdfTypeStatement - A statement that indicates the asserted type of the subject entity RdfsSubclassOfStatement NodeToValueStatement - A statement where value is non-null and object is not populated RdfsLabelStatement RdfListStatement - A statement that is used to represent aspects of RDF lists RdfFirstStatement - A statement that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfListMemberStatement RdfRestStatement - A statement that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfRestTransitiveStatement Mixins ClassTrait IndividualTrait IsReport NodeTrait ClassTrait IndividualTrait PropertyTrait PropertyTrait Slots base datatype description filler id owl restriction\u279eid - the id of the restriction language object - Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated node to node statement\u279eobject rdf type statement\u279eobject - The entity type rdfs subclass of statement\u279eobject - The superclass element of the triple owl disjoint class statement\u279eobject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279eobject - One of the two classes that are equivalent. No significance to subject vs object owl equivalent to intersection member\u279eobject - a class expression that forms the defining expression owl subclass of some values from\u279eobject - the class D in the axiom C subClassOf P some D on property predicate owl subclass of some values from\u279epredicate - the predicate P in the axiom C subClassOf P some D prefix \u279eelement \u279enumber_of_usages restriction stanza subject owl disjoint class statement\u279esubject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279esubject - One of the two classes that are equivalent. No significance to subject vs object owl equivalent to intersection member\u279esubject - the defined class owl subclass of some values from\u279esubject - the class C in the axiom C subClassOf P some D rdf list statement\u279esubject - The rdf:List to which the statement applies rdfs subclass of statement\u279esubject - The subclass element of the triple value - Note the range of this slot is always a string. Only used the triple represents a literal assertion node to value statement\u279evalue Enums Types Built in Bool Decimal ElementIdentifier NCName NodeIdentifier URI URIorCURIE XSDDate XSDDateTime XSDTime float int str Defined Boolean ( Bool ) - A binary (true or false) value Date ( XSDDate ) - a date (year, month and day) in an idealized calendar Datetime ( XSDDateTime ) - The combination of a date and time Decimal ( Decimal ) - A real number with arbitrary precision that conforms to the xsd:decimal specification Double ( float ) - A real number that conforms to the xsd:double specification Float ( float ) - A real number that conforms to the xsd:float specification Integer ( int ) - An integer LiteralAsStringType ( String ) Ncname ( NCName ) - Prefix part of CURIE NodeIdType ( Uriorcurie ) Nodeidentifier ( NodeIdentifier ) - A URI, CURIE or BNODE that represents a node in a model. Objectidentifier ( ElementIdentifier ) - A URI or CURIE that represents an object in the model. String ( str ) - A character string Time ( XSDTime ) - A time object represents a (local) time of day, independent of any particular day Uri ( URI ) - a complete URI Uriorcurie ( URIorCURIE ) - a URI or a CURIE","title":"OWL"},{"location":"owl_index/#semsql_owl-schema","text":"OWL Module","title":"Semsql_Owl schema"},{"location":"owl_index/#classes","text":"Node BlankNode AnonymousExpression AnonymousClassExpression OwlRestriction OwlAllValuesFrom OwlSomeValuesFrom AnonymousIndividualExpression AnonymousPropertyExpression RdfListNode - A node representing an RDF list ClassNode IriNode NamedIndividualNode OntologyNode - A node representing an ontology PropertyNode AnnotationPropertyNode ObjectPropertyNode TransitivePropertyNode OwlComplexAxiom - An axiom that is composed of two or more statements OwlEquivalentToIntersectionMember - Composition of OwlEquivalentClass, OwlIntersectionOf, and RdfListMember; C = X1 and ... and Xn OwlSubclassOfSomeValuesFrom - Composition of subClassOf and SomeValuesFrom Prefix - Maps CURIEs to URIs RdfLevelSummaryStatistic CountOfInstantiatedClasses CountOfPredicates Statements - Represents an RDF triple NodeToNodeStatement - A statement where object is non-null and value is not populated OwlDisjointClassStatement OwlEquivalentClassStatement RdfTypeStatement - A statement that indicates the asserted type of the subject entity RdfsSubclassOfStatement NodeToValueStatement - A statement where value is non-null and object is not populated RdfsLabelStatement RdfListStatement - A statement that is used to represent aspects of RDF lists RdfFirstStatement - A statement that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfListMemberStatement RdfRestStatement - A statement that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfRestTransitiveStatement","title":"Classes"},{"location":"owl_index/#mixins","text":"ClassTrait IndividualTrait IsReport NodeTrait ClassTrait IndividualTrait PropertyTrait PropertyTrait","title":"Mixins"},{"location":"owl_index/#slots","text":"base datatype description filler id owl restriction\u279eid - the id of the restriction language object - Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated node to node statement\u279eobject rdf type statement\u279eobject - The entity type rdfs subclass of statement\u279eobject - The superclass element of the triple owl disjoint class statement\u279eobject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279eobject - One of the two classes that are equivalent. No significance to subject vs object owl equivalent to intersection member\u279eobject - a class expression that forms the defining expression owl subclass of some values from\u279eobject - the class D in the axiom C subClassOf P some D on property predicate owl subclass of some values from\u279epredicate - the predicate P in the axiom C subClassOf P some D prefix \u279eelement \u279enumber_of_usages restriction stanza subject owl disjoint class statement\u279esubject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279esubject - One of the two classes that are equivalent. No significance to subject vs object owl equivalent to intersection member\u279esubject - the defined class owl subclass of some values from\u279esubject - the class C in the axiom C subClassOf P some D rdf list statement\u279esubject - The rdf:List to which the statement applies rdfs subclass of statement\u279esubject - The subclass element of the triple value - Note the range of this slot is always a string. Only used the triple represents a literal assertion node to value statement\u279evalue","title":"Slots"},{"location":"owl_index/#enums","text":"","title":"Enums"},{"location":"owl_index/#types","text":"","title":"Types"},{"location":"owl_index/#built-in","text":"Bool Decimal ElementIdentifier NCName NodeIdentifier URI URIorCURIE XSDDate XSDDateTime XSDTime float int str","title":"Built in"},{"location":"owl_index/#defined","text":"Boolean ( Bool ) - A binary (true or false) value Date ( XSDDate ) - a date (year, month and day) in an idealized calendar Datetime ( XSDDateTime ) - The combination of a date and time Decimal ( Decimal ) - A real number with arbitrary precision that conforms to the xsd:decimal specification Double ( float ) - A real number that conforms to the xsd:double specification Float ( float ) - A real number that conforms to the xsd:float specification Integer ( int ) - An integer LiteralAsStringType ( String ) Ncname ( NCName ) - Prefix part of CURIE NodeIdType ( Uriorcurie ) Nodeidentifier ( NodeIdentifier ) - A URI, CURIE or BNODE that represents a node in a model. Objectidentifier ( ElementIdentifier ) - A URI or CURIE that represents an object in the model. String ( str ) - A character string Time ( XSDTime ) - A time object represents a (local) time of day, independent of any particular day Uri ( URI ) - a complete URI Uriorcurie ( URIorCURIE ) - a URI or a CURIE","title":"Defined"},{"location":"owl_restriction_id/","text":"Slot: owl_restriction_id the id of the restriction URI: semsql:owl_restriction_id Domain and Range OwlRestriction -> REQ NodeIdType Parents is_a: id Children Used by OwlAllValuesFrom OwlRestriction OwlSomeValuesFrom","title":"Slot: owl_restriction_id"},{"location":"owl_restriction_id/#slot-owl_restriction_id","text":"the id of the restriction URI: semsql:owl_restriction_id","title":"Slot: owl_restriction_id"},{"location":"owl_restriction_id/#domain-and-range","text":"OwlRestriction -> REQ NodeIdType","title":"Domain and Range"},{"location":"owl_restriction_id/#parents","text":"is_a: id","title":"Parents"},{"location":"owl_restriction_id/#children","text":"","title":"Children"},{"location":"owl_restriction_id/#used-by","text":"OwlAllValuesFrom OwlRestriction OwlSomeValuesFrom","title":"Used by"},{"location":"owl_subclass_of_some_values_from_object/","text":"Slot: owl_subclass_of_some_values_from_object the class D in the axiom C subClassOf P some D URI: semsql:owl_subclass_of_some_values_from_object Domain and Range OwlSubclassOfSomeValuesFrom -> OPT Node Parents is_a: object Children Used by OwlSubclassOfSomeValuesFrom","title":"Slot: owl_subclass_of_some_values_from_object"},{"location":"owl_subclass_of_some_values_from_object/#slot-owl_subclass_of_some_values_from_object","text":"the class D in the axiom C subClassOf P some D URI: semsql:owl_subclass_of_some_values_from_object","title":"Slot: owl_subclass_of_some_values_from_object"},{"location":"owl_subclass_of_some_values_from_object/#domain-and-range","text":"OwlSubclassOfSomeValuesFrom -> OPT Node","title":"Domain and Range"},{"location":"owl_subclass_of_some_values_from_object/#parents","text":"is_a: object","title":"Parents"},{"location":"owl_subclass_of_some_values_from_object/#children","text":"","title":"Children"},{"location":"owl_subclass_of_some_values_from_object/#used-by","text":"OwlSubclassOfSomeValuesFrom","title":"Used by"},{"location":"owl_subclass_of_some_values_from_predicate/","text":"Slot: owl_subclass_of_some_values_from_predicate the predicate P in the axiom C subClassOf P some D URI: semsql:owl_subclass_of_some_values_from_predicate Domain and Range OwlSubclassOfSomeValuesFrom -> OPT String Parents is_a: predicate Children Used by OwlSubclassOfSomeValuesFrom","title":"Slot: owl_subclass_of_some_values_from_predicate"},{"location":"owl_subclass_of_some_values_from_predicate/#slot-owl_subclass_of_some_values_from_predicate","text":"the predicate P in the axiom C subClassOf P some D URI: semsql:owl_subclass_of_some_values_from_predicate","title":"Slot: owl_subclass_of_some_values_from_predicate"},{"location":"owl_subclass_of_some_values_from_predicate/#domain-and-range","text":"OwlSubclassOfSomeValuesFrom -> OPT String","title":"Domain and Range"},{"location":"owl_subclass_of_some_values_from_predicate/#parents","text":"is_a: predicate","title":"Parents"},{"location":"owl_subclass_of_some_values_from_predicate/#children","text":"","title":"Children"},{"location":"owl_subclass_of_some_values_from_predicate/#used-by","text":"OwlSubclassOfSomeValuesFrom","title":"Used by"},{"location":"owl_subclass_of_some_values_from_subject/","text":"Slot: owl_subclass_of_some_values_from_subject the class C in the axiom C subClassOf P some D URI: semsql:owl_subclass_of_some_values_from_subject Domain and Range OwlSubclassOfSomeValuesFrom -> OPT Node Parents is_a: subject Children Used by OwlSubclassOfSomeValuesFrom","title":"Slot: owl_subclass_of_some_values_from_subject"},{"location":"owl_subclass_of_some_values_from_subject/#slot-owl_subclass_of_some_values_from_subject","text":"the class C in the axiom C subClassOf P some D URI: semsql:owl_subclass_of_some_values_from_subject","title":"Slot: owl_subclass_of_some_values_from_subject"},{"location":"owl_subclass_of_some_values_from_subject/#domain-and-range","text":"OwlSubclassOfSomeValuesFrom -> OPT Node","title":"Domain and Range"},{"location":"owl_subclass_of_some_values_from_subject/#parents","text":"is_a: subject","title":"Parents"},{"location":"owl_subclass_of_some_values_from_subject/#children","text":"","title":"Children"},{"location":"owl_subclass_of_some_values_from_subject/#used-by","text":"OwlSubclassOfSomeValuesFrom","title":"Used by"},{"location":"predicate/","text":"Slot: predicate URI: semsql:predicate Domain and Range None -> OPT String Parents Children owl subclass of some values from\u279epredicate Used by Edge EntailedEdge HasBroadMatchStatement HasBroadSynonymStatement HasDbxrefStatement HasExactMatchStatement HasExactSynonymStatement HasMappingStatement HasMatchStatement HasNarrowMatchStatement HasNarrowSynonymStatement HasOioSynonymStatement HasRelatedMatchStatement HasRelatedSynonymStatement HasSynonymStatement NodeToNodeStatement NodeToValueStatement OwlDisjointClassStatement OwlEquivalentClassStatement RdfFirstStatement RdfListMemberStatement RdfListStatement RdfRestStatement RdfRestTransitiveStatement RdfTypeStatement RdfsLabelStatement RdfsSubclassOfStatement Statements","title":"Slot: predicate"},{"location":"predicate/#slot-predicate","text":"URI: semsql:predicate","title":"Slot: predicate"},{"location":"predicate/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"predicate/#parents","text":"","title":"Parents"},{"location":"predicate/#children","text":"owl subclass of some values from\u279epredicate","title":"Children"},{"location":"predicate/#used-by","text":"Edge EntailedEdge HasBroadMatchStatement HasBroadSynonymStatement HasDbxrefStatement HasExactMatchStatement HasExactSynonymStatement HasMappingStatement HasMatchStatement HasNarrowMatchStatement HasNarrowSynonymStatement HasOioSynonymStatement HasRelatedMatchStatement HasRelatedSynonymStatement HasSynonymStatement NodeToNodeStatement NodeToValueStatement OwlDisjointClassStatement OwlEquivalentClassStatement RdfFirstStatement RdfListMemberStatement RdfListStatement RdfRestStatement RdfRestTransitiveStatement RdfTypeStatement RdfsLabelStatement RdfsSubclassOfStatement Statements","title":"Used by"},{"location":"prefix/","text":"Class: Prefix Maps CURIEs to URIs URI: semsql:Prefix Attributes Own base OPT range: Uri prefix OPT range: Ncname Other properties Mappings: sh:PrefixDeclaration In Subsets: export","title":"Class: Prefix"},{"location":"prefix/#class-prefix","text":"Maps CURIEs to URIs URI: semsql:Prefix","title":"Class: Prefix"},{"location":"prefix/#attributes","text":"","title":"Attributes"},{"location":"prefix/#own","text":"base OPT range: Uri prefix OPT range: Ncname","title":"Own"},{"location":"prefix/#other-properties","text":"Mappings: sh:PrefixDeclaration In Subsets: export","title":"Other properties"},{"location":"problem_subject/","text":"Slot: problem_subject The thing that is problematic URI: semsql:problem_subject Domain and Range Problem -> OPT Node Parents is_a: subject Children Used by AllProblems LexicalProblem NodeWithTwoLabelsProblem Problem PropertyUsedWithDatatypeValuesAndObjects TrailingWhitespaceProblem","title":"Slot: problem_subject"},{"location":"problem_subject/#slot-problem_subject","text":"The thing that is problematic URI: semsql:problem_subject","title":"Slot: problem_subject"},{"location":"problem_subject/#domain-and-range","text":"Problem -> OPT Node","title":"Domain and Range"},{"location":"problem_subject/#parents","text":"is_a: subject","title":"Parents"},{"location":"problem_subject/#children","text":"","title":"Children"},{"location":"problem_subject/#used-by","text":"AllProblems LexicalProblem NodeWithTwoLabelsProblem Problem PropertyUsedWithDatatypeValuesAndObjects TrailingWhitespaceProblem","title":"Used by"},{"location":"rdfLevelSummaryStatistic__element/","text":"Slot: rdfLevelSummaryStatistic__element URI: semsql:rdfLevelSummaryStatistic__element Domain and Range None -> OPT Node Parents Children Used by CountOfInstantiatedClasses CountOfPredicates RdfLevelSummaryStatistic","title":"Slot: rdfLevelSummaryStatistic__element"},{"location":"rdfLevelSummaryStatistic__element/#slot-rdflevelsummarystatistic__element","text":"URI: semsql:rdfLevelSummaryStatistic__element","title":"Slot: rdfLevelSummaryStatistic__element"},{"location":"rdfLevelSummaryStatistic__element/#domain-and-range","text":"None -> OPT Node","title":"Domain and Range"},{"location":"rdfLevelSummaryStatistic__element/#parents","text":"","title":"Parents"},{"location":"rdfLevelSummaryStatistic__element/#children","text":"","title":"Children"},{"location":"rdfLevelSummaryStatistic__element/#used-by","text":"CountOfInstantiatedClasses CountOfPredicates RdfLevelSummaryStatistic","title":"Used by"},{"location":"rdfLevelSummaryStatistic__number_of_usages/","text":"Slot: rdfLevelSummaryStatistic__number_of_usages URI: semsql:rdfLevelSummaryStatistic__number_of_usages Domain and Range None -> OPT Integer Parents Children Used by CountOfInstantiatedClasses CountOfPredicates RdfLevelSummaryStatistic","title":"Slot: rdfLevelSummaryStatistic__number_of_usages"},{"location":"rdfLevelSummaryStatistic__number_of_usages/#slot-rdflevelsummarystatistic__number_of_usages","text":"URI: semsql:rdfLevelSummaryStatistic__number_of_usages","title":"Slot: rdfLevelSummaryStatistic__number_of_usages"},{"location":"rdfLevelSummaryStatistic__number_of_usages/#domain-and-range","text":"None -> OPT Integer","title":"Domain and Range"},{"location":"rdfLevelSummaryStatistic__number_of_usages/#parents","text":"","title":"Parents"},{"location":"rdfLevelSummaryStatistic__number_of_usages/#children","text":"","title":"Children"},{"location":"rdfLevelSummaryStatistic__number_of_usages/#used-by","text":"CountOfInstantiatedClasses CountOfPredicates RdfLevelSummaryStatistic","title":"Used by"},{"location":"rdf_index/","text":"Semsql-Rdf schema Abstractions for working with RDF and RDFS triples Classes Node BlankNode RdfListNode - A node representing an RDF list ClassNode IriNode NamedIndividualNode Prefix - Maps CURIEs to URIs RdfLevelSummaryStatistic CountOfInstantiatedClasses CountOfPredicates Statements - Represents an RDF triple NodeToNodeStatement - A statement where object is non-null and value is not populated RdfTypeStatement - A statement that indicates the asserted type of the subject entity RdfsSubclassOfStatement NodeToValueStatement - A statement where value is non-null and object is not populated RdfsLabelStatement RdfListStatement - A statement that is used to represent aspects of RDF lists RdfFirstStatement - A statement that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfListMemberStatement RdfRestStatement - A statement that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfRestTransitiveStatement Mixins ClassTrait IndividualTrait IsReport NodeTrait ClassTrait IndividualTrait PropertyTrait PropertyTrait Slots base datatype description id language object - Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated node to node statement\u279eobject rdf type statement\u279eobject - The entity type rdfs subclass of statement\u279eobject - The superclass element of the triple predicate prefix \u279eelement \u279enumber_of_usages stanza subject rdf list statement\u279esubject - The rdf:List to which the statement applies rdfs subclass of statement\u279esubject - The subclass element of the triple value - Note the range of this slot is always a string. Only used the triple represents a literal assertion node to value statement\u279evalue Enums Types Built in Bool Decimal ElementIdentifier NCName NodeIdentifier URI URIorCURIE XSDDate XSDDateTime XSDTime float int str Defined Boolean ( Bool ) - A binary (true or false) value Date ( XSDDate ) - a date (year, month and day) in an idealized calendar Datetime ( XSDDateTime ) - The combination of a date and time Decimal ( Decimal ) - A real number with arbitrary precision that conforms to the xsd:decimal specification Double ( float ) - A real number that conforms to the xsd:double specification Float ( float ) - A real number that conforms to the xsd:float specification Integer ( int ) - An integer LiteralAsStringType ( String ) Ncname ( NCName ) - Prefix part of CURIE NodeIdType ( Uriorcurie ) Nodeidentifier ( NodeIdentifier ) - A URI, CURIE or BNODE that represents a node in a model. Objectidentifier ( ElementIdentifier ) - A URI or CURIE that represents an object in the model. String ( str ) - A character string Time ( XSDTime ) - A time object represents a (local) time of day, independent of any particular day Uri ( URI ) - a complete URI Uriorcurie ( URIorCURIE ) - a URI or a CURIE","title":"RDF"},{"location":"rdf_index/#semsql-rdf-schema","text":"Abstractions for working with RDF and RDFS triples","title":"Semsql-Rdf schema"},{"location":"rdf_index/#classes","text":"Node BlankNode RdfListNode - A node representing an RDF list ClassNode IriNode NamedIndividualNode Prefix - Maps CURIEs to URIs RdfLevelSummaryStatistic CountOfInstantiatedClasses CountOfPredicates Statements - Represents an RDF triple NodeToNodeStatement - A statement where object is non-null and value is not populated RdfTypeStatement - A statement that indicates the asserted type of the subject entity RdfsSubclassOfStatement NodeToValueStatement - A statement where value is non-null and object is not populated RdfsLabelStatement RdfListStatement - A statement that is used to represent aspects of RDF lists RdfFirstStatement - A statement that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfListMemberStatement RdfRestStatement - A statement that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfRestTransitiveStatement","title":"Classes"},{"location":"rdf_index/#mixins","text":"ClassTrait IndividualTrait IsReport NodeTrait ClassTrait IndividualTrait PropertyTrait PropertyTrait","title":"Mixins"},{"location":"rdf_index/#slots","text":"base datatype description id language object - Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated node to node statement\u279eobject rdf type statement\u279eobject - The entity type rdfs subclass of statement\u279eobject - The superclass element of the triple predicate prefix \u279eelement \u279enumber_of_usages stanza subject rdf list statement\u279esubject - The rdf:List to which the statement applies rdfs subclass of statement\u279esubject - The subclass element of the triple value - Note the range of this slot is always a string. Only used the triple represents a literal assertion node to value statement\u279evalue","title":"Slots"},{"location":"rdf_index/#enums","text":"","title":"Enums"},{"location":"rdf_index/#types","text":"","title":"Types"},{"location":"rdf_index/#built-in","text":"Bool Decimal ElementIdentifier NCName NodeIdentifier URI URIorCURIE XSDDate XSDDateTime XSDTime float int str","title":"Built in"},{"location":"rdf_index/#defined","text":"Boolean ( Bool ) - A binary (true or false) value Date ( XSDDate ) - a date (year, month and day) in an idealized calendar Datetime ( XSDDateTime ) - The combination of a date and time Decimal ( Decimal ) - A real number with arbitrary precision that conforms to the xsd:decimal specification Double ( float ) - A real number that conforms to the xsd:double specification Float ( float ) - A real number that conforms to the xsd:float specification Integer ( int ) - An integer LiteralAsStringType ( String ) Ncname ( NCName ) - Prefix part of CURIE NodeIdType ( Uriorcurie ) Nodeidentifier ( NodeIdentifier ) - A URI, CURIE or BNODE that represents a node in a model. Objectidentifier ( ElementIdentifier ) - A URI or CURIE that represents an object in the model. String ( str ) - A character string Time ( XSDTime ) - A time object represents a (local) time of day, independent of any particular day Uri ( URI ) - a complete URI Uriorcurie ( URIorCURIE ) - a URI or a CURIE","title":"Defined"},{"location":"rdf_list_statement_subject/","text":"Slot: rdf_list_statement_subject The rdf:List to which the statement applies URI: semsql:rdf_list_statement_subject Domain and Range RdfListStatement -> OPT RdfListNode Parents is_a: subject Children Used by RdfFirstStatement RdfListMemberStatement RdfListStatement RdfRestStatement RdfRestTransitiveStatement","title":"Slot: rdf_list_statement_subject"},{"location":"rdf_list_statement_subject/#slot-rdf_list_statement_subject","text":"The rdf:List to which the statement applies URI: semsql:rdf_list_statement_subject","title":"Slot: rdf_list_statement_subject"},{"location":"rdf_list_statement_subject/#domain-and-range","text":"RdfListStatement -> OPT RdfListNode","title":"Domain and Range"},{"location":"rdf_list_statement_subject/#parents","text":"is_a: subject","title":"Parents"},{"location":"rdf_list_statement_subject/#children","text":"","title":"Children"},{"location":"rdf_list_statement_subject/#used-by","text":"RdfFirstStatement RdfListMemberStatement RdfListStatement RdfRestStatement RdfRestTransitiveStatement","title":"Used by"},{"location":"rdf_type_statement_object/","text":"Slot: rdf_type_statement_object The entity type URI: semsql:rdf_type_statement_object Domain and Range RdfTypeStatement -> REQ ClassNode Parents is_a: node to node statement\u279eobject Children Used by RdfTypeStatement","title":"Slot: rdf_type_statement_object"},{"location":"rdf_type_statement_object/#slot-rdf_type_statement_object","text":"The entity type URI: semsql:rdf_type_statement_object","title":"Slot: rdf_type_statement_object"},{"location":"rdf_type_statement_object/#domain-and-range","text":"RdfTypeStatement -> REQ ClassNode","title":"Domain and Range"},{"location":"rdf_type_statement_object/#parents","text":"is_a: node to node statement\u279eobject","title":"Parents"},{"location":"rdf_type_statement_object/#children","text":"","title":"Children"},{"location":"rdf_type_statement_object/#used-by","text":"RdfTypeStatement","title":"Used by"},{"location":"rdfs_subClassOf_statement_object/","text":"Slot: rdfs_subClassOf_statement_object The superclass element of the triple URI: semsql:rdfs_subClassOf_statement_object Domain and Range RdfsSubClassOfStatement -> OPT ClassNode Parents is_a: object Children Used by RdfsSubClassOfStatement","title":"Slot: rdfs_subClassOf_statement_object"},{"location":"rdfs_subClassOf_statement_object/#slot-rdfs_subclassof_statement_object","text":"The superclass element of the triple URI: semsql:rdfs_subClassOf_statement_object","title":"Slot: rdfs_subClassOf_statement_object"},{"location":"rdfs_subClassOf_statement_object/#domain-and-range","text":"RdfsSubClassOfStatement -> OPT ClassNode","title":"Domain and Range"},{"location":"rdfs_subClassOf_statement_object/#parents","text":"is_a: object","title":"Parents"},{"location":"rdfs_subClassOf_statement_object/#children","text":"","title":"Children"},{"location":"rdfs_subClassOf_statement_object/#used-by","text":"RdfsSubClassOfStatement","title":"Used by"},{"location":"rdfs_subClassOf_statement_subject/","text":"Slot: rdfs_subClassOf_statement_subject The subclass element of the triple URI: semsql:rdfs_subClassOf_statement_subject Domain and Range RdfsSubClassOfStatement -> OPT ClassNode Parents is_a: subject Children Used by RdfsSubClassOfStatement","title":"Slot: rdfs_subClassOf_statement_subject"},{"location":"rdfs_subClassOf_statement_subject/#slot-rdfs_subclassof_statement_subject","text":"The subclass element of the triple URI: semsql:rdfs_subClassOf_statement_subject","title":"Slot: rdfs_subClassOf_statement_subject"},{"location":"rdfs_subClassOf_statement_subject/#domain-and-range","text":"RdfsSubClassOfStatement -> OPT ClassNode","title":"Domain and Range"},{"location":"rdfs_subClassOf_statement_subject/#parents","text":"is_a: subject","title":"Parents"},{"location":"rdfs_subClassOf_statement_subject/#children","text":"","title":"Children"},{"location":"rdfs_subClassOf_statement_subject/#used-by","text":"RdfsSubClassOfStatement","title":"Used by"},{"location":"rdfs_subclass_of_statement_object/","text":"Slot: rdfs_subclass_of_statement_object The superclass element of the triple URI: semsql:rdfs_subclass_of_statement_object Domain and Range RdfsSubclassOfStatement -> REQ ClassNode Parents is_a: node to node statement\u279eobject Children Used by RdfsSubclassOfStatement","title":"Slot: rdfs_subclass_of_statement_object"},{"location":"rdfs_subclass_of_statement_object/#slot-rdfs_subclass_of_statement_object","text":"The superclass element of the triple URI: semsql:rdfs_subclass_of_statement_object","title":"Slot: rdfs_subclass_of_statement_object"},{"location":"rdfs_subclass_of_statement_object/#domain-and-range","text":"RdfsSubclassOfStatement -> REQ ClassNode","title":"Domain and Range"},{"location":"rdfs_subclass_of_statement_object/#parents","text":"is_a: node to node statement\u279eobject","title":"Parents"},{"location":"rdfs_subclass_of_statement_object/#children","text":"","title":"Children"},{"location":"rdfs_subclass_of_statement_object/#used-by","text":"RdfsSubclassOfStatement","title":"Used by"},{"location":"rdfs_subclass_of_statement_subject/","text":"Slot: rdfs_subclass_of_statement_subject The subclass element of the triple URI: semsql:rdfs_subclass_of_statement_subject Domain and Range RdfsSubclassOfStatement -> OPT ClassNode Parents is_a: subject Children Used by RdfsSubclassOfStatement","title":"Slot: rdfs_subclass_of_statement_subject"},{"location":"rdfs_subclass_of_statement_subject/#slot-rdfs_subclass_of_statement_subject","text":"The subclass element of the triple URI: semsql:rdfs_subclass_of_statement_subject","title":"Slot: rdfs_subclass_of_statement_subject"},{"location":"rdfs_subclass_of_statement_subject/#domain-and-range","text":"RdfsSubclassOfStatement -> OPT ClassNode","title":"Domain and Range"},{"location":"rdfs_subclass_of_statement_subject/#parents","text":"is_a: subject","title":"Parents"},{"location":"rdfs_subclass_of_statement_subject/#children","text":"","title":"Children"},{"location":"rdfs_subclass_of_statement_subject/#used-by","text":"RdfsSubclassOfStatement","title":"Used by"},{"location":"relation_graph_index/","text":"Relation_Graph schema Module for representing Relation Graphs Classes Node BlankNode AnonymousExpression AnonymousClassExpression OwlRestriction OwlAllValuesFrom OwlSomeValuesFrom AnonymousIndividualExpression AnonymousPropertyExpression RdfListNode - A node representing an RDF list ClassNode IriNode NamedIndividualNode OntologyNode - A node representing an ontology PropertyNode AnnotationPropertyNode ObjectPropertyNode TransitivePropertyNode OwlComplexAxiom - An axiom that is composed of two or more statements OwlEquivalentToIntersectionMember - Composition of OwlEquivalentClass, OwlIntersectionOf, and RdfListMember; C = X1 and ... and Xn OwlSubclassOfSomeValuesFrom - Composition of subClassOf and SomeValuesFrom Prefix - Maps CURIEs to URIs RdfLevelSummaryStatistic CountOfInstantiatedClasses CountOfPredicates RelationGraphConstruct - A construct used as part of a Relation Graph Edge - A relation graph edge that connects two entities by a predicate. Note an edge is distinct from a statement, in that an axiom such as A SubClassOf R some B is represented as multiple statements, but is a single relation graph edge EntailedEdge - A relation graph edge that is inferred Statements - Represents an RDF triple NodeToNodeStatement - A statement where object is non-null and value is not populated OwlDisjointClassStatement OwlEquivalentClassStatement RdfTypeStatement - A statement that indicates the asserted type of the subject entity RdfsSubclassOfStatement NodeToValueStatement - A statement where value is non-null and object is not populated RdfsLabelStatement RdfListStatement - A statement that is used to represent aspects of RDF lists RdfFirstStatement - A statement that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfListMemberStatement RdfRestStatement - A statement that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfRestTransitiveStatement Mixins ClassTrait IndividualTrait IsReport NodeTrait ClassTrait IndividualTrait PropertyTrait PropertyTrait Slots base datatype description filler id owl restriction\u279eid - the id of the restriction language object - Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated node to node statement\u279eobject owl disjoint class statement\u279eobject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279eobject - One of the two classes that are equivalent. No significance to subject vs object rdf type statement\u279eobject - The entity type rdfs subclass of statement\u279eobject - The superclass element of the triple owl equivalent to intersection member\u279eobject - a class expression that forms the defining expression owl subclass of some values from\u279eobject - the class D in the axiom C subClassOf P some D on property predicate owl subclass of some values from\u279epredicate - the predicate P in the axiom C subClassOf P some D prefix \u279eelement \u279enumber_of_usages restriction stanza subject owl disjoint class statement\u279esubject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279esubject - One of the two classes that are equivalent. No significance to subject vs object owl equivalent to intersection member\u279esubject - the defined class owl subclass of some values from\u279esubject - the class C in the axiom C subClassOf P some D rdf list statement\u279esubject - The rdf:List to which the statement applies rdfs subclass of statement\u279esubject - The subclass element of the triple value - Note the range of this slot is always a string. Only used the triple represents a literal assertion node to value statement\u279evalue Enums Types Built in Bool Decimal ElementIdentifier NCName NodeIdentifier URI URIorCURIE XSDDate XSDDateTime XSDTime float int str Defined Boolean ( Bool ) - A binary (true or false) value Date ( XSDDate ) - a date (year, month and day) in an idealized calendar Datetime ( XSDDateTime ) - The combination of a date and time Decimal ( Decimal ) - A real number with arbitrary precision that conforms to the xsd:decimal specification Double ( float ) - A real number that conforms to the xsd:double specification Float ( float ) - A real number that conforms to the xsd:float specification Integer ( int ) - An integer LiteralAsStringType ( String ) Ncname ( NCName ) - Prefix part of CURIE NodeIdType ( Uriorcurie ) Nodeidentifier ( NodeIdentifier ) - A URI, CURIE or BNODE that represents a node in a model. Objectidentifier ( ElementIdentifier ) - A URI or CURIE that represents an object in the model. String ( str ) - A character string Time ( XSDTime ) - A time object represents a (local) time of day, independent of any particular day Uri ( URI ) - a complete URI Uriorcurie ( URIorCURIE ) - a URI or a CURIE","title":"Relation_Graph schema"},{"location":"relation_graph_index/#relation_graph-schema","text":"Module for representing Relation Graphs","title":"Relation_Graph schema"},{"location":"relation_graph_index/#classes","text":"Node BlankNode AnonymousExpression AnonymousClassExpression OwlRestriction OwlAllValuesFrom OwlSomeValuesFrom AnonymousIndividualExpression AnonymousPropertyExpression RdfListNode - A node representing an RDF list ClassNode IriNode NamedIndividualNode OntologyNode - A node representing an ontology PropertyNode AnnotationPropertyNode ObjectPropertyNode TransitivePropertyNode OwlComplexAxiom - An axiom that is composed of two or more statements OwlEquivalentToIntersectionMember - Composition of OwlEquivalentClass, OwlIntersectionOf, and RdfListMember; C = X1 and ... and Xn OwlSubclassOfSomeValuesFrom - Composition of subClassOf and SomeValuesFrom Prefix - Maps CURIEs to URIs RdfLevelSummaryStatistic CountOfInstantiatedClasses CountOfPredicates RelationGraphConstruct - A construct used as part of a Relation Graph Edge - A relation graph edge that connects two entities by a predicate. Note an edge is distinct from a statement, in that an axiom such as A SubClassOf R some B is represented as multiple statements, but is a single relation graph edge EntailedEdge - A relation graph edge that is inferred Statements - Represents an RDF triple NodeToNodeStatement - A statement where object is non-null and value is not populated OwlDisjointClassStatement OwlEquivalentClassStatement RdfTypeStatement - A statement that indicates the asserted type of the subject entity RdfsSubclassOfStatement NodeToValueStatement - A statement where value is non-null and object is not populated RdfsLabelStatement RdfListStatement - A statement that is used to represent aspects of RDF lists RdfFirstStatement - A statement that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfListMemberStatement RdfRestStatement - A statement that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfRestTransitiveStatement","title":"Classes"},{"location":"relation_graph_index/#mixins","text":"ClassTrait IndividualTrait IsReport NodeTrait ClassTrait IndividualTrait PropertyTrait PropertyTrait","title":"Mixins"},{"location":"relation_graph_index/#slots","text":"base datatype description filler id owl restriction\u279eid - the id of the restriction language object - Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated node to node statement\u279eobject owl disjoint class statement\u279eobject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279eobject - One of the two classes that are equivalent. No significance to subject vs object rdf type statement\u279eobject - The entity type rdfs subclass of statement\u279eobject - The superclass element of the triple owl equivalent to intersection member\u279eobject - a class expression that forms the defining expression owl subclass of some values from\u279eobject - the class D in the axiom C subClassOf P some D on property predicate owl subclass of some values from\u279epredicate - the predicate P in the axiom C subClassOf P some D prefix \u279eelement \u279enumber_of_usages restriction stanza subject owl disjoint class statement\u279esubject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279esubject - One of the two classes that are equivalent. No significance to subject vs object owl equivalent to intersection member\u279esubject - the defined class owl subclass of some values from\u279esubject - the class C in the axiom C subClassOf P some D rdf list statement\u279esubject - The rdf:List to which the statement applies rdfs subclass of statement\u279esubject - The subclass element of the triple value - Note the range of this slot is always a string. Only used the triple represents a literal assertion node to value statement\u279evalue","title":"Slots"},{"location":"relation_graph_index/#enums","text":"","title":"Enums"},{"location":"relation_graph_index/#types","text":"","title":"Types"},{"location":"relation_graph_index/#built-in","text":"Bool Decimal ElementIdentifier NCName NodeIdentifier URI URIorCURIE XSDDate XSDDateTime XSDTime float int str","title":"Built in"},{"location":"relation_graph_index/#defined","text":"Boolean ( Bool ) - A binary (true or false) value Date ( XSDDate ) - a date (year, month and day) in an idealized calendar Datetime ( XSDDateTime ) - The combination of a date and time Decimal ( Decimal ) - A real number with arbitrary precision that conforms to the xsd:decimal specification Double ( float ) - A real number that conforms to the xsd:double specification Float ( float ) - A real number that conforms to the xsd:float specification Integer ( int ) - An integer LiteralAsStringType ( String ) Ncname ( NCName ) - Prefix part of CURIE NodeIdType ( Uriorcurie ) Nodeidentifier ( NodeIdentifier ) - A URI, CURIE or BNODE that represents a node in a model. Objectidentifier ( ElementIdentifier ) - A URI or CURIE that represents an object in the model. String ( str ) - A character string Time ( XSDTime ) - A time object represents a (local) time of day, independent of any particular day Uri ( URI ) - a complete URI Uriorcurie ( URIorCURIE ) - a URI or a CURIE","title":"Defined"},{"location":"repair_action_subject/","text":"Slot: repair_action_subject The thing that is problematic URI: semsql:repair_action_subject Domain and Range RepairAction -> OPT Node Parents is_a: subject Children Used by RepairAction","title":"Slot: repair_action_subject"},{"location":"repair_action_subject/#slot-repair_action_subject","text":"The thing that is problematic URI: semsql:repair_action_subject","title":"Slot: repair_action_subject"},{"location":"repair_action_subject/#domain-and-range","text":"RepairAction -> OPT Node","title":"Domain and Range"},{"location":"repair_action_subject/#parents","text":"is_a: subject","title":"Parents"},{"location":"repair_action_subject/#children","text":"","title":"Children"},{"location":"repair_action_subject/#used-by","text":"RepairAction","title":"Used by"},{"location":"restriction/","text":"Slot: restriction URI: semsql:restriction Domain and Range None -> OPT BlankNode Parents Children Used by","title":"Slot: restriction"},{"location":"restriction/#slot-restriction","text":"URI: semsql:restriction","title":"Slot: restriction"},{"location":"restriction/#domain-and-range","text":"None -> OPT BlankNode","title":"Domain and Range"},{"location":"restriction/#parents","text":"","title":"Parents"},{"location":"restriction/#children","text":"","title":"Children"},{"location":"restriction/#used-by","text":"","title":"Used by"},{"location":"semsql_index/","text":"Semsql schema A datamodel for RDF, OWL, and OBO Ontologies designed to work harmoniously with SQL databases. See https://github.com/cmungall/semantic-sql for GitHub repo Classes Node BlankNode AnonymousExpression AnonymousClassExpression OwlRestriction OwlAllValuesFrom OwlSomeValuesFrom AnonymousIndividualExpression AnonymousPropertyExpression RdfListNode - A node representing an RDF list ClassNode IriNode NamedIndividualNode OntologyNode - A node representing an ontology PropertyNode AnnotationPropertyNode ObjectPropertyNode TransitivePropertyNode OwlComplexAxiom - An axiom that is composed of two or more statements OwlEquivalentToIntersectionMember - Composition of OwlEquivalentClass, OwlIntersectionOf, and RdfListMember; C = X1 and ... and Xn OwlSubclassOfSomeValuesFrom - Composition of subClassOf and SomeValuesFrom Prefix - Maps CURIEs to URIs Problem - Represents an instance of a problem pertaining to conformance to OBO guidelines AllProblems LexicalProblem - a problem with the textual value of an annotation property NodeWithTwoLabelsProblem PropertyUsedWithDatatypeValuesAndObjects - A problem in which the same property is used two two different ways, one in which the range is a literal value, the other where it is an object. TrailingWhitespaceProblem RdfLevelSummaryStatistic CountOfInstantiatedClasses CountOfPredicates RelationGraphConstruct - A construct used as part of a Relation Graph Edge - A relation graph edge that connects two entities by a predicate. Note an edge is distinct from a statement, in that an axiom such as A SubClassOf R some B is represented as multiple statements, but is a single relation graph edge EntailedEdge - A relation graph edge that is inferred RepairAction - Represents an action that needs to be taken to repair a problem Statements - Represents an RDF triple NodeToNodeStatement - A statement where object is non-null and value is not populated OwlDisjointClassStatement OwlEquivalentClassStatement RdfTypeStatement - A statement that indicates the asserted type of the subject entity RdfsSubclassOfStatement NodeToValueStatement - A statement where value is non-null and object is not populated HasMappingStatement HasDbxrefStatement HasMatchStatement HasBroadMatchStatement HasExactMatchStatement HasNarrowMatchStatement HasRelatedMatchStatement HasOioSynonymStatement HasBroadSynonymStatement HasExactSynonymStatement HasNarrowSynonymStatement HasRelatedSynonymStatement HasSynonymStatement RdfsLabelStatement RdfListStatement - A statement that is used to represent aspects of RDF lists RdfFirstStatement - A statement that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfListMemberStatement RdfRestStatement - A statement that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfRestTransitiveStatement Mixins ClassTrait IndividualTrait IsReport NodeTrait ClassTrait IndividualTrait PropertyTrait PropertyTrait Slots base datatype description filler id owl restriction\u279eid - the id of the restriction language \u279elabel1 \u279elabel2 object - Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated node to node statement\u279eobject owl disjoint class statement\u279eobject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279eobject - One of the two classes that are equivalent. No significance to subject vs object rdf type statement\u279eobject - The entity type rdfs subclass of statement\u279eobject - The superclass element of the triple owl equivalent to intersection member\u279eobject - a class expression that forms the defining expression owl subclass of some values from\u279eobject - the class D in the axiom C subClassOf P some D on property predicate owl subclass of some values from\u279epredicate - the predicate P in the axiom C subClassOf P some D prefix \u279eelement \u279enumber_of_usages restriction stanza subject owl disjoint class statement\u279esubject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279esubject - One of the two classes that are equivalent. No significance to subject vs object owl equivalent to intersection member\u279esubject - the defined class owl subclass of some values from\u279esubject - the class C in the axiom C subClassOf P some D problem\u279esubject - The thing that is problematic rdf list statement\u279esubject - The rdf:List to which the statement applies rdfs subclass of statement\u279esubject - The subclass element of the triple repair action\u279esubject - The thing that is problematic value - Note the range of this slot is always a string. Only used the triple represents a literal assertion node to value statement\u279evalue Enums Types Built in Bool Decimal ElementIdentifier NCName NodeIdentifier URI URIorCURIE XSDDate XSDDateTime XSDTime float int str Defined Boolean ( Bool ) - A binary (true or false) value Date ( XSDDate ) - a date (year, month and day) in an idealized calendar Datetime ( XSDDateTime ) - The combination of a date and time Decimal ( Decimal ) - A real number with arbitrary precision that conforms to the xsd:decimal specification Double ( float ) - A real number that conforms to the xsd:double specification Float ( float ) - A real number that conforms to the xsd:float specification Integer ( int ) - An integer LiteralAsStringType ( String ) Ncname ( NCName ) - Prefix part of CURIE NodeIdType ( Uriorcurie ) Nodeidentifier ( NodeIdentifier ) - A URI, CURIE or BNODE that represents a node in a model. Objectidentifier ( ElementIdentifier ) - A URI or CURIE that represents an object in the model. String ( str ) - A character string Time ( XSDTime ) - A time object represents a (local) time of day, independent of any particular day Uri ( URI ) - a complete URI Uriorcurie ( URIorCURIE ) - a URI or a CURIE","title":"Semsql schema"},{"location":"semsql_index/#semsql-schema","text":"A datamodel for RDF, OWL, and OBO Ontologies designed to work harmoniously with SQL databases. See https://github.com/cmungall/semantic-sql for GitHub repo","title":"Semsql schema"},{"location":"semsql_index/#classes","text":"Node BlankNode AnonymousExpression AnonymousClassExpression OwlRestriction OwlAllValuesFrom OwlSomeValuesFrom AnonymousIndividualExpression AnonymousPropertyExpression RdfListNode - A node representing an RDF list ClassNode IriNode NamedIndividualNode OntologyNode - A node representing an ontology PropertyNode AnnotationPropertyNode ObjectPropertyNode TransitivePropertyNode OwlComplexAxiom - An axiom that is composed of two or more statements OwlEquivalentToIntersectionMember - Composition of OwlEquivalentClass, OwlIntersectionOf, and RdfListMember; C = X1 and ... and Xn OwlSubclassOfSomeValuesFrom - Composition of subClassOf and SomeValuesFrom Prefix - Maps CURIEs to URIs Problem - Represents an instance of a problem pertaining to conformance to OBO guidelines AllProblems LexicalProblem - a problem with the textual value of an annotation property NodeWithTwoLabelsProblem PropertyUsedWithDatatypeValuesAndObjects - A problem in which the same property is used two two different ways, one in which the range is a literal value, the other where it is an object. TrailingWhitespaceProblem RdfLevelSummaryStatistic CountOfInstantiatedClasses CountOfPredicates RelationGraphConstruct - A construct used as part of a Relation Graph Edge - A relation graph edge that connects two entities by a predicate. Note an edge is distinct from a statement, in that an axiom such as A SubClassOf R some B is represented as multiple statements, but is a single relation graph edge EntailedEdge - A relation graph edge that is inferred RepairAction - Represents an action that needs to be taken to repair a problem Statements - Represents an RDF triple NodeToNodeStatement - A statement where object is non-null and value is not populated OwlDisjointClassStatement OwlEquivalentClassStatement RdfTypeStatement - A statement that indicates the asserted type of the subject entity RdfsSubclassOfStatement NodeToValueStatement - A statement where value is non-null and object is not populated HasMappingStatement HasDbxrefStatement HasMatchStatement HasBroadMatchStatement HasExactMatchStatement HasNarrowMatchStatement HasRelatedMatchStatement HasOioSynonymStatement HasBroadSynonymStatement HasExactSynonymStatement HasNarrowSynonymStatement HasRelatedSynonymStatement HasSynonymStatement RdfsLabelStatement RdfListStatement - A statement that is used to represent aspects of RDF lists RdfFirstStatement - A statement that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfListMemberStatement RdfRestStatement - A statement that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfRestTransitiveStatement","title":"Classes"},{"location":"semsql_index/#mixins","text":"ClassTrait IndividualTrait IsReport NodeTrait ClassTrait IndividualTrait PropertyTrait PropertyTrait","title":"Mixins"},{"location":"semsql_index/#slots","text":"base datatype description filler id owl restriction\u279eid - the id of the restriction language \u279elabel1 \u279elabel2 object - Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated node to node statement\u279eobject owl disjoint class statement\u279eobject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279eobject - One of the two classes that are equivalent. No significance to subject vs object rdf type statement\u279eobject - The entity type rdfs subclass of statement\u279eobject - The superclass element of the triple owl equivalent to intersection member\u279eobject - a class expression that forms the defining expression owl subclass of some values from\u279eobject - the class D in the axiom C subClassOf P some D on property predicate owl subclass of some values from\u279epredicate - the predicate P in the axiom C subClassOf P some D prefix \u279eelement \u279enumber_of_usages restriction stanza subject owl disjoint class statement\u279esubject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279esubject - One of the two classes that are equivalent. No significance to subject vs object owl equivalent to intersection member\u279esubject - the defined class owl subclass of some values from\u279esubject - the class C in the axiom C subClassOf P some D problem\u279esubject - The thing that is problematic rdf list statement\u279esubject - The rdf:List to which the statement applies rdfs subclass of statement\u279esubject - The subclass element of the triple repair action\u279esubject - The thing that is problematic value - Note the range of this slot is always a string. Only used the triple represents a literal assertion node to value statement\u279evalue","title":"Slots"},{"location":"semsql_index/#enums","text":"","title":"Enums"},{"location":"semsql_index/#types","text":"","title":"Types"},{"location":"semsql_index/#built-in","text":"Bool Decimal ElementIdentifier NCName NodeIdentifier URI URIorCURIE XSDDate XSDDateTime XSDTime float int str","title":"Built in"},{"location":"semsql_index/#defined","text":"Boolean ( Bool ) - A binary (true or false) value Date ( XSDDate ) - a date (year, month and day) in an idealized calendar Datetime ( XSDDateTime ) - The combination of a date and time Decimal ( Decimal ) - A real number with arbitrary precision that conforms to the xsd:decimal specification Double ( float ) - A real number that conforms to the xsd:double specification Float ( float ) - A real number that conforms to the xsd:float specification Integer ( int ) - An integer LiteralAsStringType ( String ) Ncname ( NCName ) - Prefix part of CURIE NodeIdType ( Uriorcurie ) Nodeidentifier ( NodeIdentifier ) - A URI, CURIE or BNODE that represents a node in a model. Objectidentifier ( ElementIdentifier ) - A URI or CURIE that represents an object in the model. String ( str ) - A character string Time ( XSDTime ) - A time object represents a (local) time of day, independent of any particular day Uri ( URI ) - a complete URI Uriorcurie ( URIorCURIE ) - a URI or a CURIE","title":"Defined"},{"location":"stanza/","text":"Slot: stanza URI: semsql:stanza Domain and Range None -> OPT Node Parents Children Used by HasBroadMatchStatement HasBroadSynonymStatement HasDbxrefStatement HasExactMatchStatement HasExactSynonymStatement HasMappingStatement HasMatchStatement HasNarrowMatchStatement HasNarrowSynonymStatement HasOioSynonymStatement HasRelatedMatchStatement HasRelatedSynonymStatement HasSynonymStatement NodeToNodeStatement NodeToValueStatement OwlDisjointClassStatement OwlEquivalentClassStatement RdfFirstStatement RdfListMemberStatement RdfListStatement RdfRestStatement RdfRestTransitiveStatement RdfTypeStatement RdfsLabelStatement RdfsSubclassOfStatement Statements","title":"Slot: stanza"},{"location":"stanza/#slot-stanza","text":"URI: semsql:stanza","title":"Slot: stanza"},{"location":"stanza/#domain-and-range","text":"None -> OPT Node","title":"Domain and Range"},{"location":"stanza/#parents","text":"","title":"Parents"},{"location":"stanza/#children","text":"","title":"Children"},{"location":"stanza/#used-by","text":"HasBroadMatchStatement HasBroadSynonymStatement HasDbxrefStatement HasExactMatchStatement HasExactSynonymStatement HasMappingStatement HasMatchStatement HasNarrowMatchStatement HasNarrowSynonymStatement HasOioSynonymStatement HasRelatedMatchStatement HasRelatedSynonymStatement HasSynonymStatement NodeToNodeStatement NodeToValueStatement OwlDisjointClassStatement OwlEquivalentClassStatement RdfFirstStatement RdfListMemberStatement RdfListStatement RdfRestStatement RdfRestTransitiveStatement RdfTypeStatement RdfsLabelStatement RdfsSubclassOfStatement Statements","title":"Used by"},{"location":"subject/","text":"Slot: subject URI: semsql:subject Domain and Range None -> OPT Node Parents Children owl disjoint class statement\u279esubject owl equivalent class statement\u279esubject owl equivalent to intersection member\u279esubject owl subclass of some values from\u279esubject problem\u279esubject rdf list statement\u279esubject rdfs subclass of statement\u279esubject repair action\u279esubject Used by Edge EntailedEdge HasBroadMatchStatement HasBroadSynonymStatement HasDbxrefStatement HasExactMatchStatement HasExactSynonymStatement HasMappingStatement HasMatchStatement HasNarrowMatchStatement HasNarrowSynonymStatement HasOioSynonymStatement HasRelatedMatchStatement HasRelatedSynonymStatement HasSynonymStatement NodeToNodeStatement NodeToValueStatement RdfTypeStatement RdfsLabelStatement Statements","title":"Slot: subject"},{"location":"subject/#slot-subject","text":"URI: semsql:subject","title":"Slot: subject"},{"location":"subject/#domain-and-range","text":"None -> OPT Node","title":"Domain and Range"},{"location":"subject/#parents","text":"","title":"Parents"},{"location":"subject/#children","text":"owl disjoint class statement\u279esubject owl equivalent class statement\u279esubject owl equivalent to intersection member\u279esubject owl subclass of some values from\u279esubject problem\u279esubject rdf list statement\u279esubject rdfs subclass of statement\u279esubject repair action\u279esubject","title":"Children"},{"location":"subject/#used-by","text":"Edge EntailedEdge HasBroadMatchStatement HasBroadSynonymStatement HasDbxrefStatement HasExactMatchStatement HasExactSynonymStatement HasMappingStatement HasMatchStatement HasNarrowMatchStatement HasNarrowSynonymStatement HasOioSynonymStatement HasRelatedMatchStatement HasRelatedSynonymStatement HasSynonymStatement NodeToNodeStatement NodeToValueStatement RdfTypeStatement RdfsLabelStatement Statements","title":"Used by"},{"location":"value/","text":"Slot: value Note the range of this slot is always a string. Only used the triple represents a literal assertion URI: semsql:value Domain and Range None -> OPT LiteralAsStringType Parents Children node to value statement\u279evalue Used by NodeToNodeStatement OwlDisjointClassStatement OwlEquivalentClassStatement RdfFirstStatement RdfListMemberStatement RdfListStatement RdfRestStatement RdfRestTransitiveStatement RdfTypeStatement RdfsSubclassOfStatement Statements","title":"Slot: value"},{"location":"value/#slot-value","text":"Note the range of this slot is always a string. Only used the triple represents a literal assertion URI: semsql:value","title":"Slot: value"},{"location":"value/#domain-and-range","text":"None -> OPT LiteralAsStringType","title":"Domain and Range"},{"location":"value/#parents","text":"","title":"Parents"},{"location":"value/#children","text":"node to value statement\u279evalue","title":"Children"},{"location":"value/#used-by","text":"NodeToNodeStatement OwlDisjointClassStatement OwlEquivalentClassStatement RdfFirstStatement RdfListMemberStatement RdfListStatement RdfRestStatement RdfRestTransitiveStatement RdfTypeStatement RdfsSubclassOfStatement Statements","title":"Used by"},{"location":"types/Boolean/","text":"Type: Boolean A binary (true or false) value URI: linkml:Boolean Root (builtin) type Bool Representation bool","title":"Type: Boolean"},{"location":"types/Boolean/#type-boolean","text":"A binary (true or false) value URI: linkml:Boolean Root (builtin) type Bool Representation bool","title":"Type: Boolean"},{"location":"types/Date/","text":"Type: Date a date (year, month and day) in an idealized calendar URI: linkml:Date Root (builtin) type XSDDate Representation str","title":"Type: Date"},{"location":"types/Date/#type-date","text":"a date (year, month and day) in an idealized calendar URI: linkml:Date Root (builtin) type XSDDate Representation str","title":"Type: Date"},{"location":"types/Datetime/","text":"Type: Datetime The combination of a date and time URI: linkml:Datetime Root (builtin) type XSDDateTime Representation str","title":"Type: Datetime"},{"location":"types/Datetime/#type-datetime","text":"The combination of a date and time URI: linkml:Datetime Root (builtin) type XSDDateTime Representation str","title":"Type: Datetime"},{"location":"types/Decimal/","text":"Type: Decimal A real number with arbitrary precision that conforms to the xsd:decimal specification URI: linkml:Decimal Root (builtin) type Decimal","title":"Type: Decimal"},{"location":"types/Decimal/#type-decimal","text":"A real number with arbitrary precision that conforms to the xsd:decimal specification URI: linkml:Decimal Root (builtin) type Decimal","title":"Type: Decimal"},{"location":"types/Double/","text":"Type: Double A real number that conforms to the xsd:double specification URI: linkml:Double Root (builtin) type float","title":"Type: Double"},{"location":"types/Double/#type-double","text":"A real number that conforms to the xsd:double specification URI: linkml:Double Root (builtin) type float","title":"Type: Double"},{"location":"types/Float/","text":"Type: Float A real number that conforms to the xsd:float specification URI: linkml:Float Root (builtin) type float","title":"Type: Float"},{"location":"types/Float/#type-float","text":"A real number that conforms to the xsd:float specification URI: linkml:Float Root (builtin) type float","title":"Type: Float"},{"location":"types/Integer/","text":"Type: Integer An integer URI: linkml:Integer Root (builtin) type int","title":"Type: Integer"},{"location":"types/Integer/#type-integer","text":"An integer URI: linkml:Integer Root (builtin) type int","title":"Type: Integer"},{"location":"types/LiteralAsStringType/","text":"Type: LiteralAsStringType URI: semsql_rdf:LiteralAsStringType Parent type String Root (builtin) type str","title":"Type: LiteralAsStringType"},{"location":"types/LiteralAsStringType/#type-literalasstringtype","text":"URI: semsql_rdf:LiteralAsStringType Parent type String Root (builtin) type str","title":"Type: LiteralAsStringType"},{"location":"types/Ncname/","text":"Type: Ncname Prefix part of CURIE URI: linkml:Ncname Root (builtin) type NCName Representation str","title":"Type: Ncname"},{"location":"types/Ncname/#type-ncname","text":"Prefix part of CURIE URI: linkml:Ncname Root (builtin) type NCName Representation str","title":"Type: Ncname"},{"location":"types/NodeIdType/","text":"Type: NodeIdType URI: semsql_rdf:NodeIdType Parent type Uriorcurie Root (builtin) type URIorCURIE Representation str","title":"Type: NodeIdType"},{"location":"types/NodeIdType/#type-nodeidtype","text":"URI: semsql_rdf:NodeIdType Parent type Uriorcurie Root (builtin) type URIorCURIE Representation str","title":"Type: NodeIdType"},{"location":"types/Nodeidentifier/","text":"Type: Nodeidentifier A URI, CURIE or BNODE that represents a node in a model. URI: linkml:Nodeidentifier Root (builtin) type NodeIdentifier Representation str","title":"Type: Nodeidentifier"},{"location":"types/Nodeidentifier/#type-nodeidentifier","text":"A URI, CURIE or BNODE that represents a node in a model. URI: linkml:Nodeidentifier Root (builtin) type NodeIdentifier Representation str","title":"Type: Nodeidentifier"},{"location":"types/Objectidentifier/","text":"Type: Objectidentifier A URI or CURIE that represents an object in the model. URI: linkml:Objectidentifier Root (builtin) type ElementIdentifier Representation str Other properties Comments: Used for inheritence and type checking","title":"Type: Objectidentifier"},{"location":"types/Objectidentifier/#type-objectidentifier","text":"A URI or CURIE that represents an object in the model. URI: linkml:Objectidentifier Root (builtin) type ElementIdentifier Representation str","title":"Type: Objectidentifier"},{"location":"types/Objectidentifier/#other-properties","text":"Comments: Used for inheritence and type checking","title":"Other properties"},{"location":"types/String/","text":"Type: String A character string URI: linkml:String Root (builtin) type str","title":"Type: String"},{"location":"types/String/#type-string","text":"A character string URI: linkml:String Root (builtin) type str","title":"Type: String"},{"location":"types/Time/","text":"Type: Time A time object represents a (local) time of day, independent of any particular day URI: linkml:Time Root (builtin) type XSDTime Representation str","title":"Type: Time"},{"location":"types/Time/#type-time","text":"A time object represents a (local) time of day, independent of any particular day URI: linkml:Time Root (builtin) type XSDTime Representation str","title":"Type: Time"},{"location":"types/Uri/","text":"Type: Uri a complete URI URI: linkml:Uri Root (builtin) type URI Representation str","title":"Type: Uri"},{"location":"types/Uri/#type-uri","text":"a complete URI URI: linkml:Uri Root (builtin) type URI Representation str","title":"Type: Uri"},{"location":"types/Uriorcurie/","text":"Type: Uriorcurie a URI or a CURIE URI: linkml:Uriorcurie Root (builtin) type URIorCURIE Representation str","title":"Type: Uriorcurie"},{"location":"types/Uriorcurie/#type-uriorcurie","text":"a URI or a CURIE URI: linkml:Uriorcurie Root (builtin) type URIorCURIE Representation str","title":"Type: Uriorcurie"}]}