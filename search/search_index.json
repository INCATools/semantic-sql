{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Semsql schema A datamodel for RDF, OWL, and OBO Ontologies designed to work harmoniously with SQL databases. Note that the primary purpose of this linkml schema is to organize and define SQL VIEWs to be used on top of a generic SQL database following the rdftab statements schema. These SQL views are encoded with the sqlviews>> tag inside the yaml. We use linkml to do this rather than a simple SQL DDL file because linkml gives us a standard way to do things such as: attach descriptions to each view define a data dictionary of all columns used, together with domains/ranges modular structure with imports the ability to attach rich semantic metadata to each schema element Additionally, the framework provides automatic compilation to SQLAlchemy models, and tools for being able to turn views into indexed tables for efficient querying, as well as a rich searchable documentation system and other tooling. This schema is best browsed online: https://cmungall.github.io/semantic-sql/ Note that things are in flux, and there some oddities that need ironed out, see issues for details See the github repo for code to convert from the linkml yaml into SQL DDL Classes Node - The basic unit of representation in an RDF or OWL graph BlankNode - A node with an ID that is not preserved between databases AnonymousExpression - An OWL expression, such as a class expression. Expressions are \"anonymous\" as they are a composition of named elements rather than a named element themselves AnonymousClassExpression - An OWL anonymous class expression, such as for example SomeValuesFrom(partOf Hand) OwlRestriction - An OWL restriction, such as SomeValuesFrom(partOf Hand) OwlAllValuesFrom OwlHasSelf OwlHasValue OwlSomeValuesFrom - An OWL SomeValuesFrom restriction AnonymousIndividualExpression AnonymousPropertyExpression RdfListNode - A node representing an RDF list. Note that you will not likely need to use this directly. ClassNode - A node that represents an RDFS/OWL class DeprecatedNode IriNode NamedIndividualNode - A node that represents an OWL Named Individual OntologyNode - A node representing an ontology PropertyNode - Note this only directly classifies nodes asserted to be rdf:Properties AnnotationPropertyNode - A node representing an OWL annotation property ObjectPropertyNode - A node representing an OWL object property AsymmetricPropertyNode IrreflexivePropertyNode - A node representing an OWL irreflexive object property ReflexivePropertyNode - A node representing an OWL reflexive object property SymmetricPropertyNode - A node representing an OWL symmetric object property TransitivePropertyNode - A node representing an OWL transitive object property OwlComplexAxiom - An axiom that is composed of two or more statements OwlEquivalentToIntersectionMember - Composition of OwlEquivalentClass , OwlIntersectionOf , and RdfListMember ; C = X1 and ... and Xn OwlSubclassOfSomeValuesFrom - Composition of subClassOf and SomeValuesFrom Prefix - Maps CURIEs to URIs Problem - Represents an instance of a problem pertaining to conformance to OBO guidelines AllProblems LexicalProblem - a problem with the textual value of an annotation property NodeWithTwoLabelsProblem PropertyUsedWithDatatypeValuesAndObjects - A problem in which the same property is used two two different ways, one in which the range is a literal value, the other where it is an object. TrailingWhitespaceProblem RdfLevelSummaryStatistic - Abstract grouping for views/classes that provide some kind of count summary about an individual element CountOfInstantiatedClasses - Number of distinct instantiations of a class. Note in many OBOs, classes are not directly instantiated CountOfPredicates - Number of distinct usages of a predicate. NOTE MAY CHANGE: does not currently count existential usage in OWL CountOfSubclasses - Number of subclasses for a given class RelationGraphConstruct - A construct used as part of a Relation Graph Edge - A relation graph edge that connects two entities by a predicate. Note an edge is distinct from a statement, in that an axiom such as A SubClassOf R some B is represented as multiple statements, but is a single relation graph edge EntailedEdge - A relation graph edge that is inferred SubgraphQuery - A subgraph query encompasses as subgraph edge and a seed/anchor object and seed/anchor predicate SubgraphEdgeByAncestor - An edge within a subgraph anchored around a set of ancestor terms SubgraphEdgeByChild - An edge within a subgraph anchored around a set of child terms SubgraphEdgeByDescendant - An edge within a subgraph anchored around a set of descendant terms SubgraphEdgeByParent - An edge within a subgraph anchored around a set of parent terms SubgraphEdgeBySelf - A special null form of a subgraph query where there is no expansion RepairAction - Represents an action that needs to be taken to repair a problem Statements - Represents an RDF triple NodeToNodeStatement - A statement where object is non-null and value is not populated OwlComplementOfStatement OwlDisjointClassStatement OwlEquivalentClassStatement - A statement that connects two class nodes where both classes are equivalent OwlImportsStatement OwlInverseOfStatement OwlSameAsStatement - A statement that connects two individual nodes where both individual are equivalent RdfTypeStatement - A statement that indicates the asserted type of the subject entity RdfsDomainStatement RdfsRangeStatement RdfsSubclassOfStatement RdfsSubclassOfNamedStatement RdfsSubpropertyOfStatement NodeToValueStatement - A statement where value is non-null and object is not populated HasMappingStatement HasDbxrefStatement HasMatchStatement HasBroadMatchStatement HasExactMatchStatement HasNarrowMatchStatement HasRelatedMatchStatement HasOioSynonymStatement HasBroadSynonymStatement HasExactSynonymStatement HasNarrowSynonymStatement HasRelatedSynonymStatement HasSynonymStatement HasTextDefinitionStatement OntologyStatusStatement RdfsLabelStatement OwlAxiom OwlAxiomAnnotation AxiomDbxrefAnnotation OwlReifiedAxiom - An OWL axiom that has been reified - i.e. it includes an id field that uniquely identifies that axiom and which can be the subject of additional statements RdfListStatement - A statement that is used to represent aspects of RDF lists RdfFirstStatement - A statement that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfListMemberStatement RdfRestStatement - A statement that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfRestTransitiveStatement Mixins ClassTrait IndividualTrait IsReport - Used to describe classes/views that have a reporting function NodeTrait - abstract groupings/properties for different aspects of the model ClassTrait IndividualTrait PropertyTrait PropertyTrait Slots anchor object subgraph query\u279eanchor object - The entity that is used to seed the graph. The seed entity will bear some relationship to each subgraph edge; E.g. with an ancestor subgraph query, all edges will have a subject that descends from the ancestor subgraph edge by ancestor\u279eanchor object - The ancestor term subgraph edge by child\u279eanchor object - The child term subgraph edge by descendant\u279eanchor object - The descendant term subgraph edge by parent\u279eanchor object - The parent term anchor predicate subgraph query\u279eanchor predicate - The predicate that is used to determine if an edge should be included based on relationship to the anchor_object. subgraph edge by ancestor\u279eanchor predicate - The entailed predicate that holds between each edge subject and the ancestor subgraph edge by child\u279eanchor predicate - The entailed predicate that holds between the child and each edge subject subgraph edge by descendant\u279eanchor predicate - The entailed predicate that holds between the descendant and each edge subject subgraph edge by parent\u279eanchor predicate - The entailed predicate that holds between each edge subject and the parent axiom datatype axiom language axiom object axiom predicate axiom value base - The base URI a prefix will expand to datatype description filler owl has self\u279efiller - This is Null for a self-restriction id - An identifier for an element. Note blank node ids are not unique across databases iri node\u279eid owl restriction\u279eid - the id of the restriction language \u279elabel1 \u279elabel2 object - Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated node to node statement\u279eobject owl disjoint class statement\u279eobject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279eobject - One of the two classes that are equivalent. No significance to subject vs object owl same as statement\u279eobject - One of the two classes that are equivalent. No significance to subject vs object rdf type statement\u279eobject - The entity type rdfs subclass of statement\u279eobject - The superclass element of the triple rdfs subproperty of statement\u279eobject - The superproperty element of the triple owl equivalent to intersection member\u279eobject - a class expression that forms the defining expression owl subclass of some values from\u279eobject - the class D in the axiom C subClassOf P some D subgraph query\u279eobject - object of the subgraph edge on property predicate owl subclass of some values from\u279epredicate - the predicate P in the axiom C subClassOf P some D problem\u279epredicate - The property of the thing that is problematic subgraph query\u279epredicate - predicate of the subgraph edge prefix - A standardized prefix such as 'GO' or 'rdf' or 'FlyBase' \u279ecount_value \u279eelement restriction stanza subject owl disjoint class statement\u279esubject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279esubject - One of the two classes that are equivalent. No significance to subject vs object owl equivalent to intersection member\u279esubject - the defined class owl same as statement\u279esubject - One of the two classes that are equivalent. No significance to subject vs object owl subclass of some values from\u279esubject - the class C in the axiom C subClassOf P some D problem\u279esubject - The thing that is problematic rdf list statement\u279esubject - The rdf:List to which the statement applies rdfs subclass of statement\u279esubject - The subclass element of the triple rdfs subproperty of statement\u279esubject - The subproperty element of the triple repair action\u279esubject - The thing that is problematic subgraph query\u279esubject - subject of the subgraph edge value - Note the range of this slot is always a string. Only used the triple represents a literal assertion node to value statement\u279evalue rdfs label statement\u279evalue - The label value Enums Types Built in Bool Decimal ElementIdentifier NCName NodeIdentifier URI URIorCURIE XSDDate XSDDateTime XSDTime float int str Defined Boolean ( Bool ) - A binary (true or false) value Date ( XSDDate ) - a date (year, month and day) in an idealized calendar Datetime ( XSDDateTime ) - The combination of a date and time Decimal ( Decimal ) - A real number with arbitrary precision that conforms to the xsd:decimal specification Double ( float ) - A real number that conforms to the xsd:double specification Float ( float ) - A real number that conforms to the xsd:float specification Integer ( int ) - An integer LiteralAsStringType ( String ) Ncname ( NCName ) - Prefix part of CURIE NodeIdType ( Uriorcurie ) Nodeidentifier ( NodeIdentifier ) - A URI, CURIE or BNODE that represents a node in a model. Objectidentifier ( ElementIdentifier ) - A URI or CURIE that represents an object in the model. String ( str ) - A character string Time ( XSDTime ) - A time object represents a (local) time of day, independent of any particular day Uri ( URI ) - a complete URI Uriorcurie ( URIorCURIE ) - a URI or a CURIE","title":"Home"},{"location":"#semsql-schema","text":"A datamodel for RDF, OWL, and OBO Ontologies designed to work harmoniously with SQL databases. Note that the primary purpose of this linkml schema is to organize and define SQL VIEWs to be used on top of a generic SQL database following the rdftab statements schema. These SQL views are encoded with the sqlviews>> tag inside the yaml. We use linkml to do this rather than a simple SQL DDL file because linkml gives us a standard way to do things such as: attach descriptions to each view define a data dictionary of all columns used, together with domains/ranges modular structure with imports the ability to attach rich semantic metadata to each schema element Additionally, the framework provides automatic compilation to SQLAlchemy models, and tools for being able to turn views into indexed tables for efficient querying, as well as a rich searchable documentation system and other tooling. This schema is best browsed online: https://cmungall.github.io/semantic-sql/ Note that things are in flux, and there some oddities that need ironed out, see issues for details See the github repo for code to convert from the linkml yaml into SQL DDL","title":"Semsql schema"},{"location":"#classes","text":"Node - The basic unit of representation in an RDF or OWL graph BlankNode - A node with an ID that is not preserved between databases AnonymousExpression - An OWL expression, such as a class expression. Expressions are \"anonymous\" as they are a composition of named elements rather than a named element themselves AnonymousClassExpression - An OWL anonymous class expression, such as for example SomeValuesFrom(partOf Hand) OwlRestriction - An OWL restriction, such as SomeValuesFrom(partOf Hand) OwlAllValuesFrom OwlHasSelf OwlHasValue OwlSomeValuesFrom - An OWL SomeValuesFrom restriction AnonymousIndividualExpression AnonymousPropertyExpression RdfListNode - A node representing an RDF list. Note that you will not likely need to use this directly. ClassNode - A node that represents an RDFS/OWL class DeprecatedNode IriNode NamedIndividualNode - A node that represents an OWL Named Individual OntologyNode - A node representing an ontology PropertyNode - Note this only directly classifies nodes asserted to be rdf:Properties AnnotationPropertyNode - A node representing an OWL annotation property ObjectPropertyNode - A node representing an OWL object property AsymmetricPropertyNode IrreflexivePropertyNode - A node representing an OWL irreflexive object property ReflexivePropertyNode - A node representing an OWL reflexive object property SymmetricPropertyNode - A node representing an OWL symmetric object property TransitivePropertyNode - A node representing an OWL transitive object property OwlComplexAxiom - An axiom that is composed of two or more statements OwlEquivalentToIntersectionMember - Composition of OwlEquivalentClass , OwlIntersectionOf , and RdfListMember ; C = X1 and ... and Xn OwlSubclassOfSomeValuesFrom - Composition of subClassOf and SomeValuesFrom Prefix - Maps CURIEs to URIs Problem - Represents an instance of a problem pertaining to conformance to OBO guidelines AllProblems LexicalProblem - a problem with the textual value of an annotation property NodeWithTwoLabelsProblem PropertyUsedWithDatatypeValuesAndObjects - A problem in which the same property is used two two different ways, one in which the range is a literal value, the other where it is an object. TrailingWhitespaceProblem RdfLevelSummaryStatistic - Abstract grouping for views/classes that provide some kind of count summary about an individual element CountOfInstantiatedClasses - Number of distinct instantiations of a class. Note in many OBOs, classes are not directly instantiated CountOfPredicates - Number of distinct usages of a predicate. NOTE MAY CHANGE: does not currently count existential usage in OWL CountOfSubclasses - Number of subclasses for a given class RelationGraphConstruct - A construct used as part of a Relation Graph Edge - A relation graph edge that connects two entities by a predicate. Note an edge is distinct from a statement, in that an axiom such as A SubClassOf R some B is represented as multiple statements, but is a single relation graph edge EntailedEdge - A relation graph edge that is inferred SubgraphQuery - A subgraph query encompasses as subgraph edge and a seed/anchor object and seed/anchor predicate SubgraphEdgeByAncestor - An edge within a subgraph anchored around a set of ancestor terms SubgraphEdgeByChild - An edge within a subgraph anchored around a set of child terms SubgraphEdgeByDescendant - An edge within a subgraph anchored around a set of descendant terms SubgraphEdgeByParent - An edge within a subgraph anchored around a set of parent terms SubgraphEdgeBySelf - A special null form of a subgraph query where there is no expansion RepairAction - Represents an action that needs to be taken to repair a problem Statements - Represents an RDF triple NodeToNodeStatement - A statement where object is non-null and value is not populated OwlComplementOfStatement OwlDisjointClassStatement OwlEquivalentClassStatement - A statement that connects two class nodes where both classes are equivalent OwlImportsStatement OwlInverseOfStatement OwlSameAsStatement - A statement that connects two individual nodes where both individual are equivalent RdfTypeStatement - A statement that indicates the asserted type of the subject entity RdfsDomainStatement RdfsRangeStatement RdfsSubclassOfStatement RdfsSubclassOfNamedStatement RdfsSubpropertyOfStatement NodeToValueStatement - A statement where value is non-null and object is not populated HasMappingStatement HasDbxrefStatement HasMatchStatement HasBroadMatchStatement HasExactMatchStatement HasNarrowMatchStatement HasRelatedMatchStatement HasOioSynonymStatement HasBroadSynonymStatement HasExactSynonymStatement HasNarrowSynonymStatement HasRelatedSynonymStatement HasSynonymStatement HasTextDefinitionStatement OntologyStatusStatement RdfsLabelStatement OwlAxiom OwlAxiomAnnotation AxiomDbxrefAnnotation OwlReifiedAxiom - An OWL axiom that has been reified - i.e. it includes an id field that uniquely identifies that axiom and which can be the subject of additional statements RdfListStatement - A statement that is used to represent aspects of RDF lists RdfFirstStatement - A statement that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfListMemberStatement RdfRestStatement - A statement that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfRestTransitiveStatement","title":"Classes"},{"location":"#mixins","text":"ClassTrait IndividualTrait IsReport - Used to describe classes/views that have a reporting function NodeTrait - abstract groupings/properties for different aspects of the model ClassTrait IndividualTrait PropertyTrait PropertyTrait","title":"Mixins"},{"location":"#slots","text":"anchor object subgraph query\u279eanchor object - The entity that is used to seed the graph. The seed entity will bear some relationship to each subgraph edge; E.g. with an ancestor subgraph query, all edges will have a subject that descends from the ancestor subgraph edge by ancestor\u279eanchor object - The ancestor term subgraph edge by child\u279eanchor object - The child term subgraph edge by descendant\u279eanchor object - The descendant term subgraph edge by parent\u279eanchor object - The parent term anchor predicate subgraph query\u279eanchor predicate - The predicate that is used to determine if an edge should be included based on relationship to the anchor_object. subgraph edge by ancestor\u279eanchor predicate - The entailed predicate that holds between each edge subject and the ancestor subgraph edge by child\u279eanchor predicate - The entailed predicate that holds between the child and each edge subject subgraph edge by descendant\u279eanchor predicate - The entailed predicate that holds between the descendant and each edge subject subgraph edge by parent\u279eanchor predicate - The entailed predicate that holds between each edge subject and the parent axiom datatype axiom language axiom object axiom predicate axiom value base - The base URI a prefix will expand to datatype description filler owl has self\u279efiller - This is Null for a self-restriction id - An identifier for an element. Note blank node ids are not unique across databases iri node\u279eid owl restriction\u279eid - the id of the restriction language \u279elabel1 \u279elabel2 object - Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated node to node statement\u279eobject owl disjoint class statement\u279eobject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279eobject - One of the two classes that are equivalent. No significance to subject vs object owl same as statement\u279eobject - One of the two classes that are equivalent. No significance to subject vs object rdf type statement\u279eobject - The entity type rdfs subclass of statement\u279eobject - The superclass element of the triple rdfs subproperty of statement\u279eobject - The superproperty element of the triple owl equivalent to intersection member\u279eobject - a class expression that forms the defining expression owl subclass of some values from\u279eobject - the class D in the axiom C subClassOf P some D subgraph query\u279eobject - object of the subgraph edge on property predicate owl subclass of some values from\u279epredicate - the predicate P in the axiom C subClassOf P some D problem\u279epredicate - The property of the thing that is problematic subgraph query\u279epredicate - predicate of the subgraph edge prefix - A standardized prefix such as 'GO' or 'rdf' or 'FlyBase' \u279ecount_value \u279eelement restriction stanza subject owl disjoint class statement\u279esubject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279esubject - One of the two classes that are equivalent. No significance to subject vs object owl equivalent to intersection member\u279esubject - the defined class owl same as statement\u279esubject - One of the two classes that are equivalent. No significance to subject vs object owl subclass of some values from\u279esubject - the class C in the axiom C subClassOf P some D problem\u279esubject - The thing that is problematic rdf list statement\u279esubject - The rdf:List to which the statement applies rdfs subclass of statement\u279esubject - The subclass element of the triple rdfs subproperty of statement\u279esubject - The subproperty element of the triple repair action\u279esubject - The thing that is problematic subgraph query\u279esubject - subject of the subgraph edge value - Note the range of this slot is always a string. Only used the triple represents a literal assertion node to value statement\u279evalue rdfs label statement\u279evalue - The label value","title":"Slots"},{"location":"#enums","text":"","title":"Enums"},{"location":"#types","text":"","title":"Types"},{"location":"#built-in","text":"Bool Decimal ElementIdentifier NCName NodeIdentifier URI URIorCURIE XSDDate XSDDateTime XSDTime float int str","title":"Built in"},{"location":"#defined","text":"Boolean ( Bool ) - A binary (true or false) value Date ( XSDDate ) - a date (year, month and day) in an idealized calendar Datetime ( XSDDateTime ) - The combination of a date and time Decimal ( Decimal ) - A real number with arbitrary precision that conforms to the xsd:decimal specification Double ( float ) - A real number that conforms to the xsd:double specification Float ( float ) - A real number that conforms to the xsd:float specification Integer ( int ) - An integer LiteralAsStringType ( String ) Ncname ( NCName ) - Prefix part of CURIE NodeIdType ( Uriorcurie ) Nodeidentifier ( NodeIdentifier ) - A URI, CURIE or BNODE that represents a node in a model. Objectidentifier ( ElementIdentifier ) - A URI or CURIE that represents an object in the model. String ( str ) - A character string Time ( XSDTime ) - A time object represents a (local) time of day, independent of any particular day Uri ( URI ) - a complete URI Uriorcurie ( URIorCURIE ) - a URI or a CURIE","title":"Defined"},{"location":"AllProblems/","text":"Class: AllProblems URI: semsql:AllProblems Parents is_a: Problem - Represents an instance of a problem pertaining to conformance to OBO guidelines Attributes Inherited from problem: problem\u279epredicate OPT Description: The property of the thing that is problematic range: PropertyNode problem\u279esubject OPT Description: The thing that is problematic range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType Other properties Comments: sqlview>> SELECT * FROM node_with_two_labels_problem sqlview>> SELECT * FROM trailing_whitespace_problem","title":"Class: AllProblems"},{"location":"AllProblems/#class-allproblems","text":"URI: semsql:AllProblems","title":"Class: AllProblems"},{"location":"AllProblems/#parents","text":"is_a: Problem - Represents an instance of a problem pertaining to conformance to OBO guidelines","title":"Parents"},{"location":"AllProblems/#attributes","text":"","title":"Attributes"},{"location":"AllProblems/#inherited-from-problem","text":"problem\u279epredicate OPT Description: The property of the thing that is problematic range: PropertyNode problem\u279esubject OPT Description: The thing that is problematic range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Inherited from problem:"},{"location":"AllProblems/#other-properties","text":"Comments: sqlview>> SELECT * FROM node_with_two_labels_problem sqlview>> SELECT * FROM trailing_whitespace_problem","title":"Other properties"},{"location":"AnnotationPropertyNode/","text":"Class: AnnotationPropertyNode A node representing an OWL annotation property URI: semsql:AnnotationPropertyNode Parents is_a: PropertyNode - Note this only directly classifies nodes asserted to be rdf:Properties Attributes Inherited from property node: id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType Other properties Comments: sqlview>> SELECT DISTINCT subject AS id FROM rdf_type_statement WHERE object='owl:AnnotatonProperty'","title":"Class: AnnotationPropertyNode"},{"location":"AnnotationPropertyNode/#class-annotationpropertynode","text":"A node representing an OWL annotation property URI: semsql:AnnotationPropertyNode","title":"Class: AnnotationPropertyNode"},{"location":"AnnotationPropertyNode/#parents","text":"is_a: PropertyNode - Note this only directly classifies nodes asserted to be rdf:Properties","title":"Parents"},{"location":"AnnotationPropertyNode/#attributes","text":"","title":"Attributes"},{"location":"AnnotationPropertyNode/#inherited-from-property-node","text":"id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType","title":"Inherited from property node:"},{"location":"AnnotationPropertyNode/#other-properties","text":"Comments: sqlview>> SELECT DISTINCT subject AS id FROM rdf_type_statement WHERE object='owl:AnnotatonProperty'","title":"Other properties"},{"location":"AnonymousClassExpression/","text":"Class: AnonymousClassExpression An OWL anonymous class expression, such as for example SomeValuesFrom(partOf Hand) URI: semsql:AnonymousClassExpression Parents is_a: AnonymousExpression - An OWL expression, such as a class expression. Expressions are \"anonymous\" as they are a composition of named elements rather than a named element themselves Uses Mixins mixin: ClassTrait Children OwlRestriction - An OWL restriction, such as SomeValuesFrom(partOf Hand) Referenced by class Attributes Inherited from anonymous expression: id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType","title":"Class: AnonymousClassExpression"},{"location":"AnonymousClassExpression/#class-anonymousclassexpression","text":"An OWL anonymous class expression, such as for example SomeValuesFrom(partOf Hand) URI: semsql:AnonymousClassExpression","title":"Class: AnonymousClassExpression"},{"location":"AnonymousClassExpression/#parents","text":"is_a: AnonymousExpression - An OWL expression, such as a class expression. Expressions are \"anonymous\" as they are a composition of named elements rather than a named element themselves","title":"Parents"},{"location":"AnonymousClassExpression/#uses-mixins","text":"mixin: ClassTrait","title":"Uses Mixins"},{"location":"AnonymousClassExpression/#children","text":"OwlRestriction - An OWL restriction, such as SomeValuesFrom(partOf Hand)","title":"Children"},{"location":"AnonymousClassExpression/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"AnonymousClassExpression/#attributes","text":"","title":"Attributes"},{"location":"AnonymousClassExpression/#inherited-from-anonymous-expression","text":"id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType","title":"Inherited from anonymous expression:"},{"location":"AnonymousExpression/","text":"Class: AnonymousExpression An OWL expression, such as a class expression. Expressions are \"anonymous\" as they are a composition of named elements rather than a named element themselves URI: semsql:AnonymousExpression Parents is_a: BlankNode - A node with an ID that is not preserved between databases Children AnonymousClassExpression - An OWL anonymous class expression, such as for example SomeValuesFrom(partOf Hand) AnonymousIndividualExpression AnonymousPropertyExpression Referenced by class Attributes Inherited from blank node: id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType","title":"Class: AnonymousExpression"},{"location":"AnonymousExpression/#class-anonymousexpression","text":"An OWL expression, such as a class expression. Expressions are \"anonymous\" as they are a composition of named elements rather than a named element themselves URI: semsql:AnonymousExpression","title":"Class: AnonymousExpression"},{"location":"AnonymousExpression/#parents","text":"is_a: BlankNode - A node with an ID that is not preserved between databases","title":"Parents"},{"location":"AnonymousExpression/#children","text":"AnonymousClassExpression - An OWL anonymous class expression, such as for example SomeValuesFrom(partOf Hand) AnonymousIndividualExpression AnonymousPropertyExpression","title":"Children"},{"location":"AnonymousExpression/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"AnonymousExpression/#attributes","text":"","title":"Attributes"},{"location":"AnonymousExpression/#inherited-from-blank-node","text":"id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType","title":"Inherited from blank node:"},{"location":"AnonymousIndividualExpression/","text":"Class: AnonymousIndividualExpression URI: semsql:AnonymousIndividualExpression Parents is_a: AnonymousExpression - An OWL expression, such as a class expression. Expressions are \"anonymous\" as they are a composition of named elements rather than a named element themselves Uses Mixins mixin: IndividualTrait Attributes Inherited from anonymous expression: id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType","title":"Class: AnonymousIndividualExpression"},{"location":"AnonymousIndividualExpression/#class-anonymousindividualexpression","text":"URI: semsql:AnonymousIndividualExpression","title":"Class: AnonymousIndividualExpression"},{"location":"AnonymousIndividualExpression/#parents","text":"is_a: AnonymousExpression - An OWL expression, such as a class expression. Expressions are \"anonymous\" as they are a composition of named elements rather than a named element themselves","title":"Parents"},{"location":"AnonymousIndividualExpression/#uses-mixins","text":"mixin: IndividualTrait","title":"Uses Mixins"},{"location":"AnonymousIndividualExpression/#attributes","text":"","title":"Attributes"},{"location":"AnonymousIndividualExpression/#inherited-from-anonymous-expression","text":"id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType","title":"Inherited from anonymous expression:"},{"location":"AnonymousPropertyExpression/","text":"Class: AnonymousPropertyExpression URI: semsql:AnonymousPropertyExpression Parents is_a: AnonymousExpression - An OWL expression, such as a class expression. Expressions are \"anonymous\" as they are a composition of named elements rather than a named element themselves Uses Mixins mixin: PropertyTrait Attributes Inherited from anonymous expression: id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType","title":"Class: AnonymousPropertyExpression"},{"location":"AnonymousPropertyExpression/#class-anonymouspropertyexpression","text":"URI: semsql:AnonymousPropertyExpression","title":"Class: AnonymousPropertyExpression"},{"location":"AnonymousPropertyExpression/#parents","text":"is_a: AnonymousExpression - An OWL expression, such as a class expression. Expressions are \"anonymous\" as they are a composition of named elements rather than a named element themselves","title":"Parents"},{"location":"AnonymousPropertyExpression/#uses-mixins","text":"mixin: PropertyTrait","title":"Uses Mixins"},{"location":"AnonymousPropertyExpression/#attributes","text":"","title":"Attributes"},{"location":"AnonymousPropertyExpression/#inherited-from-anonymous-expression","text":"id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType","title":"Inherited from anonymous expression:"},{"location":"AsymmetricPropertyNode/","text":"Class: AsymmetricPropertyNode URI: semsql:AsymmetricPropertyNode Parents is_a: ObjectPropertyNode - A node representing an OWL object property Attributes Inherited from object property node: id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType Other properties Comments: sqlview>> SELECT DISTINCT subject AS id FROM rdf_type_statement WHERE object='owl:AsymmetricProperty'","title":"Class: AsymmetricPropertyNode"},{"location":"AsymmetricPropertyNode/#class-asymmetricpropertynode","text":"URI: semsql:AsymmetricPropertyNode","title":"Class: AsymmetricPropertyNode"},{"location":"AsymmetricPropertyNode/#parents","text":"is_a: ObjectPropertyNode - A node representing an OWL object property","title":"Parents"},{"location":"AsymmetricPropertyNode/#attributes","text":"","title":"Attributes"},{"location":"AsymmetricPropertyNode/#inherited-from-object-property-node","text":"id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType","title":"Inherited from object property node:"},{"location":"AsymmetricPropertyNode/#other-properties","text":"Comments: sqlview>> SELECT DISTINCT subject AS id FROM rdf_type_statement WHERE object='owl:AsymmetricProperty'","title":"Other properties"},{"location":"AxiomDbxrefAnnotation/","text":"Class: AxiomDbxrefAnnotation URI: semsql:AxiomDbxrefAnnotation Parents is_a: OwlAxiomAnnotation Attributes Inherited from owl axiom annotation: axiom datatype OPT range: String axiom language OPT range: String axiom object OPT range: String axiom predicate OPT range: String axiom value OPT range: String datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType Other properties Comments: sqlview>> SELECT * FROM owl_axiom_annotation WHERE annotation_predicate = 'oio:hasDbXref'","title":"Class: AxiomDbxrefAnnotation"},{"location":"AxiomDbxrefAnnotation/#class-axiomdbxrefannotation","text":"URI: semsql:AxiomDbxrefAnnotation","title":"Class: AxiomDbxrefAnnotation"},{"location":"AxiomDbxrefAnnotation/#parents","text":"is_a: OwlAxiomAnnotation","title":"Parents"},{"location":"AxiomDbxrefAnnotation/#attributes","text":"","title":"Attributes"},{"location":"AxiomDbxrefAnnotation/#inherited-from-owl-axiom-annotation","text":"axiom datatype OPT range: String axiom language OPT range: String axiom object OPT range: String axiom predicate OPT range: String axiom value OPT range: String datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Inherited from owl axiom annotation:"},{"location":"AxiomDbxrefAnnotation/#other-properties","text":"Comments: sqlview>> SELECT * FROM owl_axiom_annotation WHERE annotation_predicate = 'oio:hasDbXref'","title":"Other properties"},{"location":"BlankNode/","text":"Class: BlankNode A node with an ID that is not preserved between databases URI: semsql:BlankNode Parents is_a: Node - The basic unit of representation in an RDF or OWL graph Children AnonymousExpression - An OWL expression, such as a class expression. Expressions are \"anonymous\" as they are a composition of named elements rather than a named element themselves RdfListNode - A node representing an RDF list. Note that you will not likely need to use this directly. Referenced by class None restriction OPT BlankNode Attributes Inherited from node: id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType Other properties Comments: sqlview>> SELECT * FROM node WHERE id LIKE '_:%'","title":"Class: BlankNode"},{"location":"BlankNode/#class-blanknode","text":"A node with an ID that is not preserved between databases URI: semsql:BlankNode","title":"Class: BlankNode"},{"location":"BlankNode/#parents","text":"is_a: Node - The basic unit of representation in an RDF or OWL graph","title":"Parents"},{"location":"BlankNode/#children","text":"AnonymousExpression - An OWL expression, such as a class expression. Expressions are \"anonymous\" as they are a composition of named elements rather than a named element themselves RdfListNode - A node representing an RDF list. Note that you will not likely need to use this directly.","title":"Children"},{"location":"BlankNode/#referenced-by-class","text":"None restriction OPT BlankNode","title":"Referenced by class"},{"location":"BlankNode/#attributes","text":"","title":"Attributes"},{"location":"BlankNode/#inherited-from-node","text":"id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType","title":"Inherited from node:"},{"location":"BlankNode/#other-properties","text":"Comments: sqlview>> SELECT * FROM node WHERE id LIKE '_:%'","title":"Other properties"},{"location":"ClassNode/","text":"Class: ClassNode A node that represents an RDFS/OWL class URI: semsql:ClassNode Parents is_a: Node - The basic unit of representation in an RDF or OWL graph Uses Mixins mixin: ClassTrait Referenced by class None filler OPT ClassNode OwlDisjointClassStatement owl disjoint class statement\u279eobject REQ ClassNode OwlDisjointClassStatement owl disjoint class statement\u279esubject OPT ClassNode OwlEquivalentClassStatement owl equivalent class statement\u279eobject REQ ClassNode OwlEquivalentClassStatement owl equivalent class statement\u279esubject OPT ClassNode OwlHasSelf owl has self\u279efiller OPT ClassNode RdfTypeStatement rdf type statement\u279eobject REQ ClassNode RdfsSubclassOfStatement rdfs subclass of statement\u279eobject REQ ClassNode RdfsSubclassOfStatement rdfs subclass of statement\u279esubject OPT ClassNode Attributes Inherited from node: id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType Other properties Mappings: owl:Class Comments: sqlview>> SELECT distinct subject AS id from rdf_type_statement WHERE object = 'owl:Class';","title":"Class: ClassNode"},{"location":"ClassNode/#class-classnode","text":"A node that represents an RDFS/OWL class URI: semsql:ClassNode","title":"Class: ClassNode"},{"location":"ClassNode/#parents","text":"is_a: Node - The basic unit of representation in an RDF or OWL graph","title":"Parents"},{"location":"ClassNode/#uses-mixins","text":"mixin: ClassTrait","title":"Uses Mixins"},{"location":"ClassNode/#referenced-by-class","text":"None filler OPT ClassNode OwlDisjointClassStatement owl disjoint class statement\u279eobject REQ ClassNode OwlDisjointClassStatement owl disjoint class statement\u279esubject OPT ClassNode OwlEquivalentClassStatement owl equivalent class statement\u279eobject REQ ClassNode OwlEquivalentClassStatement owl equivalent class statement\u279esubject OPT ClassNode OwlHasSelf owl has self\u279efiller OPT ClassNode RdfTypeStatement rdf type statement\u279eobject REQ ClassNode RdfsSubclassOfStatement rdfs subclass of statement\u279eobject REQ ClassNode RdfsSubclassOfStatement rdfs subclass of statement\u279esubject OPT ClassNode","title":"Referenced by class"},{"location":"ClassNode/#attributes","text":"","title":"Attributes"},{"location":"ClassNode/#inherited-from-node","text":"id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType","title":"Inherited from node:"},{"location":"ClassNode/#other-properties","text":"Mappings: owl:Class Comments: sqlview>> SELECT distinct subject AS id from rdf_type_statement WHERE object = 'owl:Class';","title":"Other properties"},{"location":"ClassTrait/","text":"Class: ClassTrait URI: semsql:ClassTrait Parents is_a: NodeTrait - abstract groupings/properties for different aspects of the model Mixin for AnonymousClassExpression (mixin) - An OWL anonymous class expression, such as for example SomeValuesFrom(partOf Hand) ClassNode (mixin) - A node that represents an RDFS/OWL class Referenced by class Attributes","title":"Class: ClassTrait"},{"location":"ClassTrait/#class-classtrait","text":"URI: semsql:ClassTrait","title":"Class: ClassTrait"},{"location":"ClassTrait/#parents","text":"is_a: NodeTrait - abstract groupings/properties for different aspects of the model","title":"Parents"},{"location":"ClassTrait/#mixin-for","text":"AnonymousClassExpression (mixin) - An OWL anonymous class expression, such as for example SomeValuesFrom(partOf Hand) ClassNode (mixin) - A node that represents an RDFS/OWL class","title":"Mixin for"},{"location":"ClassTrait/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"ClassTrait/#attributes","text":"","title":"Attributes"},{"location":"CountOfInstantiatedClasses/","text":"Class: CountOfInstantiatedClasses Number of distinct instantiations of a class. Note in many OBOs, classes are not directly instantiated URI: semsql:CountOfInstantiatedClasses Parents is_a: RdfLevelSummaryStatistic - Abstract grouping for views/classes that provide some kind of count summary about an individual element Attributes Inherited from rdf level summary statistic: \u279ecount_value OPT range: Integer \u279eelement OPT range: Node Other properties Comments: sqlview>> SELECT object AS element, count(*) AS count_value FROM rdf_type_statement GROUP BY element ORDER BY count_value DESC","title":"Class: CountOfInstantiatedClasses"},{"location":"CountOfInstantiatedClasses/#class-countofinstantiatedclasses","text":"Number of distinct instantiations of a class. Note in many OBOs, classes are not directly instantiated URI: semsql:CountOfInstantiatedClasses","title":"Class: CountOfInstantiatedClasses"},{"location":"CountOfInstantiatedClasses/#parents","text":"is_a: RdfLevelSummaryStatistic - Abstract grouping for views/classes that provide some kind of count summary about an individual element","title":"Parents"},{"location":"CountOfInstantiatedClasses/#attributes","text":"","title":"Attributes"},{"location":"CountOfInstantiatedClasses/#inherited-from-rdf-level-summary-statistic","text":"\u279ecount_value OPT range: Integer \u279eelement OPT range: Node","title":"Inherited from rdf level summary statistic:"},{"location":"CountOfInstantiatedClasses/#other-properties","text":"Comments: sqlview>> SELECT object AS element, count(*) AS count_value FROM rdf_type_statement GROUP BY element ORDER BY count_value DESC","title":"Other properties"},{"location":"CountOfPredicates/","text":"Class: CountOfPredicates Number of distinct usages of a predicate. NOTE MAY CHANGE: does not currently count existential usage in OWL URI: semsql:CountOfPredicates Parents is_a: RdfLevelSummaryStatistic - Abstract grouping for views/classes that provide some kind of count summary about an individual element Attributes Inherited from rdf level summary statistic: \u279ecount_value OPT range: Integer \u279eelement OPT range: Node Other properties Comments: sqlview>> SELECT predicate AS element, count(*) AS count_value FROM statements GROUP BY predicate ORDER BY count_value DESC","title":"Class: CountOfPredicates"},{"location":"CountOfPredicates/#class-countofpredicates","text":"Number of distinct usages of a predicate. NOTE MAY CHANGE: does not currently count existential usage in OWL URI: semsql:CountOfPredicates","title":"Class: CountOfPredicates"},{"location":"CountOfPredicates/#parents","text":"is_a: RdfLevelSummaryStatistic - Abstract grouping for views/classes that provide some kind of count summary about an individual element","title":"Parents"},{"location":"CountOfPredicates/#attributes","text":"","title":"Attributes"},{"location":"CountOfPredicates/#inherited-from-rdf-level-summary-statistic","text":"\u279ecount_value OPT range: Integer \u279eelement OPT range: Node","title":"Inherited from rdf level summary statistic:"},{"location":"CountOfPredicates/#other-properties","text":"Comments: sqlview>> SELECT predicate AS element, count(*) AS count_value FROM statements GROUP BY predicate ORDER BY count_value DESC","title":"Other properties"},{"location":"CountOfSubclasses/","text":"Class: CountOfSubclasses Number of subclasses for a given class URI: semsql:CountOfSubclasses Parents is_a: RdfLevelSummaryStatistic - Abstract grouping for views/classes that provide some kind of count summary about an individual element Attributes Inherited from rdf level summary statistic: \u279ecount_value OPT range: Integer \u279eelement OPT range: Node Other properties Comments: sqlview>> SELECT sc.object AS element, count(distinct sc.subject) AS count_value FROM rdfs_subclass_of_statement AS sc GROUP BY sc.object ORDER BY count_value DESC","title":"Class: CountOfSubclasses"},{"location":"CountOfSubclasses/#class-countofsubclasses","text":"Number of subclasses for a given class URI: semsql:CountOfSubclasses","title":"Class: CountOfSubclasses"},{"location":"CountOfSubclasses/#parents","text":"is_a: RdfLevelSummaryStatistic - Abstract grouping for views/classes that provide some kind of count summary about an individual element","title":"Parents"},{"location":"CountOfSubclasses/#attributes","text":"","title":"Attributes"},{"location":"CountOfSubclasses/#inherited-from-rdf-level-summary-statistic","text":"\u279ecount_value OPT range: Integer \u279eelement OPT range: Node","title":"Inherited from rdf level summary statistic:"},{"location":"CountOfSubclasses/#other-properties","text":"Comments: sqlview>> SELECT sc.object AS element, count(distinct sc.subject) AS count_value FROM rdfs_subclass_of_statement AS sc GROUP BY sc.object ORDER BY count_value DESC","title":"Other properties"},{"location":"DeprecatedNode/","text":"Class: DeprecatedNode URI: semsql:DeprecatedNode Parents is_a: Node - The basic unit of representation in an RDF or OWL graph Attributes Inherited from node: id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType Other properties Aliases: deprecated IRI Comments: sqlview>> SELECT DISTINCT subject AS id FROM statements WHERE predicate='owl:deprecated' AND value='true'","title":"Class: DeprecatedNode"},{"location":"DeprecatedNode/#class-deprecatednode","text":"URI: semsql:DeprecatedNode","title":"Class: DeprecatedNode"},{"location":"DeprecatedNode/#parents","text":"is_a: Node - The basic unit of representation in an RDF or OWL graph","title":"Parents"},{"location":"DeprecatedNode/#attributes","text":"","title":"Attributes"},{"location":"DeprecatedNode/#inherited-from-node","text":"id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType","title":"Inherited from node:"},{"location":"DeprecatedNode/#other-properties","text":"Aliases: deprecated IRI Comments: sqlview>> SELECT DISTINCT subject AS id FROM statements WHERE predicate='owl:deprecated' AND value='true'","title":"Other properties"},{"location":"Edge/","text":"Class: Edge A relation graph edge that connects two entities by a predicate. Note an edge is distinct from a statement, in that an axiom such as A SubClassOf R some B is represented as multiple statements, but is a single relation graph edge URI: semsql:Edge Parents is_a: RelationGraphConstruct - A construct used as part of a Relation Graph Attributes Own object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode subject OPT range: Node Other properties Comments: sqlview>> SELECT subject, predicate, object FROM owl_subclass_of_some_values_from UNION SELECT subject, predicate, object FROM rdfs_subclass_of_named_statement In Subsets: base table","title":"Class: Edge"},{"location":"Edge/#class-edge","text":"A relation graph edge that connects two entities by a predicate. Note an edge is distinct from a statement, in that an axiom such as A SubClassOf R some B is represented as multiple statements, but is a single relation graph edge URI: semsql:Edge","title":"Class: Edge"},{"location":"Edge/#parents","text":"is_a: RelationGraphConstruct - A construct used as part of a Relation Graph","title":"Parents"},{"location":"Edge/#attributes","text":"","title":"Attributes"},{"location":"Edge/#own","text":"object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode subject OPT range: Node","title":"Own"},{"location":"Edge/#other-properties","text":"Comments: sqlview>> SELECT subject, predicate, object FROM owl_subclass_of_some_values_from UNION SELECT subject, predicate, object FROM rdfs_subclass_of_named_statement In Subsets: base table","title":"Other properties"},{"location":"EntailedEdge/","text":"Class: EntailedEdge A relation graph edge that is inferred URI: semsql:EntailedEdge Parents is_a: RelationGraphConstruct - A construct used as part of a Relation Graph Attributes Own object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode subject OPT range: Node Other properties Comments: - It is common to populate this via a procedure external to the database, e.g balhoff/relation-graph In Subsets: base table See also: https://github.com/balhoff/relation-graph","title":"Class: EntailedEdge"},{"location":"EntailedEdge/#class-entailededge","text":"A relation graph edge that is inferred URI: semsql:EntailedEdge","title":"Class: EntailedEdge"},{"location":"EntailedEdge/#parents","text":"is_a: RelationGraphConstruct - A construct used as part of a Relation Graph","title":"Parents"},{"location":"EntailedEdge/#attributes","text":"","title":"Attributes"},{"location":"EntailedEdge/#own","text":"object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode subject OPT range: Node","title":"Own"},{"location":"EntailedEdge/#other-properties","text":"Comments: - It is common to populate this via a procedure external to the database, e.g balhoff/relation-graph In Subsets: base table See also: https://github.com/balhoff/relation-graph","title":"Other properties"},{"location":"HasBroadMatchStatement/","text":"Class: HasBroadMatchStatement URI: semsql:HasBroadMatchStatement Parents is_a: HasMatchStatement Attributes Inherited from has match statement: datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='skos:hasBroadMatch' Exact Mappings: skos:hasBroadMatch","title":"Class: HasBroadMatchStatement"},{"location":"HasBroadMatchStatement/#class-hasbroadmatchstatement","text":"URI: semsql:HasBroadMatchStatement","title":"Class: HasBroadMatchStatement"},{"location":"HasBroadMatchStatement/#parents","text":"is_a: HasMatchStatement","title":"Parents"},{"location":"HasBroadMatchStatement/#attributes","text":"","title":"Attributes"},{"location":"HasBroadMatchStatement/#inherited-from-has-match-statement","text":"datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node","title":"Inherited from has match statement:"},{"location":"HasBroadMatchStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='skos:hasBroadMatch' Exact Mappings: skos:hasBroadMatch","title":"Other properties"},{"location":"HasBroadSynonymStatement/","text":"Class: HasBroadSynonymStatement URI: semsql:HasBroadSynonymStatement Parents is_a: HasOioSynonymStatement Attributes Inherited from has oio synonym statement: datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='oio:hasBroadSynonym' Exact Mappings: oio:hasBroadSynonym","title":"Class: HasBroadSynonymStatement"},{"location":"HasBroadSynonymStatement/#class-hasbroadsynonymstatement","text":"URI: semsql:HasBroadSynonymStatement","title":"Class: HasBroadSynonymStatement"},{"location":"HasBroadSynonymStatement/#parents","text":"is_a: HasOioSynonymStatement","title":"Parents"},{"location":"HasBroadSynonymStatement/#attributes","text":"","title":"Attributes"},{"location":"HasBroadSynonymStatement/#inherited-from-has-oio-synonym-statement","text":"datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node","title":"Inherited from has oio synonym statement:"},{"location":"HasBroadSynonymStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='oio:hasBroadSynonym' Exact Mappings: oio:hasBroadSynonym","title":"Other properties"},{"location":"HasDbxrefStatement/","text":"Class: HasDbxrefStatement URI: semsql:HasDbxrefStatement Parents is_a: HasMappingStatement Attributes Inherited from has mapping statement: datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='oio:hasDbXref'","title":"Class: HasDbxrefStatement"},{"location":"HasDbxrefStatement/#class-hasdbxrefstatement","text":"URI: semsql:HasDbxrefStatement","title":"Class: HasDbxrefStatement"},{"location":"HasDbxrefStatement/#parents","text":"is_a: HasMappingStatement","title":"Parents"},{"location":"HasDbxrefStatement/#attributes","text":"","title":"Attributes"},{"location":"HasDbxrefStatement/#inherited-from-has-mapping-statement","text":"datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node","title":"Inherited from has mapping statement:"},{"location":"HasDbxrefStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='oio:hasDbXref'","title":"Other properties"},{"location":"HasExactMatchStatement/","text":"Class: HasExactMatchStatement URI: semsql:HasExactMatchStatement Parents is_a: HasMatchStatement Attributes Inherited from has match statement: datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='skos:hasExactMatch' Exact Mappings: skos:hasExactMatch","title":"Class: HasExactMatchStatement"},{"location":"HasExactMatchStatement/#class-hasexactmatchstatement","text":"URI: semsql:HasExactMatchStatement","title":"Class: HasExactMatchStatement"},{"location":"HasExactMatchStatement/#parents","text":"is_a: HasMatchStatement","title":"Parents"},{"location":"HasExactMatchStatement/#attributes","text":"","title":"Attributes"},{"location":"HasExactMatchStatement/#inherited-from-has-match-statement","text":"datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node","title":"Inherited from has match statement:"},{"location":"HasExactMatchStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='skos:hasExactMatch' Exact Mappings: skos:hasExactMatch","title":"Other properties"},{"location":"HasExactSynonymStatement/","text":"Class: HasExactSynonymStatement URI: semsql:HasExactSynonymStatement Parents is_a: HasOioSynonymStatement Attributes Inherited from has oio synonym statement: datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='oio:hasExactSynonym' Exact Mappings: oio:hasExactSynonym","title":"Class: HasExactSynonymStatement"},{"location":"HasExactSynonymStatement/#class-hasexactsynonymstatement","text":"URI: semsql:HasExactSynonymStatement","title":"Class: HasExactSynonymStatement"},{"location":"HasExactSynonymStatement/#parents","text":"is_a: HasOioSynonymStatement","title":"Parents"},{"location":"HasExactSynonymStatement/#attributes","text":"","title":"Attributes"},{"location":"HasExactSynonymStatement/#inherited-from-has-oio-synonym-statement","text":"datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node","title":"Inherited from has oio synonym statement:"},{"location":"HasExactSynonymStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='oio:hasExactSynonym' Exact Mappings: oio:hasExactSynonym","title":"Other properties"},{"location":"HasMappingStatement/","text":"Class: HasMappingStatement URI: semsql:HasMappingStatement Parents is_a: NodeToValueStatement - A statement where value is non-null and object is not populated Children HasDbxrefStatement Referenced by class Attributes Inherited from node to value statement: datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node","title":"Class: HasMappingStatement"},{"location":"HasMappingStatement/#class-hasmappingstatement","text":"URI: semsql:HasMappingStatement","title":"Class: HasMappingStatement"},{"location":"HasMappingStatement/#parents","text":"is_a: NodeToValueStatement - A statement where value is non-null and object is not populated","title":"Parents"},{"location":"HasMappingStatement/#children","text":"HasDbxrefStatement","title":"Children"},{"location":"HasMappingStatement/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"HasMappingStatement/#attributes","text":"","title":"Attributes"},{"location":"HasMappingStatement/#inherited-from-node-to-value-statement","text":"datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node","title":"Inherited from node to value statement:"},{"location":"HasMatchStatement/","text":"Class: HasMatchStatement URI: semsql:HasMatchStatement Parents is_a: NodeToValueStatement - A statement where value is non-null and object is not populated Children HasBroadMatchStatement HasExactMatchStatement HasNarrowMatchStatement HasRelatedMatchStatement Referenced by class Attributes Inherited from node to value statement: datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node","title":"Class: HasMatchStatement"},{"location":"HasMatchStatement/#class-hasmatchstatement","text":"URI: semsql:HasMatchStatement","title":"Class: HasMatchStatement"},{"location":"HasMatchStatement/#parents","text":"is_a: NodeToValueStatement - A statement where value is non-null and object is not populated","title":"Parents"},{"location":"HasMatchStatement/#children","text":"HasBroadMatchStatement HasExactMatchStatement HasNarrowMatchStatement HasRelatedMatchStatement","title":"Children"},{"location":"HasMatchStatement/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"HasMatchStatement/#attributes","text":"","title":"Attributes"},{"location":"HasMatchStatement/#inherited-from-node-to-value-statement","text":"datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node","title":"Inherited from node to value statement:"},{"location":"HasNarrowMatchStatement/","text":"Class: HasNarrowMatchStatement URI: semsql:HasNarrowMatchStatement Parents is_a: HasMatchStatement Attributes Inherited from has match statement: datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='skos:hasNarrowMatch' Exact Mappings: skos:hasNarrowMatch","title":"Class: HasNarrowMatchStatement"},{"location":"HasNarrowMatchStatement/#class-hasnarrowmatchstatement","text":"URI: semsql:HasNarrowMatchStatement","title":"Class: HasNarrowMatchStatement"},{"location":"HasNarrowMatchStatement/#parents","text":"is_a: HasMatchStatement","title":"Parents"},{"location":"HasNarrowMatchStatement/#attributes","text":"","title":"Attributes"},{"location":"HasNarrowMatchStatement/#inherited-from-has-match-statement","text":"datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node","title":"Inherited from has match statement:"},{"location":"HasNarrowMatchStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='skos:hasNarrowMatch' Exact Mappings: skos:hasNarrowMatch","title":"Other properties"},{"location":"HasNarrowSynonymStatement/","text":"Class: HasNarrowSynonymStatement URI: semsql:HasNarrowSynonymStatement Parents is_a: HasOioSynonymStatement Attributes Inherited from has oio synonym statement: datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='oio:hasNarrowSynonym' Exact Mappings: oio:hasNarrowSynonym","title":"Class: HasNarrowSynonymStatement"},{"location":"HasNarrowSynonymStatement/#class-hasnarrowsynonymstatement","text":"URI: semsql:HasNarrowSynonymStatement","title":"Class: HasNarrowSynonymStatement"},{"location":"HasNarrowSynonymStatement/#parents","text":"is_a: HasOioSynonymStatement","title":"Parents"},{"location":"HasNarrowSynonymStatement/#attributes","text":"","title":"Attributes"},{"location":"HasNarrowSynonymStatement/#inherited-from-has-oio-synonym-statement","text":"datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node","title":"Inherited from has oio synonym statement:"},{"location":"HasNarrowSynonymStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='oio:hasNarrowSynonym' Exact Mappings: oio:hasNarrowSynonym","title":"Other properties"},{"location":"HasOioSynonymStatement/","text":"Class: HasOioSynonymStatement URI: semsql:HasOioSynonymStatement Parents is_a: NodeToValueStatement - A statement where value is non-null and object is not populated Children HasBroadSynonymStatement HasExactSynonymStatement HasNarrowSynonymStatement HasRelatedSynonymStatement Referenced by class Attributes Inherited from node to value statement: datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node","title":"Class: HasOioSynonymStatement"},{"location":"HasOioSynonymStatement/#class-hasoiosynonymstatement","text":"URI: semsql:HasOioSynonymStatement","title":"Class: HasOioSynonymStatement"},{"location":"HasOioSynonymStatement/#parents","text":"is_a: NodeToValueStatement - A statement where value is non-null and object is not populated","title":"Parents"},{"location":"HasOioSynonymStatement/#children","text":"HasBroadSynonymStatement HasExactSynonymStatement HasNarrowSynonymStatement HasRelatedSynonymStatement","title":"Children"},{"location":"HasOioSynonymStatement/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"HasOioSynonymStatement/#attributes","text":"","title":"Attributes"},{"location":"HasOioSynonymStatement/#inherited-from-node-to-value-statement","text":"datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node","title":"Inherited from node to value statement:"},{"location":"HasRelatedMatchStatement/","text":"Class: HasRelatedMatchStatement URI: semsql:HasRelatedMatchStatement Parents is_a: HasMatchStatement Attributes Inherited from has match statement: datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='skos:hasRelatedMatch' Exact Mappings: skos:hasRelatedMatch","title":"Class: HasRelatedMatchStatement"},{"location":"HasRelatedMatchStatement/#class-hasrelatedmatchstatement","text":"URI: semsql:HasRelatedMatchStatement","title":"Class: HasRelatedMatchStatement"},{"location":"HasRelatedMatchStatement/#parents","text":"is_a: HasMatchStatement","title":"Parents"},{"location":"HasRelatedMatchStatement/#attributes","text":"","title":"Attributes"},{"location":"HasRelatedMatchStatement/#inherited-from-has-match-statement","text":"datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node","title":"Inherited from has match statement:"},{"location":"HasRelatedMatchStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='skos:hasRelatedMatch' Exact Mappings: skos:hasRelatedMatch","title":"Other properties"},{"location":"HasRelatedSynonymStatement/","text":"Class: HasRelatedSynonymStatement URI: semsql:HasRelatedSynonymStatement Parents is_a: HasOioSynonymStatement Attributes Inherited from has oio synonym statement: datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='oio:hasRelatedSynonym' Exact Mappings: oio:hasRelatedSynonym","title":"Class: HasRelatedSynonymStatement"},{"location":"HasRelatedSynonymStatement/#class-hasrelatedsynonymstatement","text":"URI: semsql:HasRelatedSynonymStatement","title":"Class: HasRelatedSynonymStatement"},{"location":"HasRelatedSynonymStatement/#parents","text":"is_a: HasOioSynonymStatement","title":"Parents"},{"location":"HasRelatedSynonymStatement/#attributes","text":"","title":"Attributes"},{"location":"HasRelatedSynonymStatement/#inherited-from-has-oio-synonym-statement","text":"datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node","title":"Inherited from has oio synonym statement:"},{"location":"HasRelatedSynonymStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='oio:hasRelatedSynonym' Exact Mappings: oio:hasRelatedSynonym","title":"Other properties"},{"location":"HasSynonymStatement/","text":"Class: HasSynonymStatement URI: semsql:HasSynonymStatement Parents is_a: NodeToValueStatement - A statement where value is non-null and object is not populated Attributes Inherited from node to value statement: datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node","title":"Class: HasSynonymStatement"},{"location":"HasSynonymStatement/#class-hassynonymstatement","text":"URI: semsql:HasSynonymStatement","title":"Class: HasSynonymStatement"},{"location":"HasSynonymStatement/#parents","text":"is_a: NodeToValueStatement - A statement where value is non-null and object is not populated","title":"Parents"},{"location":"HasSynonymStatement/#attributes","text":"","title":"Attributes"},{"location":"HasSynonymStatement/#inherited-from-node-to-value-statement","text":"datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node","title":"Inherited from node to value statement:"},{"location":"HasTextDefinitionStatement/","text":"Class: HasTextDefinitionStatement URI: semsql:HasTextDefinitionStatement Parents is_a: NodeToValueStatement - A statement where value is non-null and object is not populated Attributes Inherited from node to value statement: datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='IAO:0000115'","title":"Class: HasTextDefinitionStatement"},{"location":"HasTextDefinitionStatement/#class-hastextdefinitionstatement","text":"URI: semsql:HasTextDefinitionStatement","title":"Class: HasTextDefinitionStatement"},{"location":"HasTextDefinitionStatement/#parents","text":"is_a: NodeToValueStatement - A statement where value is non-null and object is not populated","title":"Parents"},{"location":"HasTextDefinitionStatement/#attributes","text":"","title":"Attributes"},{"location":"HasTextDefinitionStatement/#inherited-from-node-to-value-statement","text":"datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node","title":"Inherited from node to value statement:"},{"location":"HasTextDefinitionStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='IAO:0000115'","title":"Other properties"},{"location":"IndividualTrait/","text":"Class: IndividualTrait URI: semsql:IndividualTrait Parents is_a: NodeTrait - abstract groupings/properties for different aspects of the model Mixin for AnonymousIndividualExpression (mixin) Referenced by class Attributes","title":"Class: IndividualTrait"},{"location":"IndividualTrait/#class-individualtrait","text":"URI: semsql:IndividualTrait","title":"Class: IndividualTrait"},{"location":"IndividualTrait/#parents","text":"is_a: NodeTrait - abstract groupings/properties for different aspects of the model","title":"Parents"},{"location":"IndividualTrait/#mixin-for","text":"AnonymousIndividualExpression (mixin)","title":"Mixin for"},{"location":"IndividualTrait/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"IndividualTrait/#attributes","text":"","title":"Attributes"},{"location":"IriNode/","text":"Class: IriNode URI: semsql:IriNode Parents is_a: Node - The basic unit of representation in an RDF or OWL graph Referenced by class Attributes Own iri node\u279eid REQ range: NodeIdType Other properties Aliases: IRI named entity Comments: sqlview>> SELECT * FROM node WHERE id NOT LIKE '_:%'","title":"Class: IriNode"},{"location":"IriNode/#class-irinode","text":"URI: semsql:IriNode","title":"Class: IriNode"},{"location":"IriNode/#parents","text":"is_a: Node - The basic unit of representation in an RDF or OWL graph","title":"Parents"},{"location":"IriNode/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"IriNode/#attributes","text":"","title":"Attributes"},{"location":"IriNode/#own","text":"iri node\u279eid REQ range: NodeIdType","title":"Own"},{"location":"IriNode/#other-properties","text":"Aliases: IRI named entity Comments: sqlview>> SELECT * FROM node WHERE id NOT LIKE '_:%'","title":"Other properties"},{"location":"IrreflexivePropertyNode/","text":"Class: IrreflexivePropertyNode A node representing an OWL irreflexive object property URI: semsql:IrreflexivePropertyNode Parents is_a: ObjectPropertyNode - A node representing an OWL object property Attributes Inherited from object property node: id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType Other properties Comments: sqlview>> SELECT DISTINCT subject AS id FROM rdf_type_statement WHERE object='owl:ReflexiveProperty'","title":"Class: IrreflexivePropertyNode"},{"location":"IrreflexivePropertyNode/#class-irreflexivepropertynode","text":"A node representing an OWL irreflexive object property URI: semsql:IrreflexivePropertyNode","title":"Class: IrreflexivePropertyNode"},{"location":"IrreflexivePropertyNode/#parents","text":"is_a: ObjectPropertyNode - A node representing an OWL object property","title":"Parents"},{"location":"IrreflexivePropertyNode/#attributes","text":"","title":"Attributes"},{"location":"IrreflexivePropertyNode/#inherited-from-object-property-node","text":"id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType","title":"Inherited from object property node:"},{"location":"IrreflexivePropertyNode/#other-properties","text":"Comments: sqlview>> SELECT DISTINCT subject AS id FROM rdf_type_statement WHERE object='owl:ReflexiveProperty'","title":"Other properties"},{"location":"IsReport/","text":"Class: IsReport Used to describe classes/views that have a reporting function URI: semsql:IsReport Mixin for RdfLevelSummaryStatistic (mixin) - Abstract grouping for views/classes that provide some kind of count summary about an individual element Referenced by class Attributes","title":"Class: IsReport"},{"location":"IsReport/#class-isreport","text":"Used to describe classes/views that have a reporting function URI: semsql:IsReport","title":"Class: IsReport"},{"location":"IsReport/#mixin-for","text":"RdfLevelSummaryStatistic (mixin) - Abstract grouping for views/classes that provide some kind of count summary about an individual element","title":"Mixin for"},{"location":"IsReport/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"IsReport/#attributes","text":"","title":"Attributes"},{"location":"LexicalProblem/","text":"Class: LexicalProblem a problem with the textual value of an annotation property URI: semsql:LexicalProblem Parents is_a: Problem - Represents an instance of a problem pertaining to conformance to OBO guidelines Attributes Inherited from problem: problem\u279epredicate OPT Description: The property of the thing that is problematic range: PropertyNode problem\u279esubject OPT Description: The thing that is problematic range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Class: LexicalProblem"},{"location":"LexicalProblem/#class-lexicalproblem","text":"a problem with the textual value of an annotation property URI: semsql:LexicalProblem","title":"Class: LexicalProblem"},{"location":"LexicalProblem/#parents","text":"is_a: Problem - Represents an instance of a problem pertaining to conformance to OBO guidelines","title":"Parents"},{"location":"LexicalProblem/#attributes","text":"","title":"Attributes"},{"location":"LexicalProblem/#inherited-from-problem","text":"problem\u279epredicate OPT Description: The property of the thing that is problematic range: PropertyNode problem\u279esubject OPT Description: The thing that is problematic range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Inherited from problem:"},{"location":"NamedIndividualNode/","text":"Class: NamedIndividualNode A node that represents an OWL Named Individual URI: semsql:NamedIndividualNode Parents is_a: Node - The basic unit of representation in an RDF or OWL graph Referenced by class OwlSameAsStatement owl same as statement\u279eobject REQ NamedIndividualNode OwlSameAsStatement owl same as statement\u279esubject OPT NamedIndividualNode Attributes Inherited from node: id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType Other properties Mappings: owl:NamedIndividual Comments: sqlview>> SELECT distinct subject AS id from rdf_type_statement WHERE object = 'owl:NamedIndividual';","title":"Class: NamedIndividualNode"},{"location":"NamedIndividualNode/#class-namedindividualnode","text":"A node that represents an OWL Named Individual URI: semsql:NamedIndividualNode","title":"Class: NamedIndividualNode"},{"location":"NamedIndividualNode/#parents","text":"is_a: Node - The basic unit of representation in an RDF or OWL graph","title":"Parents"},{"location":"NamedIndividualNode/#referenced-by-class","text":"OwlSameAsStatement owl same as statement\u279eobject REQ NamedIndividualNode OwlSameAsStatement owl same as statement\u279esubject OPT NamedIndividualNode","title":"Referenced by class"},{"location":"NamedIndividualNode/#attributes","text":"","title":"Attributes"},{"location":"NamedIndividualNode/#inherited-from-node","text":"id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType","title":"Inherited from node:"},{"location":"NamedIndividualNode/#other-properties","text":"Mappings: owl:NamedIndividual Comments: sqlview>> SELECT distinct subject AS id from rdf_type_statement WHERE object = 'owl:NamedIndividual';","title":"Other properties"},{"location":"Node/","text":"Class: Node The basic unit of representation in an RDF or OWL graph URI: semsql:Node Children BlankNode - A node with an ID that is not preserved between databases ClassNode - A node that represents an RDFS/OWL class DeprecatedNode IriNode NamedIndividualNode - A node that represents an OWL Named Individual OntologyNode - A node representing an ontology PropertyNode - Note this only directly classifies nodes asserted to be rdf:Properties Referenced by class None anchor object OPT Node NodeToNodeStatement node to node statement\u279eobject REQ Node None object OPT Node None on property OPT Node OwlEquivalentToIntersectionMember owl equivalent to intersection member\u279eobject OPT Node OwlEquivalentToIntersectionMember owl equivalent to intersection member\u279esubject OPT Node OwlSubclassOfSomeValuesFrom owl subclass of some values from\u279eobject OPT Node OwlSubclassOfSomeValuesFrom owl subclass of some values from\u279esubject OPT Node Problem problem\u279esubject OPT Node None \u279eelement OPT Node RepairAction repair action\u279esubject OPT Node None stanza OPT Node SubgraphEdgeByAncestor subgraph edge by ancestor\u279eanchor object OPT Node SubgraphEdgeByChild subgraph edge by child\u279eanchor object OPT Node SubgraphEdgeByDescendant subgraph edge by descendant\u279eanchor object OPT Node SubgraphEdgeByParent subgraph edge by parent\u279eanchor object OPT Node SubgraphQuery subgraph query\u279eanchor object OPT Node SubgraphQuery subgraph query\u279eobject OPT Node SubgraphQuery subgraph query\u279esubject OPT Node None subject OPT Node Attributes Own id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType Other properties Aliases: object resource Comments: sqlview>> SELECT distinct(subject) AS id FROM statements UNION SELECT distinct(object) AS id FROM statements WHERE datatype IS NOT NULL Exact Mappings: rdf:Resource","title":"Class: Node"},{"location":"Node/#class-node","text":"The basic unit of representation in an RDF or OWL graph URI: semsql:Node","title":"Class: Node"},{"location":"Node/#children","text":"BlankNode - A node with an ID that is not preserved between databases ClassNode - A node that represents an RDFS/OWL class DeprecatedNode IriNode NamedIndividualNode - A node that represents an OWL Named Individual OntologyNode - A node representing an ontology PropertyNode - Note this only directly classifies nodes asserted to be rdf:Properties","title":"Children"},{"location":"Node/#referenced-by-class","text":"None anchor object OPT Node NodeToNodeStatement node to node statement\u279eobject REQ Node None object OPT Node None on property OPT Node OwlEquivalentToIntersectionMember owl equivalent to intersection member\u279eobject OPT Node OwlEquivalentToIntersectionMember owl equivalent to intersection member\u279esubject OPT Node OwlSubclassOfSomeValuesFrom owl subclass of some values from\u279eobject OPT Node OwlSubclassOfSomeValuesFrom owl subclass of some values from\u279esubject OPT Node Problem problem\u279esubject OPT Node None \u279eelement OPT Node RepairAction repair action\u279esubject OPT Node None stanza OPT Node SubgraphEdgeByAncestor subgraph edge by ancestor\u279eanchor object OPT Node SubgraphEdgeByChild subgraph edge by child\u279eanchor object OPT Node SubgraphEdgeByDescendant subgraph edge by descendant\u279eanchor object OPT Node SubgraphEdgeByParent subgraph edge by parent\u279eanchor object OPT Node SubgraphQuery subgraph query\u279eanchor object OPT Node SubgraphQuery subgraph query\u279eobject OPT Node SubgraphQuery subgraph query\u279esubject OPT Node None subject OPT Node","title":"Referenced by class"},{"location":"Node/#attributes","text":"","title":"Attributes"},{"location":"Node/#own","text":"id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType","title":"Own"},{"location":"Node/#other-properties","text":"Aliases: object resource Comments: sqlview>> SELECT distinct(subject) AS id FROM statements UNION SELECT distinct(object) AS id FROM statements WHERE datatype IS NOT NULL Exact Mappings: rdf:Resource","title":"Other properties"},{"location":"NodeToNodeStatement/","text":"Class: NodeToNodeStatement A statement where object is non-null and value is not populated URI: semsql:NodeToNodeStatement Parents is_a: Statements - Represents an RDF triple Children OwlComplementOfStatement OwlDisjointClassStatement OwlEquivalentClassStatement - A statement that connects two class nodes where both classes are equivalent OwlImportsStatement OwlInverseOfStatement OwlSameAsStatement - A statement that connects two individual nodes where both individual are equivalent RdfTypeStatement - A statement that indicates the asserted type of the subject entity RdfsDomainStatement RdfsRangeStatement RdfsSubclassOfStatement RdfsSubpropertyOfStatement Referenced by class Attributes Own node to node statement\u279eobject REQ range: Node Inherited from statements: datatype OPT range: String language OPT range: String predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType Other properties Comments: sqlview>> SELECT * FROM statements WHERE object IS NOT NULL","title":"Class: NodeToNodeStatement"},{"location":"NodeToNodeStatement/#class-nodetonodestatement","text":"A statement where object is non-null and value is not populated URI: semsql:NodeToNodeStatement","title":"Class: NodeToNodeStatement"},{"location":"NodeToNodeStatement/#parents","text":"is_a: Statements - Represents an RDF triple","title":"Parents"},{"location":"NodeToNodeStatement/#children","text":"OwlComplementOfStatement OwlDisjointClassStatement OwlEquivalentClassStatement - A statement that connects two class nodes where both classes are equivalent OwlImportsStatement OwlInverseOfStatement OwlSameAsStatement - A statement that connects two individual nodes where both individual are equivalent RdfTypeStatement - A statement that indicates the asserted type of the subject entity RdfsDomainStatement RdfsRangeStatement RdfsSubclassOfStatement RdfsSubpropertyOfStatement","title":"Children"},{"location":"NodeToNodeStatement/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"NodeToNodeStatement/#attributes","text":"","title":"Attributes"},{"location":"NodeToNodeStatement/#own","text":"node to node statement\u279eobject REQ range: Node","title":"Own"},{"location":"NodeToNodeStatement/#inherited-from-statements","text":"datatype OPT range: String language OPT range: String predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Inherited from statements:"},{"location":"NodeToNodeStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE object IS NOT NULL","title":"Other properties"},{"location":"NodeToValueStatement/","text":"Class: NodeToValueStatement A statement where value is non-null and object is not populated URI: semsql:NodeToValueStatement Parents is_a: Statements - Represents an RDF triple Children HasMappingStatement HasMatchStatement HasOioSynonymStatement HasSynonymStatement HasTextDefinitionStatement OntologyStatusStatement RdfsLabelStatement Referenced by class Attributes Own node to value statement\u279evalue REQ range: LiteralAsStringType Inherited from statements: datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node Other properties Comments: sqlview>> SELECT * FROM statements WHERE value IS NOT NULL","title":"Class: NodeToValueStatement"},{"location":"NodeToValueStatement/#class-nodetovaluestatement","text":"A statement where value is non-null and object is not populated URI: semsql:NodeToValueStatement","title":"Class: NodeToValueStatement"},{"location":"NodeToValueStatement/#parents","text":"is_a: Statements - Represents an RDF triple","title":"Parents"},{"location":"NodeToValueStatement/#children","text":"HasMappingStatement HasMatchStatement HasOioSynonymStatement HasSynonymStatement HasTextDefinitionStatement OntologyStatusStatement RdfsLabelStatement","title":"Children"},{"location":"NodeToValueStatement/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"NodeToValueStatement/#attributes","text":"","title":"Attributes"},{"location":"NodeToValueStatement/#own","text":"node to value statement\u279evalue REQ range: LiteralAsStringType","title":"Own"},{"location":"NodeToValueStatement/#inherited-from-statements","text":"datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node","title":"Inherited from statements:"},{"location":"NodeToValueStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE value IS NOT NULL","title":"Other properties"},{"location":"NodeTrait/","text":"Class: NodeTrait abstract groupings/properties for different aspects of the model URI: semsql:NodeTrait Children ClassTrait IndividualTrait PropertyTrait Referenced by class Attributes","title":"Class: NodeTrait"},{"location":"NodeTrait/#class-nodetrait","text":"abstract groupings/properties for different aspects of the model URI: semsql:NodeTrait","title":"Class: NodeTrait"},{"location":"NodeTrait/#children","text":"ClassTrait IndividualTrait PropertyTrait","title":"Children"},{"location":"NodeTrait/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"NodeTrait/#attributes","text":"","title":"Attributes"},{"location":"NodeWithTwoLabelsProblem/","text":"Class: NodeWithTwoLabelsProblem URI: semsql:NodeWithTwoLabelsProblem Parents is_a: Problem - Represents an instance of a problem pertaining to conformance to OBO guidelines Attributes Own \u279elabel1 OPT range: String \u279elabel2 OPT range: String Inherited from problem: problem\u279epredicate OPT Description: The property of the thing that is problematic range: PropertyNode problem\u279esubject OPT Description: The thing that is problematic range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType Other properties Comments: sqlview>> SELECT s1.subject, s1.predicate, s1.value FROM rdfs_label_statement AS s1, rdfs_label_statement AS s2 WHERE s1.subject=s2.subject AND s1.value != s2.value","title":"Class: NodeWithTwoLabelsProblem"},{"location":"NodeWithTwoLabelsProblem/#class-nodewithtwolabelsproblem","text":"URI: semsql:NodeWithTwoLabelsProblem","title":"Class: NodeWithTwoLabelsProblem"},{"location":"NodeWithTwoLabelsProblem/#parents","text":"is_a: Problem - Represents an instance of a problem pertaining to conformance to OBO guidelines","title":"Parents"},{"location":"NodeWithTwoLabelsProblem/#attributes","text":"","title":"Attributes"},{"location":"NodeWithTwoLabelsProblem/#own","text":"\u279elabel1 OPT range: String \u279elabel2 OPT range: String","title":"Own"},{"location":"NodeWithTwoLabelsProblem/#inherited-from-problem","text":"problem\u279epredicate OPT Description: The property of the thing that is problematic range: PropertyNode problem\u279esubject OPT Description: The thing that is problematic range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Inherited from problem:"},{"location":"NodeWithTwoLabelsProblem/#other-properties","text":"Comments: sqlview>> SELECT s1.subject, s1.predicate, s1.value FROM rdfs_label_statement AS s1, rdfs_label_statement AS s2 WHERE s1.subject=s2.subject AND s1.value != s2.value","title":"Other properties"},{"location":"ObjectPropertyNode/","text":"Class: ObjectPropertyNode A node representing an OWL object property URI: semsql:ObjectPropertyNode Parents is_a: PropertyNode - Note this only directly classifies nodes asserted to be rdf:Properties Children AsymmetricPropertyNode IrreflexivePropertyNode - A node representing an OWL irreflexive object property ReflexivePropertyNode - A node representing an OWL reflexive object property SymmetricPropertyNode - A node representing an OWL symmetric object property TransitivePropertyNode - A node representing an OWL transitive object property Referenced by class Attributes Inherited from property node: id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType Other properties Comments: sqlview>> SELECT DISTINCT subject AS id FROM rdf_type_statement WHERE object='owl:ObjectProperty' See also: https://www.w3.org/TR/owl2-syntax/#Object_Properties","title":"Class: ObjectPropertyNode"},{"location":"ObjectPropertyNode/#class-objectpropertynode","text":"A node representing an OWL object property URI: semsql:ObjectPropertyNode","title":"Class: ObjectPropertyNode"},{"location":"ObjectPropertyNode/#parents","text":"is_a: PropertyNode - Note this only directly classifies nodes asserted to be rdf:Properties","title":"Parents"},{"location":"ObjectPropertyNode/#children","text":"AsymmetricPropertyNode IrreflexivePropertyNode - A node representing an OWL irreflexive object property ReflexivePropertyNode - A node representing an OWL reflexive object property SymmetricPropertyNode - A node representing an OWL symmetric object property TransitivePropertyNode - A node representing an OWL transitive object property","title":"Children"},{"location":"ObjectPropertyNode/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"ObjectPropertyNode/#attributes","text":"","title":"Attributes"},{"location":"ObjectPropertyNode/#inherited-from-property-node","text":"id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType","title":"Inherited from property node:"},{"location":"ObjectPropertyNode/#other-properties","text":"Comments: sqlview>> SELECT DISTINCT subject AS id FROM rdf_type_statement WHERE object='owl:ObjectProperty' See also: https://www.w3.org/TR/owl2-syntax/#Object_Properties","title":"Other properties"},{"location":"OntologyNode/","text":"Class: OntologyNode A node representing an ontology URI: semsql:OntologyNode Parents is_a: Node - The basic unit of representation in an RDF or OWL graph Attributes Inherited from node: id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType Other properties Comments: sqlview>> SELECT DISTINCT subject AS id FROM rdf_type_statement WHERE object='owl:Ontology' See also: https://www.w3.org/TR/owl2-syntax/#Ontologies","title":"Class: OntologyNode"},{"location":"OntologyNode/#class-ontologynode","text":"A node representing an ontology URI: semsql:OntologyNode","title":"Class: OntologyNode"},{"location":"OntologyNode/#parents","text":"is_a: Node - The basic unit of representation in an RDF or OWL graph","title":"Parents"},{"location":"OntologyNode/#attributes","text":"","title":"Attributes"},{"location":"OntologyNode/#inherited-from-node","text":"id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType","title":"Inherited from node:"},{"location":"OntologyNode/#other-properties","text":"Comments: sqlview>> SELECT DISTINCT subject AS id FROM rdf_type_statement WHERE object='owl:Ontology' See also: https://www.w3.org/TR/owl2-syntax/#Ontologies","title":"Other properties"},{"location":"OntologyStatusStatement/","text":"Class: OntologyStatusStatement URI: semsql:OntologyStatusStatement Parents is_a: NodeToValueStatement - A statement where value is non-null and object is not populated Attributes Inherited from node to value statement: datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate = ' http://obofoundry.github.io/vocabulary/activity_status ' sqlview>> SELECT * FROM statements WHERE predicate = 'pav:status'","title":"Class: OntologyStatusStatement"},{"location":"OntologyStatusStatement/#class-ontologystatusstatement","text":"URI: semsql:OntologyStatusStatement","title":"Class: OntologyStatusStatement"},{"location":"OntologyStatusStatement/#parents","text":"is_a: NodeToValueStatement - A statement where value is non-null and object is not populated","title":"Parents"},{"location":"OntologyStatusStatement/#attributes","text":"","title":"Attributes"},{"location":"OntologyStatusStatement/#inherited-from-node-to-value-statement","text":"datatype OPT range: String language OPT range: String node to value statement\u279evalue REQ range: LiteralAsStringType object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node","title":"Inherited from node to value statement:"},{"location":"OntologyStatusStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate = ' http://obofoundry.github.io/vocabulary/activity_status ' sqlview>> SELECT * FROM statements WHERE predicate = 'pav:status'","title":"Other properties"},{"location":"OwlAllValuesFrom/","text":"Class: OwlAllValuesFrom URI: semsql:OwlAllValuesFrom Parents is_a: OwlRestriction - An OWL restriction, such as SomeValuesFrom(partOf Hand) Attributes Inherited from owl restriction: filler OPT range: ClassNode on property OPT range: Node owl restriction\u279eid REQ Description: the id of the restriction range: NodeIdType Other properties Aliases: universal restriction Comments: sqlview>> SELECT onProperty.subject AS id, onProperty.object AS on_property, f.object AS filler FROM statements AS onProperty, statements AS f WHERE onProperty.predicate = 'owl:onProperty' AND onProperty.subject=f.subject AND f.predicate='owl:allValuesFrom'","title":"Class: OwlAllValuesFrom"},{"location":"OwlAllValuesFrom/#class-owlallvaluesfrom","text":"URI: semsql:OwlAllValuesFrom","title":"Class: OwlAllValuesFrom"},{"location":"OwlAllValuesFrom/#parents","text":"is_a: OwlRestriction - An OWL restriction, such as SomeValuesFrom(partOf Hand)","title":"Parents"},{"location":"OwlAllValuesFrom/#attributes","text":"","title":"Attributes"},{"location":"OwlAllValuesFrom/#inherited-from-owl-restriction","text":"filler OPT range: ClassNode on property OPT range: Node owl restriction\u279eid REQ Description: the id of the restriction range: NodeIdType","title":"Inherited from owl restriction:"},{"location":"OwlAllValuesFrom/#other-properties","text":"Aliases: universal restriction Comments: sqlview>> SELECT onProperty.subject AS id, onProperty.object AS on_property, f.object AS filler FROM statements AS onProperty, statements AS f WHERE onProperty.predicate = 'owl:onProperty' AND onProperty.subject=f.subject AND f.predicate='owl:allValuesFrom'","title":"Other properties"},{"location":"OwlAxiom/","text":"Class: OwlAxiom URI: semsql:OwlAxiom Parents is_a: Statements - Represents an RDF triple Attributes Own id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType Inherited from statements: datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType Other properties Comments: sqlview>> SELECT * FROM owl_reified_axiom UNION SELECT NULL AS id, * FROM statements","title":"Class: OwlAxiom"},{"location":"OwlAxiom/#class-owlaxiom","text":"URI: semsql:OwlAxiom","title":"Class: OwlAxiom"},{"location":"OwlAxiom/#parents","text":"is_a: Statements - Represents an RDF triple","title":"Parents"},{"location":"OwlAxiom/#attributes","text":"","title":"Attributes"},{"location":"OwlAxiom/#own","text":"id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType","title":"Own"},{"location":"OwlAxiom/#inherited-from-statements","text":"datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Inherited from statements:"},{"location":"OwlAxiom/#other-properties","text":"Comments: sqlview>> SELECT * FROM owl_reified_axiom UNION SELECT NULL AS id, * FROM statements","title":"Other properties"},{"location":"OwlAxiomAnnotation/","text":"Class: OwlAxiomAnnotation URI: semsql:OwlAxiomAnnotation Parents is_a: Statements - Represents an RDF triple Children AxiomDbxrefAnnotation Referenced by class Attributes Own axiom datatype OPT range: String axiom language OPT range: String axiom object OPT range: String axiom predicate OPT range: String axiom value OPT range: String Inherited from statements: datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType Other properties Comments: sqlview>> SELECT axpv.stanza AS stanza, axs.object AS subject, axp.object AS predicate, axo.object AS object, axo.value AS value, axo.datatype AS datatype, axo.language AS language, axpv.subject AS id, axpv.predicate AS annotation_predicate, axpv.object AS annotation_iri, axpv.value AS annotation_value, axpv.language AS annotation_language, axpv.datatype AS annotation_datatype FROM statements AS axs, statements AS axp, statements AS axo, statements AS axpv WHERE axs.predicate = 'owl:annotatedSource' AND axp.predicate = 'owl:annotatedProperty' AND axo.predicate = 'owl:annotatedTarget' AND axs.subject = axpv.subject AND axp.subject = axpv.subject AND axo.subject = axpv.subject AND axpv.predicate NOT IN ('owl:annotatedSource', 'owl:annotatedProperty', 'owl:annotatedTarget', 'rdf:type');","title":"Class: OwlAxiomAnnotation"},{"location":"OwlAxiomAnnotation/#class-owlaxiomannotation","text":"URI: semsql:OwlAxiomAnnotation","title":"Class: OwlAxiomAnnotation"},{"location":"OwlAxiomAnnotation/#parents","text":"is_a: Statements - Represents an RDF triple","title":"Parents"},{"location":"OwlAxiomAnnotation/#children","text":"AxiomDbxrefAnnotation","title":"Children"},{"location":"OwlAxiomAnnotation/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"OwlAxiomAnnotation/#attributes","text":"","title":"Attributes"},{"location":"OwlAxiomAnnotation/#own","text":"axiom datatype OPT range: String axiom language OPT range: String axiom object OPT range: String axiom predicate OPT range: String axiom value OPT range: String","title":"Own"},{"location":"OwlAxiomAnnotation/#inherited-from-statements","text":"datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Inherited from statements:"},{"location":"OwlAxiomAnnotation/#other-properties","text":"Comments: sqlview>> SELECT axpv.stanza AS stanza, axs.object AS subject, axp.object AS predicate, axo.object AS object, axo.value AS value, axo.datatype AS datatype, axo.language AS language, axpv.subject AS id, axpv.predicate AS annotation_predicate, axpv.object AS annotation_iri, axpv.value AS annotation_value, axpv.language AS annotation_language, axpv.datatype AS annotation_datatype FROM statements AS axs, statements AS axp, statements AS axo, statements AS axpv WHERE axs.predicate = 'owl:annotatedSource' AND axp.predicate = 'owl:annotatedProperty' AND axo.predicate = 'owl:annotatedTarget' AND axs.subject = axpv.subject AND axp.subject = axpv.subject AND axo.subject = axpv.subject AND axpv.predicate NOT IN ('owl:annotatedSource', 'owl:annotatedProperty', 'owl:annotatedTarget', 'rdf:type');","title":"Other properties"},{"location":"OwlComplementOfStatement/","text":"Class: OwlComplementOfStatement URI: semsql:OwlComplementOfStatement Parents is_a: NodeToNodeStatement - A statement where object is non-null and value is not populated Attributes Inherited from node to node statement: datatype OPT range: String language OPT range: String node to node statement\u279eobject REQ range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='owl:complementOf'","title":"Class: OwlComplementOfStatement"},{"location":"OwlComplementOfStatement/#class-owlcomplementofstatement","text":"URI: semsql:OwlComplementOfStatement","title":"Class: OwlComplementOfStatement"},{"location":"OwlComplementOfStatement/#parents","text":"is_a: NodeToNodeStatement - A statement where object is non-null and value is not populated","title":"Parents"},{"location":"OwlComplementOfStatement/#attributes","text":"","title":"Attributes"},{"location":"OwlComplementOfStatement/#inherited-from-node-to-node-statement","text":"datatype OPT range: String language OPT range: String node to node statement\u279eobject REQ range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Inherited from node to node statement:"},{"location":"OwlComplementOfStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='owl:complementOf'","title":"Other properties"},{"location":"OwlComplexAxiom/","text":"Class: OwlComplexAxiom An axiom that is composed of two or more statements URI: semsql:OwlComplexAxiom Children OwlEquivalentToIntersectionMember - Composition of OwlEquivalentClass , OwlIntersectionOf , and RdfListMember ; C = X1 and ... and Xn OwlSubclassOfSomeValuesFrom - Composition of subClassOf and SomeValuesFrom Referenced by class Attributes","title":"Class: OwlComplexAxiom"},{"location":"OwlComplexAxiom/#class-owlcomplexaxiom","text":"An axiom that is composed of two or more statements URI: semsql:OwlComplexAxiom","title":"Class: OwlComplexAxiom"},{"location":"OwlComplexAxiom/#children","text":"OwlEquivalentToIntersectionMember - Composition of OwlEquivalentClass , OwlIntersectionOf , and RdfListMember ; C = X1 and ... and Xn OwlSubclassOfSomeValuesFrom - Composition of subClassOf and SomeValuesFrom","title":"Children"},{"location":"OwlComplexAxiom/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"OwlComplexAxiom/#attributes","text":"","title":"Attributes"},{"location":"OwlDisjointClassStatement/","text":"Class: OwlDisjointClassStatement URI: semsql:OwlDisjointClassStatement Parents is_a: NodeToNodeStatement - A statement where object is non-null and value is not populated Referenced by class Attributes Own owl disjoint class statement\u279eobject REQ Description: One of the two classes that are disjoint. No significance to subject vs object range: ClassNode owl disjoint class statement\u279esubject OPT Description: One of the two classes that are disjoint. No significance to subject vs object range: ClassNode Inherited from node to node statement: datatype OPT range: String language OPT range: String predicate OPT range: PropertyNode stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='owl:disjointClass'","title":"Class: OwlDisjointClassStatement"},{"location":"OwlDisjointClassStatement/#class-owldisjointclassstatement","text":"URI: semsql:OwlDisjointClassStatement","title":"Class: OwlDisjointClassStatement"},{"location":"OwlDisjointClassStatement/#parents","text":"is_a: NodeToNodeStatement - A statement where object is non-null and value is not populated","title":"Parents"},{"location":"OwlDisjointClassStatement/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"OwlDisjointClassStatement/#attributes","text":"","title":"Attributes"},{"location":"OwlDisjointClassStatement/#own","text":"owl disjoint class statement\u279eobject REQ Description: One of the two classes that are disjoint. No significance to subject vs object range: ClassNode owl disjoint class statement\u279esubject OPT Description: One of the two classes that are disjoint. No significance to subject vs object range: ClassNode","title":"Own"},{"location":"OwlDisjointClassStatement/#inherited-from-node-to-node-statement","text":"datatype OPT range: String language OPT range: String predicate OPT range: PropertyNode stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Inherited from node to node statement:"},{"location":"OwlDisjointClassStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='owl:disjointClass'","title":"Other properties"},{"location":"OwlEquivalentClassStatement/","text":"Class: OwlEquivalentClassStatement A statement that connects two class nodes where both classes are equivalent URI: semsql:OwlEquivalentClassStatement Parents is_a: NodeToNodeStatement - A statement where object is non-null and value is not populated Referenced by class Attributes Own owl equivalent class statement\u279eobject REQ Description: One of the two classes that are equivalent. No significance to subject vs object range: ClassNode owl equivalent class statement\u279esubject OPT Description: One of the two classes that are equivalent. No significance to subject vs object range: ClassNode Inherited from node to node statement: datatype OPT range: String language OPT range: String predicate OPT range: PropertyNode stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='owl:equivalentClass'","title":"Class: OwlEquivalentClassStatement"},{"location":"OwlEquivalentClassStatement/#class-owlequivalentclassstatement","text":"A statement that connects two class nodes where both classes are equivalent URI: semsql:OwlEquivalentClassStatement","title":"Class: OwlEquivalentClassStatement"},{"location":"OwlEquivalentClassStatement/#parents","text":"is_a: NodeToNodeStatement - A statement where object is non-null and value is not populated","title":"Parents"},{"location":"OwlEquivalentClassStatement/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"OwlEquivalentClassStatement/#attributes","text":"","title":"Attributes"},{"location":"OwlEquivalentClassStatement/#own","text":"owl equivalent class statement\u279eobject REQ Description: One of the two classes that are equivalent. No significance to subject vs object range: ClassNode owl equivalent class statement\u279esubject OPT Description: One of the two classes that are equivalent. No significance to subject vs object range: ClassNode","title":"Own"},{"location":"OwlEquivalentClassStatement/#inherited-from-node-to-node-statement","text":"datatype OPT range: String language OPT range: String predicate OPT range: PropertyNode stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Inherited from node to node statement:"},{"location":"OwlEquivalentClassStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='owl:equivalentClass'","title":"Other properties"},{"location":"OwlEquivalentToIntersectionMember/","text":"Class: OwlEquivalentToIntersectionMember Composition of OwlEquivalentClass , OwlIntersectionOf , and RdfListMember ; C = X1 and ... and Xn URI: semsql:OwlEquivalentToIntersectionMember Parents is_a: OwlComplexAxiom - An axiom that is composed of two or more statements Referenced by class Attributes Own owl equivalent to intersection member\u279eobject OPT Description: a class expression that forms the defining expression range: Node owl equivalent to intersection member\u279esubject OPT Description: the defined class range: Node Other properties Comments: sqlview>> SELECT e.stanza, e.subject, m.object FROM owl_equivalent_class_statement AS e JOIN statements AS i ON (e.object=i.subject) JOIN rdf_list_member_statement AS m ON (i.object=m.subject) WHERE i.predicate = 'owl:intersectionOf'","title":"Class: OwlEquivalentToIntersectionMember"},{"location":"OwlEquivalentToIntersectionMember/#class-owlequivalenttointersectionmember","text":"Composition of OwlEquivalentClass , OwlIntersectionOf , and RdfListMember ; C = X1 and ... and Xn URI: semsql:OwlEquivalentToIntersectionMember","title":"Class: OwlEquivalentToIntersectionMember"},{"location":"OwlEquivalentToIntersectionMember/#parents","text":"is_a: OwlComplexAxiom - An axiom that is composed of two or more statements","title":"Parents"},{"location":"OwlEquivalentToIntersectionMember/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"OwlEquivalentToIntersectionMember/#attributes","text":"","title":"Attributes"},{"location":"OwlEquivalentToIntersectionMember/#own","text":"owl equivalent to intersection member\u279eobject OPT Description: a class expression that forms the defining expression range: Node owl equivalent to intersection member\u279esubject OPT Description: the defined class range: Node","title":"Own"},{"location":"OwlEquivalentToIntersectionMember/#other-properties","text":"Comments: sqlview>> SELECT e.stanza, e.subject, m.object FROM owl_equivalent_class_statement AS e JOIN statements AS i ON (e.object=i.subject) JOIN rdf_list_member_statement AS m ON (i.object=m.subject) WHERE i.predicate = 'owl:intersectionOf'","title":"Other properties"},{"location":"OwlHasSelf/","text":"Class: OwlHasSelf URI: semsql:OwlHasSelf Parents is_a: OwlRestriction - An OWL restriction, such as SomeValuesFrom(partOf Hand) Referenced by class Attributes Own owl has self\u279efiller OPT Description: This is Null for a self-restriction range: ClassNode Inherited from owl restriction: on property OPT range: Node owl restriction\u279eid REQ Description: the id of the restriction range: NodeIdType Other properties Aliases: self restriction Comments: sqlview>> SELECT onProperty.subject AS id, onProperty.object AS on_property, f.object AS filler FROM statements AS onProperty, statements AS f WHERE onProperty.predicate = 'owl:onProperty' AND onProperty.subject=f.subject AND f.predicate='owl:hasSelf' AND f.value='true'","title":"Class: OwlHasSelf"},{"location":"OwlHasSelf/#class-owlhasself","text":"URI: semsql:OwlHasSelf","title":"Class: OwlHasSelf"},{"location":"OwlHasSelf/#parents","text":"is_a: OwlRestriction - An OWL restriction, such as SomeValuesFrom(partOf Hand)","title":"Parents"},{"location":"OwlHasSelf/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"OwlHasSelf/#attributes","text":"","title":"Attributes"},{"location":"OwlHasSelf/#own","text":"owl has self\u279efiller OPT Description: This is Null for a self-restriction range: ClassNode","title":"Own"},{"location":"OwlHasSelf/#inherited-from-owl-restriction","text":"on property OPT range: Node owl restriction\u279eid REQ Description: the id of the restriction range: NodeIdType","title":"Inherited from owl restriction:"},{"location":"OwlHasSelf/#other-properties","text":"Aliases: self restriction Comments: sqlview>> SELECT onProperty.subject AS id, onProperty.object AS on_property, f.object AS filler FROM statements AS onProperty, statements AS f WHERE onProperty.predicate = 'owl:onProperty' AND onProperty.subject=f.subject AND f.predicate='owl:hasSelf' AND f.value='true'","title":"Other properties"},{"location":"OwlHasValue/","text":"Class: OwlHasValue URI: semsql:OwlHasValue Parents is_a: OwlRestriction - An OWL restriction, such as SomeValuesFrom(partOf Hand) Attributes Inherited from owl restriction: filler OPT range: ClassNode on property OPT range: Node owl restriction\u279eid REQ Description: the id of the restriction range: NodeIdType Other properties Aliases: value restriction Comments: sqlview>> SELECT onProperty.subject AS id, onProperty.object AS on_property, f.object AS filler FROM statements AS onProperty, statements AS f WHERE onProperty.predicate = 'owl:onProperty' AND onProperty.subject=f.subject AND f.predicate='owl:hasValue'","title":"Class: OwlHasValue"},{"location":"OwlHasValue/#class-owlhasvalue","text":"URI: semsql:OwlHasValue","title":"Class: OwlHasValue"},{"location":"OwlHasValue/#parents","text":"is_a: OwlRestriction - An OWL restriction, such as SomeValuesFrom(partOf Hand)","title":"Parents"},{"location":"OwlHasValue/#attributes","text":"","title":"Attributes"},{"location":"OwlHasValue/#inherited-from-owl-restriction","text":"filler OPT range: ClassNode on property OPT range: Node owl restriction\u279eid REQ Description: the id of the restriction range: NodeIdType","title":"Inherited from owl restriction:"},{"location":"OwlHasValue/#other-properties","text":"Aliases: value restriction Comments: sqlview>> SELECT onProperty.subject AS id, onProperty.object AS on_property, f.object AS filler FROM statements AS onProperty, statements AS f WHERE onProperty.predicate = 'owl:onProperty' AND onProperty.subject=f.subject AND f.predicate='owl:hasValue'","title":"Other properties"},{"location":"OwlImportsStatement/","text":"Class: OwlImportsStatement URI: semsql:OwlImportsStatement Parents is_a: NodeToNodeStatement - A statement where object is non-null and value is not populated Attributes Inherited from node to node statement: datatype OPT range: String language OPT range: String node to node statement\u279eobject REQ range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='owl:imports'","title":"Class: OwlImportsStatement"},{"location":"OwlImportsStatement/#class-owlimportsstatement","text":"URI: semsql:OwlImportsStatement","title":"Class: OwlImportsStatement"},{"location":"OwlImportsStatement/#parents","text":"is_a: NodeToNodeStatement - A statement where object is non-null and value is not populated","title":"Parents"},{"location":"OwlImportsStatement/#attributes","text":"","title":"Attributes"},{"location":"OwlImportsStatement/#inherited-from-node-to-node-statement","text":"datatype OPT range: String language OPT range: String node to node statement\u279eobject REQ range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Inherited from node to node statement:"},{"location":"OwlImportsStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='owl:imports'","title":"Other properties"},{"location":"OwlInverseOfStatement/","text":"Class: OwlInverseOfStatement URI: semsql:OwlInverseOfStatement Parents is_a: NodeToNodeStatement - A statement where object is non-null and value is not populated Attributes Inherited from node to node statement: datatype OPT range: String language OPT range: String node to node statement\u279eobject REQ range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='owl:inverseOf'","title":"Class: OwlInverseOfStatement"},{"location":"OwlInverseOfStatement/#class-owlinverseofstatement","text":"URI: semsql:OwlInverseOfStatement","title":"Class: OwlInverseOfStatement"},{"location":"OwlInverseOfStatement/#parents","text":"is_a: NodeToNodeStatement - A statement where object is non-null and value is not populated","title":"Parents"},{"location":"OwlInverseOfStatement/#attributes","text":"","title":"Attributes"},{"location":"OwlInverseOfStatement/#inherited-from-node-to-node-statement","text":"datatype OPT range: String language OPT range: String node to node statement\u279eobject REQ range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Inherited from node to node statement:"},{"location":"OwlInverseOfStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='owl:inverseOf'","title":"Other properties"},{"location":"OwlReifiedAxiom/","text":"Class: OwlReifiedAxiom An OWL axiom that has been reified - i.e. it includes an id field that uniquely identifies that axiom and which can be the subject of additional statements URI: semsql:OwlReifiedAxiom Parents is_a: Statements - Represents an RDF triple Attributes Own id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType Inherited from statements: datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType Other properties Comments: sqlview>> SELECT axs.subject AS id, axs.stanza AS stanza, axs.object AS subject, axp.object AS predicate, axo.object AS object, axo.value AS value, axo.datatype AS datatype, axo.language AS language FROM statements AS axs, statements AS axp, statements AS axo WHERE axs.predicate = 'owl:annotatedSource' AND axp.predicate = 'owl:annotatedProperty' AND axo.predicate = 'owl:annotatedTarget' AND axs.subject = axp.subject AND axs.subject = axo.subject","title":"Class: OwlReifiedAxiom"},{"location":"OwlReifiedAxiom/#class-owlreifiedaxiom","text":"An OWL axiom that has been reified - i.e. it includes an id field that uniquely identifies that axiom and which can be the subject of additional statements URI: semsql:OwlReifiedAxiom","title":"Class: OwlReifiedAxiom"},{"location":"OwlReifiedAxiom/#parents","text":"is_a: Statements - Represents an RDF triple","title":"Parents"},{"location":"OwlReifiedAxiom/#attributes","text":"","title":"Attributes"},{"location":"OwlReifiedAxiom/#own","text":"id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType","title":"Own"},{"location":"OwlReifiedAxiom/#inherited-from-statements","text":"datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Inherited from statements:"},{"location":"OwlReifiedAxiom/#other-properties","text":"Comments: sqlview>> SELECT axs.subject AS id, axs.stanza AS stanza, axs.object AS subject, axp.object AS predicate, axo.object AS object, axo.value AS value, axo.datatype AS datatype, axo.language AS language FROM statements AS axs, statements AS axp, statements AS axo WHERE axs.predicate = 'owl:annotatedSource' AND axp.predicate = 'owl:annotatedProperty' AND axo.predicate = 'owl:annotatedTarget' AND axs.subject = axp.subject AND axs.subject = axo.subject","title":"Other properties"},{"location":"OwlRestriction/","text":"Class: OwlRestriction An OWL restriction, such as SomeValuesFrom(partOf Hand) URI: semsql:OwlRestriction Parents is_a: AnonymousClassExpression - An OWL anonymous class expression, such as for example SomeValuesFrom(partOf Hand) Children OwlAllValuesFrom OwlHasSelf OwlHasValue OwlSomeValuesFrom - An OWL SomeValuesFrom restriction Referenced by class Attributes Own filler OPT range: ClassNode on property OPT range: Node owl restriction\u279eid REQ Description: the id of the restriction range: NodeIdType Other properties Mappings: owl:Restriction","title":"Class: OwlRestriction"},{"location":"OwlRestriction/#class-owlrestriction","text":"An OWL restriction, such as SomeValuesFrom(partOf Hand) URI: semsql:OwlRestriction","title":"Class: OwlRestriction"},{"location":"OwlRestriction/#parents","text":"is_a: AnonymousClassExpression - An OWL anonymous class expression, such as for example SomeValuesFrom(partOf Hand)","title":"Parents"},{"location":"OwlRestriction/#children","text":"OwlAllValuesFrom OwlHasSelf OwlHasValue OwlSomeValuesFrom - An OWL SomeValuesFrom restriction","title":"Children"},{"location":"OwlRestriction/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"OwlRestriction/#attributes","text":"","title":"Attributes"},{"location":"OwlRestriction/#own","text":"filler OPT range: ClassNode on property OPT range: Node owl restriction\u279eid REQ Description: the id of the restriction range: NodeIdType","title":"Own"},{"location":"OwlRestriction/#other-properties","text":"Mappings: owl:Restriction","title":"Other properties"},{"location":"OwlSameAsStatement/","text":"Class: OwlSameAsStatement A statement that connects two individual nodes where both individual are equivalent URI: semsql:OwlSameAsStatement Parents is_a: NodeToNodeStatement - A statement where object is non-null and value is not populated Referenced by class Attributes Own owl same as statement\u279eobject REQ Description: One of the two classes that are equivalent. No significance to subject vs object range: NamedIndividualNode owl same as statement\u279esubject OPT Description: One of the two classes that are equivalent. No significance to subject vs object range: NamedIndividualNode Inherited from node to node statement: datatype OPT range: String language OPT range: String predicate OPT range: PropertyNode stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='owl:sameAs'","title":"Class: OwlSameAsStatement"},{"location":"OwlSameAsStatement/#class-owlsameasstatement","text":"A statement that connects two individual nodes where both individual are equivalent URI: semsql:OwlSameAsStatement","title":"Class: OwlSameAsStatement"},{"location":"OwlSameAsStatement/#parents","text":"is_a: NodeToNodeStatement - A statement where object is non-null and value is not populated","title":"Parents"},{"location":"OwlSameAsStatement/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"OwlSameAsStatement/#attributes","text":"","title":"Attributes"},{"location":"OwlSameAsStatement/#own","text":"owl same as statement\u279eobject REQ Description: One of the two classes that are equivalent. No significance to subject vs object range: NamedIndividualNode owl same as statement\u279esubject OPT Description: One of the two classes that are equivalent. No significance to subject vs object range: NamedIndividualNode","title":"Own"},{"location":"OwlSameAsStatement/#inherited-from-node-to-node-statement","text":"datatype OPT range: String language OPT range: String predicate OPT range: PropertyNode stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Inherited from node to node statement:"},{"location":"OwlSameAsStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='owl:sameAs'","title":"Other properties"},{"location":"OwlSomeValuesFrom/","text":"Class: OwlSomeValuesFrom An OWL SomeValuesFrom restriction URI: semsql:OwlSomeValuesFrom Parents is_a: OwlRestriction - An OWL restriction, such as SomeValuesFrom(partOf Hand) Attributes Inherited from owl restriction: filler OPT range: ClassNode on property OPT range: Node owl restriction\u279eid REQ Description: the id of the restriction range: NodeIdType Other properties Aliases: existential restriction Comments: sqlview>> SELECT onProperty.subject AS id, onProperty.object AS on_property, f.object AS filler FROM statements AS onProperty, statements AS f WHERE onProperty.predicate = 'owl:onProperty' AND onProperty.subject=f.subject AND f.predicate='owl:someValuesFrom'","title":"Class: OwlSomeValuesFrom"},{"location":"OwlSomeValuesFrom/#class-owlsomevaluesfrom","text":"An OWL SomeValuesFrom restriction URI: semsql:OwlSomeValuesFrom","title":"Class: OwlSomeValuesFrom"},{"location":"OwlSomeValuesFrom/#parents","text":"is_a: OwlRestriction - An OWL restriction, such as SomeValuesFrom(partOf Hand)","title":"Parents"},{"location":"OwlSomeValuesFrom/#attributes","text":"","title":"Attributes"},{"location":"OwlSomeValuesFrom/#inherited-from-owl-restriction","text":"filler OPT range: ClassNode on property OPT range: Node owl restriction\u279eid REQ Description: the id of the restriction range: NodeIdType","title":"Inherited from owl restriction:"},{"location":"OwlSomeValuesFrom/#other-properties","text":"Aliases: existential restriction Comments: sqlview>> SELECT onProperty.subject AS id, onProperty.object AS on_property, f.object AS filler FROM statements AS onProperty, statements AS f WHERE onProperty.predicate = 'owl:onProperty' AND onProperty.subject=f.subject AND f.predicate='owl:someValuesFrom'","title":"Other properties"},{"location":"OwlSubclassOfSomeValuesFrom/","text":"Class: OwlSubclassOfSomeValuesFrom Composition of subClassOf and SomeValuesFrom URI: semsql:OwlSubclassOfSomeValuesFrom Parents is_a: OwlComplexAxiom - An axiom that is composed of two or more statements Referenced by class Attributes Own owl subclass of some values from\u279eobject OPT Description: the class D in the axiom C subClassOf P some D range: Node owl subclass of some values from\u279epredicate OPT Description: the predicate P in the axiom C subClassOf P some D range: PropertyNode owl subclass of some values from\u279esubject OPT Description: the class C in the axiom C subClassOf P some D range: Node Other properties Comments: sqlview>> SELECT subClassOf.stanza, subClassOf.subject, svf.on_property AS predicate, svf.filler AS object FROM statements AS subClassOf, owl_some_values_from AS svf WHERE subClassOf.predicate = 'rdfs:subClassOf' AND svf.id=subClassOf.object","title":"Class: OwlSubclassOfSomeValuesFrom"},{"location":"OwlSubclassOfSomeValuesFrom/#class-owlsubclassofsomevaluesfrom","text":"Composition of subClassOf and SomeValuesFrom URI: semsql:OwlSubclassOfSomeValuesFrom","title":"Class: OwlSubclassOfSomeValuesFrom"},{"location":"OwlSubclassOfSomeValuesFrom/#parents","text":"is_a: OwlComplexAxiom - An axiom that is composed of two or more statements","title":"Parents"},{"location":"OwlSubclassOfSomeValuesFrom/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"OwlSubclassOfSomeValuesFrom/#attributes","text":"","title":"Attributes"},{"location":"OwlSubclassOfSomeValuesFrom/#own","text":"owl subclass of some values from\u279eobject OPT Description: the class D in the axiom C subClassOf P some D range: Node owl subclass of some values from\u279epredicate OPT Description: the predicate P in the axiom C subClassOf P some D range: PropertyNode owl subclass of some values from\u279esubject OPT Description: the class C in the axiom C subClassOf P some D range: Node","title":"Own"},{"location":"OwlSubclassOfSomeValuesFrom/#other-properties","text":"Comments: sqlview>> SELECT subClassOf.stanza, subClassOf.subject, svf.on_property AS predicate, svf.filler AS object FROM statements AS subClassOf, owl_some_values_from AS svf WHERE subClassOf.predicate = 'rdfs:subClassOf' AND svf.id=subClassOf.object","title":"Other properties"},{"location":"Problem/","text":"Class: Problem Represents an instance of a problem pertaining to conformance to OBO guidelines URI: semsql:Problem Children AllProblems LexicalProblem - a problem with the textual value of an annotation property NodeWithTwoLabelsProblem PropertyUsedWithDatatypeValuesAndObjects - A problem in which the same property is used two two different ways, one in which the range is a literal value, the other where it is an object. TrailingWhitespaceProblem Referenced by class Attributes Own problem\u279epredicate OPT Description: The property of the thing that is problematic range: PropertyNode problem\u279esubject OPT Description: The thing that is problematic range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Class: Problem"},{"location":"Problem/#class-problem","text":"Represents an instance of a problem pertaining to conformance to OBO guidelines URI: semsql:Problem","title":"Class: Problem"},{"location":"Problem/#children","text":"AllProblems LexicalProblem - a problem with the textual value of an annotation property NodeWithTwoLabelsProblem PropertyUsedWithDatatypeValuesAndObjects - A problem in which the same property is used two two different ways, one in which the range is a literal value, the other where it is an object. TrailingWhitespaceProblem","title":"Children"},{"location":"Problem/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"Problem/#attributes","text":"","title":"Attributes"},{"location":"Problem/#own","text":"problem\u279epredicate OPT Description: The property of the thing that is problematic range: PropertyNode problem\u279esubject OPT Description: The thing that is problematic range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Own"},{"location":"PropertyNode/","text":"Class: PropertyNode Note this only directly classifies nodes asserted to be rdf:Properties URI: semsql:PropertyNode Parents is_a: Node - The basic unit of representation in an RDF or OWL graph Children AnnotationPropertyNode - A node representing an OWL annotation property ObjectPropertyNode - A node representing an OWL object property Referenced by class OwlSubclassOfSomeValuesFrom owl subclass of some values from\u279epredicate OPT PropertyNode None predicate OPT PropertyNode Problem problem\u279epredicate OPT PropertyNode RdfsSubpropertyOfStatement rdfs subproperty of statement\u279eobject REQ PropertyNode RdfsSubpropertyOfStatement rdfs subproperty of statement\u279esubject OPT PropertyNode SubgraphQuery subgraph query\u279epredicate OPT PropertyNode Attributes Inherited from node: id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType Other properties Mappings: owl:Propery Comments: sqlview>> SELECT distinct subject AS id from rdf_type_statement WHERE object = 'owl:Property';","title":"Class: PropertyNode"},{"location":"PropertyNode/#class-propertynode","text":"Note this only directly classifies nodes asserted to be rdf:Properties URI: semsql:PropertyNode","title":"Class: PropertyNode"},{"location":"PropertyNode/#parents","text":"is_a: Node - The basic unit of representation in an RDF or OWL graph","title":"Parents"},{"location":"PropertyNode/#children","text":"AnnotationPropertyNode - A node representing an OWL annotation property ObjectPropertyNode - A node representing an OWL object property","title":"Children"},{"location":"PropertyNode/#referenced-by-class","text":"OwlSubclassOfSomeValuesFrom owl subclass of some values from\u279epredicate OPT PropertyNode None predicate OPT PropertyNode Problem problem\u279epredicate OPT PropertyNode RdfsSubpropertyOfStatement rdfs subproperty of statement\u279eobject REQ PropertyNode RdfsSubpropertyOfStatement rdfs subproperty of statement\u279esubject OPT PropertyNode SubgraphQuery subgraph query\u279epredicate OPT PropertyNode","title":"Referenced by class"},{"location":"PropertyNode/#attributes","text":"","title":"Attributes"},{"location":"PropertyNode/#inherited-from-node","text":"id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType","title":"Inherited from node:"},{"location":"PropertyNode/#other-properties","text":"Mappings: owl:Propery Comments: sqlview>> SELECT distinct subject AS id from rdf_type_statement WHERE object = 'owl:Property';","title":"Other properties"},{"location":"PropertyTrait/","text":"Class: PropertyTrait URI: semsql:PropertyTrait Parents is_a: NodeTrait - abstract groupings/properties for different aspects of the model Mixin for AnonymousPropertyExpression (mixin) Referenced by class Attributes","title":"Class: PropertyTrait"},{"location":"PropertyTrait/#class-propertytrait","text":"URI: semsql:PropertyTrait","title":"Class: PropertyTrait"},{"location":"PropertyTrait/#parents","text":"is_a: NodeTrait - abstract groupings/properties for different aspects of the model","title":"Parents"},{"location":"PropertyTrait/#mixin-for","text":"AnonymousPropertyExpression (mixin)","title":"Mixin for"},{"location":"PropertyTrait/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"PropertyTrait/#attributes","text":"","title":"Attributes"},{"location":"PropertyUsedWithDatatypeValuesAndObjects/","text":"Class: PropertyUsedWithDatatypeValuesAndObjects A problem in which the same property is used two two different ways, one in which the range is a literal value, the other where it is an object. URI: semsql:PropertyUsedWithDatatypeValuesAndObjects Parents is_a: Problem - Represents an instance of a problem pertaining to conformance to OBO guidelines Attributes Inherited from problem: problem\u279epredicate OPT Description: The property of the thing that is problematic range: PropertyNode problem\u279esubject OPT Description: The thing that is problematic range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType Other properties Comments: in OWL, if a property is typed as object or datatype, this will constrain its use. However, annotation properties have no such constraints in OWL, but we still consider this problematic and unintentional, unless it is a truly generic predicate, such as owl:annotatedTarget or rdf:object sqlview>> SELECT DISTINCT s1.predicate AS subject, s1.predicate, s1.datatype AS value FROM statements AS s1, statements AS s2 ON (s1.predicate=s2.predicate) WHERE s1.value IS NOT NULL and s2.object IS NOT NULL See also: https://github.com/information-artifact-ontology/ontology-metadata/issues/67","title":"Class: PropertyUsedWithDatatypeValuesAndObjects"},{"location":"PropertyUsedWithDatatypeValuesAndObjects/#class-propertyusedwithdatatypevaluesandobjects","text":"A problem in which the same property is used two two different ways, one in which the range is a literal value, the other where it is an object. URI: semsql:PropertyUsedWithDatatypeValuesAndObjects","title":"Class: PropertyUsedWithDatatypeValuesAndObjects"},{"location":"PropertyUsedWithDatatypeValuesAndObjects/#parents","text":"is_a: Problem - Represents an instance of a problem pertaining to conformance to OBO guidelines","title":"Parents"},{"location":"PropertyUsedWithDatatypeValuesAndObjects/#attributes","text":"","title":"Attributes"},{"location":"PropertyUsedWithDatatypeValuesAndObjects/#inherited-from-problem","text":"problem\u279epredicate OPT Description: The property of the thing that is problematic range: PropertyNode problem\u279esubject OPT Description: The thing that is problematic range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Inherited from problem:"},{"location":"PropertyUsedWithDatatypeValuesAndObjects/#other-properties","text":"Comments: in OWL, if a property is typed as object or datatype, this will constrain its use. However, annotation properties have no such constraints in OWL, but we still consider this problematic and unintentional, unless it is a truly generic predicate, such as owl:annotatedTarget or rdf:object sqlview>> SELECT DISTINCT s1.predicate AS subject, s1.predicate, s1.datatype AS value FROM statements AS s1, statements AS s2 ON (s1.predicate=s2.predicate) WHERE s1.value IS NOT NULL and s2.object IS NOT NULL See also: https://github.com/information-artifact-ontology/ontology-metadata/issues/67","title":"Other properties"},{"location":"RdfFirstStatement/","text":"Class: RdfFirstStatement A statement that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful URI: semsql:RdfFirstStatement Parents is_a: RdfListStatement - A statement that is used to represent aspects of RDF lists Attributes Inherited from rdf list statement: datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode rdf list statement\u279esubject OPT Description: The rdf:List to which the statement applies range: RdfListNode stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='rdf:first'","title":"Class: RdfFirstStatement"},{"location":"RdfFirstStatement/#class-rdffirststatement","text":"A statement that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful URI: semsql:RdfFirstStatement","title":"Class: RdfFirstStatement"},{"location":"RdfFirstStatement/#parents","text":"is_a: RdfListStatement - A statement that is used to represent aspects of RDF lists","title":"Parents"},{"location":"RdfFirstStatement/#attributes","text":"","title":"Attributes"},{"location":"RdfFirstStatement/#inherited-from-rdf-list-statement","text":"datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode rdf list statement\u279esubject OPT Description: The rdf:List to which the statement applies range: RdfListNode stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Inherited from rdf list statement:"},{"location":"RdfFirstStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='rdf:first'","title":"Other properties"},{"location":"RdfLevelSummaryStatistic/","text":"Class: RdfLevelSummaryStatistic Abstract grouping for views/classes that provide some kind of count summary about an individual element URI: semsql:RdfLevelSummaryStatistic Uses Mixins mixin: IsReport - Used to describe classes/views that have a reporting function Children CountOfInstantiatedClasses - Number of distinct instantiations of a class. Note in many OBOs, classes are not directly instantiated CountOfPredicates - Number of distinct usages of a predicate. NOTE MAY CHANGE: does not currently count existential usage in OWL CountOfSubclasses - Number of subclasses for a given class Referenced by class Attributes Own \u279ecount_value OPT range: Integer \u279eelement OPT range: Node","title":"Class: RdfLevelSummaryStatistic"},{"location":"RdfLevelSummaryStatistic/#class-rdflevelsummarystatistic","text":"Abstract grouping for views/classes that provide some kind of count summary about an individual element URI: semsql:RdfLevelSummaryStatistic","title":"Class: RdfLevelSummaryStatistic"},{"location":"RdfLevelSummaryStatistic/#uses-mixins","text":"mixin: IsReport - Used to describe classes/views that have a reporting function","title":"Uses Mixins"},{"location":"RdfLevelSummaryStatistic/#children","text":"CountOfInstantiatedClasses - Number of distinct instantiations of a class. Note in many OBOs, classes are not directly instantiated CountOfPredicates - Number of distinct usages of a predicate. NOTE MAY CHANGE: does not currently count existential usage in OWL CountOfSubclasses - Number of subclasses for a given class","title":"Children"},{"location":"RdfLevelSummaryStatistic/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"RdfLevelSummaryStatistic/#attributes","text":"","title":"Attributes"},{"location":"RdfLevelSummaryStatistic/#own","text":"\u279ecount_value OPT range: Integer \u279eelement OPT range: Node","title":"Own"},{"location":"RdfListMemberStatement/","text":"Class: RdfListMemberStatement URI: semsql:RdfListMemberStatement Parents is_a: RdfListStatement - A statement that is used to represent aspects of RDF lists Attributes Inherited from rdf list statement: datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode rdf list statement\u279esubject OPT Description: The rdf:List to which the statement applies range: RdfListNode stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType Other properties Comments: sqlview>> SELECT rest_t.subject, f.object FROM rdf_rest_transitive_statement AS rest_t JOIN rdf_first_statement AS f ON (rest_t.object = f.subject) UNION SELECT subject,object FROM rdf_first_statement;","title":"Class: RdfListMemberStatement"},{"location":"RdfListMemberStatement/#class-rdflistmemberstatement","text":"URI: semsql:RdfListMemberStatement","title":"Class: RdfListMemberStatement"},{"location":"RdfListMemberStatement/#parents","text":"is_a: RdfListStatement - A statement that is used to represent aspects of RDF lists","title":"Parents"},{"location":"RdfListMemberStatement/#attributes","text":"","title":"Attributes"},{"location":"RdfListMemberStatement/#inherited-from-rdf-list-statement","text":"datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode rdf list statement\u279esubject OPT Description: The rdf:List to which the statement applies range: RdfListNode stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Inherited from rdf list statement:"},{"location":"RdfListMemberStatement/#other-properties","text":"Comments: sqlview>> SELECT rest_t.subject, f.object FROM rdf_rest_transitive_statement AS rest_t JOIN rdf_first_statement AS f ON (rest_t.object = f.subject) UNION SELECT subject,object FROM rdf_first_statement;","title":"Other properties"},{"location":"RdfListNode/","text":"Class: RdfListNode A node representing an RDF list. Note that you will not likely need to use this directly. URI: semsql:RdfListNode Parents is_a: BlankNode - A node with an ID that is not preserved between databases Referenced by class RdfListStatement rdf list statement\u279esubject OPT RdfListNode Attributes Inherited from blank node: id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType Other properties Comments: sqlview>> SELECT distinct subject AS id from rdf_type_statement WHERE object = 'rdf:List';","title":"Class: RdfListNode"},{"location":"RdfListNode/#class-rdflistnode","text":"A node representing an RDF list. Note that you will not likely need to use this directly. URI: semsql:RdfListNode","title":"Class: RdfListNode"},{"location":"RdfListNode/#parents","text":"is_a: BlankNode - A node with an ID that is not preserved between databases","title":"Parents"},{"location":"RdfListNode/#referenced-by-class","text":"RdfListStatement rdf list statement\u279esubject OPT RdfListNode","title":"Referenced by class"},{"location":"RdfListNode/#attributes","text":"","title":"Attributes"},{"location":"RdfListNode/#inherited-from-blank-node","text":"id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType","title":"Inherited from blank node:"},{"location":"RdfListNode/#other-properties","text":"Comments: sqlview>> SELECT distinct subject AS id from rdf_type_statement WHERE object = 'rdf:List';","title":"Other properties"},{"location":"RdfListStatement/","text":"Class: RdfListStatement A statement that is used to represent aspects of RDF lists URI: semsql:RdfListStatement Parents is_a: Statements - Represents an RDF triple Children RdfFirstStatement - A statement that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfListMemberStatement RdfRestStatement - A statement that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfRestTransitiveStatement Referenced by class Attributes Own rdf list statement\u279esubject OPT Description: The rdf:List to which the statement applies range: RdfListNode Inherited from statements: datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Class: RdfListStatement"},{"location":"RdfListStatement/#class-rdfliststatement","text":"A statement that is used to represent aspects of RDF lists URI: semsql:RdfListStatement","title":"Class: RdfListStatement"},{"location":"RdfListStatement/#parents","text":"is_a: Statements - Represents an RDF triple","title":"Parents"},{"location":"RdfListStatement/#children","text":"RdfFirstStatement - A statement that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfListMemberStatement RdfRestStatement - A statement that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfRestTransitiveStatement","title":"Children"},{"location":"RdfListStatement/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"RdfListStatement/#attributes","text":"","title":"Attributes"},{"location":"RdfListStatement/#own","text":"rdf list statement\u279esubject OPT Description: The rdf:List to which the statement applies range: RdfListNode","title":"Own"},{"location":"RdfListStatement/#inherited-from-statements","text":"datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Inherited from statements:"},{"location":"RdfRestStatement/","text":"Class: RdfRestStatement A statement that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful URI: semsql:RdfRestStatement Parents is_a: RdfListStatement - A statement that is used to represent aspects of RDF lists Attributes Inherited from rdf list statement: datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode rdf list statement\u279esubject OPT Description: The rdf:List to which the statement applies range: RdfListNode stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='rdf:rest'","title":"Class: RdfRestStatement"},{"location":"RdfRestStatement/#class-rdfreststatement","text":"A statement that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful URI: semsql:RdfRestStatement","title":"Class: RdfRestStatement"},{"location":"RdfRestStatement/#parents","text":"is_a: RdfListStatement - A statement that is used to represent aspects of RDF lists","title":"Parents"},{"location":"RdfRestStatement/#attributes","text":"","title":"Attributes"},{"location":"RdfRestStatement/#inherited-from-rdf-list-statement","text":"datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode rdf list statement\u279esubject OPT Description: The rdf:List to which the statement applies range: RdfListNode stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Inherited from rdf list statement:"},{"location":"RdfRestStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='rdf:rest'","title":"Other properties"},{"location":"RdfRestTransitiveStatement/","text":"Class: RdfRestTransitiveStatement URI: semsql:RdfRestTransitiveStatement Parents is_a: RdfListStatement - A statement that is used to represent aspects of RDF lists Attributes Inherited from rdf list statement: datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode rdf list statement\u279esubject OPT Description: The rdf:List to which the statement applies range: RdfListNode stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType Other properties Comments: sqlview>> WITH RECURSIVE rdf_rest_transitive_statement ( subject, object ) AS (SELECT subject, object FROM rdf_rest_statement UNION ALL SELECT rest.subject, rest_t.object FROM rdf_rest_statement AS rest JOIN rdf_rest_transitive_statement AS rest_t ON rest.object = rest_t.subject ) SELECT * FROM rdf_rest_transitive_statement","title":"Class: RdfRestTransitiveStatement"},{"location":"RdfRestTransitiveStatement/#class-rdfresttransitivestatement","text":"URI: semsql:RdfRestTransitiveStatement","title":"Class: RdfRestTransitiveStatement"},{"location":"RdfRestTransitiveStatement/#parents","text":"is_a: RdfListStatement - A statement that is used to represent aspects of RDF lists","title":"Parents"},{"location":"RdfRestTransitiveStatement/#attributes","text":"","title":"Attributes"},{"location":"RdfRestTransitiveStatement/#inherited-from-rdf-list-statement","text":"datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode rdf list statement\u279esubject OPT Description: The rdf:List to which the statement applies range: RdfListNode stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Inherited from rdf list statement:"},{"location":"RdfRestTransitiveStatement/#other-properties","text":"Comments: sqlview>> WITH RECURSIVE rdf_rest_transitive_statement ( subject, object ) AS (SELECT subject, object FROM rdf_rest_statement UNION ALL SELECT rest.subject, rest_t.object FROM rdf_rest_statement AS rest JOIN rdf_rest_transitive_statement AS rest_t ON rest.object = rest_t.subject ) SELECT * FROM rdf_rest_transitive_statement","title":"Other properties"},{"location":"RdfTypeStatement/","text":"Class: RdfTypeStatement A statement that indicates the asserted type of the subject entity URI: semsql:RdfTypeStatement Parents is_a: NodeToNodeStatement - A statement where object is non-null and value is not populated Referenced by class Attributes Own rdf type statement\u279eobject REQ Description: The entity type range: ClassNode Inherited from node to node statement: datatype OPT range: String language OPT range: String predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='rdf:type'","title":"Class: RdfTypeStatement"},{"location":"RdfTypeStatement/#class-rdftypestatement","text":"A statement that indicates the asserted type of the subject entity URI: semsql:RdfTypeStatement","title":"Class: RdfTypeStatement"},{"location":"RdfTypeStatement/#parents","text":"is_a: NodeToNodeStatement - A statement where object is non-null and value is not populated","title":"Parents"},{"location":"RdfTypeStatement/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"RdfTypeStatement/#attributes","text":"","title":"Attributes"},{"location":"RdfTypeStatement/#own","text":"rdf type statement\u279eobject REQ Description: The entity type range: ClassNode","title":"Own"},{"location":"RdfTypeStatement/#inherited-from-node-to-node-statement","text":"datatype OPT range: String language OPT range: String predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Inherited from node to node statement:"},{"location":"RdfTypeStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='rdf:type'","title":"Other properties"},{"location":"RdfsDomainStatement/","text":"Class: RdfsDomainStatement URI: semsql:RdfsDomainStatement Parents is_a: NodeToNodeStatement - A statement where object is non-null and value is not populated Attributes Inherited from node to node statement: datatype OPT range: String language OPT range: String node to node statement\u279eobject REQ range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='rdfs:domain'","title":"Class: RdfsDomainStatement"},{"location":"RdfsDomainStatement/#class-rdfsdomainstatement","text":"URI: semsql:RdfsDomainStatement","title":"Class: RdfsDomainStatement"},{"location":"RdfsDomainStatement/#parents","text":"is_a: NodeToNodeStatement - A statement where object is non-null and value is not populated","title":"Parents"},{"location":"RdfsDomainStatement/#attributes","text":"","title":"Attributes"},{"location":"RdfsDomainStatement/#inherited-from-node-to-node-statement","text":"datatype OPT range: String language OPT range: String node to node statement\u279eobject REQ range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Inherited from node to node statement:"},{"location":"RdfsDomainStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='rdfs:domain'","title":"Other properties"},{"location":"RdfsLabelStatement/","text":"Class: RdfsLabelStatement URI: semsql:RdfsLabelStatement Parents is_a: NodeToValueStatement - A statement where value is non-null and object is not populated Referenced by class Attributes Own rdfs label statement\u279evalue REQ Description: The label value range: String Inherited from node to value statement: datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='rdfs:label'","title":"Class: RdfsLabelStatement"},{"location":"RdfsLabelStatement/#class-rdfslabelstatement","text":"URI: semsql:RdfsLabelStatement","title":"Class: RdfsLabelStatement"},{"location":"RdfsLabelStatement/#parents","text":"is_a: NodeToValueStatement - A statement where value is non-null and object is not populated","title":"Parents"},{"location":"RdfsLabelStatement/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"RdfsLabelStatement/#attributes","text":"","title":"Attributes"},{"location":"RdfsLabelStatement/#own","text":"rdfs label statement\u279evalue REQ Description: The label value range: String","title":"Own"},{"location":"RdfsLabelStatement/#inherited-from-node-to-value-statement","text":"datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node","title":"Inherited from node to value statement:"},{"location":"RdfsLabelStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='rdfs:label'","title":"Other properties"},{"location":"RdfsRangeStatement/","text":"Class: RdfsRangeStatement URI: semsql:RdfsRangeStatement Parents is_a: NodeToNodeStatement - A statement where object is non-null and value is not populated Attributes Inherited from node to node statement: datatype OPT range: String language OPT range: String node to node statement\u279eobject REQ range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='rdfs:range'","title":"Class: RdfsRangeStatement"},{"location":"RdfsRangeStatement/#class-rdfsrangestatement","text":"URI: semsql:RdfsRangeStatement","title":"Class: RdfsRangeStatement"},{"location":"RdfsRangeStatement/#parents","text":"is_a: NodeToNodeStatement - A statement where object is non-null and value is not populated","title":"Parents"},{"location":"RdfsRangeStatement/#attributes","text":"","title":"Attributes"},{"location":"RdfsRangeStatement/#inherited-from-node-to-node-statement","text":"datatype OPT range: String language OPT range: String node to node statement\u279eobject REQ range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Inherited from node to node statement:"},{"location":"RdfsRangeStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='rdfs:range'","title":"Other properties"},{"location":"RdfsSubClassOfStatement/","text":"Class: RdfsSubclassOfStatement URI: semsql:RdfsSubclassOfStatement Parents is_a: NodeToNodeStatement - A statement where object is non-null and value is not populated Children RdfsSubclassOfNamedStatement Referenced by class Attributes Own rdfs subclass of statement\u279eobject REQ Description: The superclass element of the triple range: ClassNode rdfs subclass of statement\u279esubject OPT Description: The subclass element of the triple range: ClassNode Inherited from node to node statement: datatype OPT range: String language OPT range: String predicate OPT range: PropertyNode stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='rdfs:subClassOf'","title":"Class: RdfsSubclassOfStatement"},{"location":"RdfsSubClassOfStatement/#class-rdfssubclassofstatement","text":"URI: semsql:RdfsSubclassOfStatement","title":"Class: RdfsSubclassOfStatement"},{"location":"RdfsSubClassOfStatement/#parents","text":"is_a: NodeToNodeStatement - A statement where object is non-null and value is not populated","title":"Parents"},{"location":"RdfsSubClassOfStatement/#children","text":"RdfsSubclassOfNamedStatement","title":"Children"},{"location":"RdfsSubClassOfStatement/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"RdfsSubClassOfStatement/#attributes","text":"","title":"Attributes"},{"location":"RdfsSubClassOfStatement/#own","text":"rdfs subclass of statement\u279eobject REQ Description: The superclass element of the triple range: ClassNode rdfs subclass of statement\u279esubject OPT Description: The subclass element of the triple range: ClassNode","title":"Own"},{"location":"RdfsSubClassOfStatement/#inherited-from-node-to-node-statement","text":"datatype OPT range: String language OPT range: String predicate OPT range: PropertyNode stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Inherited from node to node statement:"},{"location":"RdfsSubClassOfStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='rdfs:subClassOf'","title":"Other properties"},{"location":"RdfsSubclassOfNamedStatement/","text":"Class: RdfsSubclassOfNamedStatement URI: semsql:RdfsSubclassOfNamedStatement Parents is_a: RdfsSubclassOfStatement Attributes Inherited from rdfs subclass of statement: datatype OPT range: String language OPT range: String predicate OPT range: PropertyNode rdfs subclass of statement\u279eobject REQ Description: The superclass element of the triple range: ClassNode rdfs subclass of statement\u279esubject OPT Description: The subclass element of the triple range: ClassNode stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType Other properties Comments: sqlview>> SELECT * FROM rdfs_subclass_of_statement WHERE object NOT LIKE '_:%';","title":"Class: RdfsSubclassOfNamedStatement"},{"location":"RdfsSubclassOfNamedStatement/#class-rdfssubclassofnamedstatement","text":"URI: semsql:RdfsSubclassOfNamedStatement","title":"Class: RdfsSubclassOfNamedStatement"},{"location":"RdfsSubclassOfNamedStatement/#parents","text":"is_a: RdfsSubclassOfStatement","title":"Parents"},{"location":"RdfsSubclassOfNamedStatement/#attributes","text":"","title":"Attributes"},{"location":"RdfsSubclassOfNamedStatement/#inherited-from-rdfs-subclass-of-statement","text":"datatype OPT range: String language OPT range: String predicate OPT range: PropertyNode rdfs subclass of statement\u279eobject REQ Description: The superclass element of the triple range: ClassNode rdfs subclass of statement\u279esubject OPT Description: The subclass element of the triple range: ClassNode stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Inherited from rdfs subclass of statement:"},{"location":"RdfsSubclassOfNamedStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM rdfs_subclass_of_statement WHERE object NOT LIKE '_:%';","title":"Other properties"},{"location":"RdfsSubpropertyOfStatement/","text":"Class: RdfsSubpropertyOfStatement URI: semsql:RdfsSubpropertyOfStatement Parents is_a: NodeToNodeStatement - A statement where object is non-null and value is not populated Referenced by class Attributes Own rdfs subproperty of statement\u279eobject REQ Description: The superproperty element of the triple range: PropertyNode rdfs subproperty of statement\u279esubject OPT Description: The subproperty element of the triple range: PropertyNode Inherited from node to node statement: datatype OPT range: String language OPT range: String predicate OPT range: PropertyNode stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType Other properties Comments: sqlview>> SELECT * FROM statements WHERE predicate='rdfs:subPropertyOf'","title":"Class: RdfsSubpropertyOfStatement"},{"location":"RdfsSubpropertyOfStatement/#class-rdfssubpropertyofstatement","text":"URI: semsql:RdfsSubpropertyOfStatement","title":"Class: RdfsSubpropertyOfStatement"},{"location":"RdfsSubpropertyOfStatement/#parents","text":"is_a: NodeToNodeStatement - A statement where object is non-null and value is not populated","title":"Parents"},{"location":"RdfsSubpropertyOfStatement/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"RdfsSubpropertyOfStatement/#attributes","text":"","title":"Attributes"},{"location":"RdfsSubpropertyOfStatement/#own","text":"rdfs subproperty of statement\u279eobject REQ Description: The superproperty element of the triple range: PropertyNode rdfs subproperty of statement\u279esubject OPT Description: The subproperty element of the triple range: PropertyNode","title":"Own"},{"location":"RdfsSubpropertyOfStatement/#inherited-from-node-to-node-statement","text":"datatype OPT range: String language OPT range: String predicate OPT range: PropertyNode stanza OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Inherited from node to node statement:"},{"location":"RdfsSubpropertyOfStatement/#other-properties","text":"Comments: sqlview>> SELECT * FROM statements WHERE predicate='rdfs:subPropertyOf'","title":"Other properties"},{"location":"ReflexivePropertyNode/","text":"Class: ReflexivePropertyNode A node representing an OWL reflexive object property URI: semsql:ReflexivePropertyNode Parents is_a: ObjectPropertyNode - A node representing an OWL object property Attributes Inherited from object property node: id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType Other properties Comments: sqlview>> SELECT DISTINCT subject AS id FROM rdf_type_statement WHERE object='owl:IrreflexiveProperty'","title":"Class: ReflexivePropertyNode"},{"location":"ReflexivePropertyNode/#class-reflexivepropertynode","text":"A node representing an OWL reflexive object property URI: semsql:ReflexivePropertyNode","title":"Class: ReflexivePropertyNode"},{"location":"ReflexivePropertyNode/#parents","text":"is_a: ObjectPropertyNode - A node representing an OWL object property","title":"Parents"},{"location":"ReflexivePropertyNode/#attributes","text":"","title":"Attributes"},{"location":"ReflexivePropertyNode/#inherited-from-object-property-node","text":"id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType","title":"Inherited from object property node:"},{"location":"ReflexivePropertyNode/#other-properties","text":"Comments: sqlview>> SELECT DISTINCT subject AS id FROM rdf_type_statement WHERE object='owl:IrreflexiveProperty'","title":"Other properties"},{"location":"RelationGraphConstruct/","text":"Class: RelationGraphConstruct A construct used as part of a Relation Graph URI: semsql:RelationGraphConstruct Children Edge - A relation graph edge that connects two entities by a predicate. Note an edge is distinct from a statement, in that an axiom such as A SubClassOf R some B is represented as multiple statements, but is a single relation graph edge EntailedEdge - A relation graph edge that is inferred SubgraphQuery - A subgraph query encompasses as subgraph edge and a seed/anchor object and seed/anchor predicate Referenced by class Attributes Other properties Comments: Relation Graphs are complementary abstractions to OWL in which axioms of the form A SubClassOf R some C form individual edges","title":"Class: RelationGraphConstruct"},{"location":"RelationGraphConstruct/#class-relationgraphconstruct","text":"A construct used as part of a Relation Graph URI: semsql:RelationGraphConstruct","title":"Class: RelationGraphConstruct"},{"location":"RelationGraphConstruct/#children","text":"Edge - A relation graph edge that connects two entities by a predicate. Note an edge is distinct from a statement, in that an axiom such as A SubClassOf R some B is represented as multiple statements, but is a single relation graph edge EntailedEdge - A relation graph edge that is inferred SubgraphQuery - A subgraph query encompasses as subgraph edge and a seed/anchor object and seed/anchor predicate","title":"Children"},{"location":"RelationGraphConstruct/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"RelationGraphConstruct/#attributes","text":"","title":"Attributes"},{"location":"RelationGraphConstruct/#other-properties","text":"Comments: Relation Graphs are complementary abstractions to OWL in which axioms of the form A SubClassOf R some C form individual edges","title":"Other properties"},{"location":"RepairAction/","text":"Class: RepairAction Represents an action that needs to be taken to repair a problem URI: semsql:RepairAction Referenced by class Attributes Own description OPT range: String repair action\u279esubject OPT Description: The thing that is problematic range: Node","title":"Class: RepairAction"},{"location":"RepairAction/#class-repairaction","text":"Represents an action that needs to be taken to repair a problem URI: semsql:RepairAction","title":"Class: RepairAction"},{"location":"RepairAction/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"RepairAction/#attributes","text":"","title":"Attributes"},{"location":"RepairAction/#own","text":"description OPT range: String repair action\u279esubject OPT Description: The thing that is problematic range: Node","title":"Own"},{"location":"Statements/","text":"Class: Statements Represents an RDF triple URI: semsql:Statements Children NodeToNodeStatement - A statement where object is non-null and value is not populated NodeToValueStatement - A statement where value is non-null and object is not populated OwlAxiom OwlAxiomAnnotation OwlReifiedAxiom - An OWL axiom that has been reified - i.e. it includes an id field that uniquely identifies that axiom and which can be the subject of additional statements RdfListStatement - A statement that is used to represent aspects of RDF lists Referenced by class Attributes Own datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType Other properties Aliases: triple Mappings: rdf:Statement In Subsets: base table","title":"Class: Statements"},{"location":"Statements/#class-statements","text":"Represents an RDF triple URI: semsql:Statements","title":"Class: Statements"},{"location":"Statements/#children","text":"NodeToNodeStatement - A statement where object is non-null and value is not populated NodeToValueStatement - A statement where value is non-null and object is not populated OwlAxiom OwlAxiomAnnotation OwlReifiedAxiom - An OWL axiom that has been reified - i.e. it includes an id field that uniquely identifies that axiom and which can be the subject of additional statements RdfListStatement - A statement that is used to represent aspects of RDF lists","title":"Children"},{"location":"Statements/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"Statements/#attributes","text":"","title":"Attributes"},{"location":"Statements/#own","text":"datatype OPT range: String language OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode stanza OPT range: Node subject OPT range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Own"},{"location":"Statements/#other-properties","text":"Aliases: triple Mappings: rdf:Statement In Subsets: base table","title":"Other properties"},{"location":"SubgraphEdgeByAncestor/","text":"Class: SubgraphEdgeByAncestor An edge within a subgraph anchored around a set of ancestor terms URI: semsql:SubgraphEdgeByAncestor Parents is_a: SubgraphQuery - A subgraph query encompasses as subgraph edge and a seed/anchor object and seed/anchor predicate Referenced by class Attributes Own anchor object OPT range: Node anchor predicate OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode subgraph edge by ancestor\u279eanchor object OPT Description: The ancestor term range: Node subgraph edge by ancestor\u279eanchor predicate OPT Description: The entailed predicate that holds between each edge subject and the ancestor range: String subject OPT range: Node Other properties Comments: {'Example': 'subgraph under uberon limb \"SELECT * FROM sg_edge WHERE anchor_object=\\'UBERON:0002101\\';\"'} {'Example': 'subgraph from part-descendants of uberon limb \"SELECT * FROM sg_edge WHERE anchor_object=\\'UBERON:0002101\\' AND ancestor_predicate=\\'BFO:0000050\\';\"'} sqlview>> SELECT edge.*, ee.predicate AS anchor_predicate, ee.object AS anchor_object FROM edge JOIN entailed_edge AS ee ON (edge.subject = ee.subject)","title":"Class: SubgraphEdgeByAncestor"},{"location":"SubgraphEdgeByAncestor/#class-subgraphedgebyancestor","text":"An edge within a subgraph anchored around a set of ancestor terms URI: semsql:SubgraphEdgeByAncestor","title":"Class: SubgraphEdgeByAncestor"},{"location":"SubgraphEdgeByAncestor/#parents","text":"is_a: SubgraphQuery - A subgraph query encompasses as subgraph edge and a seed/anchor object and seed/anchor predicate","title":"Parents"},{"location":"SubgraphEdgeByAncestor/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"SubgraphEdgeByAncestor/#attributes","text":"","title":"Attributes"},{"location":"SubgraphEdgeByAncestor/#own","text":"anchor object OPT range: Node anchor predicate OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode subgraph edge by ancestor\u279eanchor object OPT Description: The ancestor term range: Node subgraph edge by ancestor\u279eanchor predicate OPT Description: The entailed predicate that holds between each edge subject and the ancestor range: String subject OPT range: Node","title":"Own"},{"location":"SubgraphEdgeByAncestor/#other-properties","text":"Comments: {'Example': 'subgraph under uberon limb \"SELECT * FROM sg_edge WHERE anchor_object=\\'UBERON:0002101\\';\"'} {'Example': 'subgraph from part-descendants of uberon limb \"SELECT * FROM sg_edge WHERE anchor_object=\\'UBERON:0002101\\' AND ancestor_predicate=\\'BFO:0000050\\';\"'} sqlview>> SELECT edge.*, ee.predicate AS anchor_predicate, ee.object AS anchor_object FROM edge JOIN entailed_edge AS ee ON (edge.subject = ee.subject)","title":"Other properties"},{"location":"SubgraphEdgeByChild/","text":"Class: SubgraphEdgeByChild An edge within a subgraph anchored around a set of child terms URI: semsql:SubgraphEdgeByChild Parents is_a: SubgraphQuery - A subgraph query encompasses as subgraph edge and a seed/anchor object and seed/anchor predicate Referenced by class Attributes Own anchor object OPT range: Node anchor predicate OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode subgraph edge by child\u279eanchor object OPT Description: The child term range: Node subgraph edge by child\u279eanchor predicate OPT Description: The entailed predicate that holds between the child and each edge subject range: String subject OPT range: Node Other properties Comments: sqlview>> SELECT edge.*, ee.predicate AS anchor_predicate, ee.subject AS anchor_object FROM edge JOIN edge AS ee ON (edge.subject = ee.object)","title":"Class: SubgraphEdgeByChild"},{"location":"SubgraphEdgeByChild/#class-subgraphedgebychild","text":"An edge within a subgraph anchored around a set of child terms URI: semsql:SubgraphEdgeByChild","title":"Class: SubgraphEdgeByChild"},{"location":"SubgraphEdgeByChild/#parents","text":"is_a: SubgraphQuery - A subgraph query encompasses as subgraph edge and a seed/anchor object and seed/anchor predicate","title":"Parents"},{"location":"SubgraphEdgeByChild/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"SubgraphEdgeByChild/#attributes","text":"","title":"Attributes"},{"location":"SubgraphEdgeByChild/#own","text":"anchor object OPT range: Node anchor predicate OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode subgraph edge by child\u279eanchor object OPT Description: The child term range: Node subgraph edge by child\u279eanchor predicate OPT Description: The entailed predicate that holds between the child and each edge subject range: String subject OPT range: Node","title":"Own"},{"location":"SubgraphEdgeByChild/#other-properties","text":"Comments: sqlview>> SELECT edge.*, ee.predicate AS anchor_predicate, ee.subject AS anchor_object FROM edge JOIN edge AS ee ON (edge.subject = ee.object)","title":"Other properties"},{"location":"SubgraphEdgeByDescendant/","text":"Class: SubgraphEdgeByDescendant An edge within a subgraph anchored around a set of descendant terms URI: semsql:SubgraphEdgeByDescendant Parents is_a: SubgraphQuery - A subgraph query encompasses as subgraph edge and a seed/anchor object and seed/anchor predicate Referenced by class Attributes Own anchor object OPT range: Node anchor predicate OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode subgraph edge by descendant\u279eanchor object OPT Description: The descendant term range: Node subgraph edge by descendant\u279eanchor predicate OPT Description: The entailed predicate that holds between the descendant and each edge subject range: String subject OPT range: Node Other properties Comments: {'Example': 'subgraph under uberon limb \"SELECT * FROM sg_edge WHERE anchor_object=\\'UBERON:0002101\\';\"'} sqlview>> SELECT edge.*, ee.predicate AS anchor_predicate, ee.subject AS anchor_object FROM edge JOIN entailed_edge AS ee ON (edge.subject = ee.object)","title":"Class: SubgraphEdgeByDescendant"},{"location":"SubgraphEdgeByDescendant/#class-subgraphedgebydescendant","text":"An edge within a subgraph anchored around a set of descendant terms URI: semsql:SubgraphEdgeByDescendant","title":"Class: SubgraphEdgeByDescendant"},{"location":"SubgraphEdgeByDescendant/#parents","text":"is_a: SubgraphQuery - A subgraph query encompasses as subgraph edge and a seed/anchor object and seed/anchor predicate","title":"Parents"},{"location":"SubgraphEdgeByDescendant/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"SubgraphEdgeByDescendant/#attributes","text":"","title":"Attributes"},{"location":"SubgraphEdgeByDescendant/#own","text":"anchor object OPT range: Node anchor predicate OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode subgraph edge by descendant\u279eanchor object OPT Description: The descendant term range: Node subgraph edge by descendant\u279eanchor predicate OPT Description: The entailed predicate that holds between the descendant and each edge subject range: String subject OPT range: Node","title":"Own"},{"location":"SubgraphEdgeByDescendant/#other-properties","text":"Comments: {'Example': 'subgraph under uberon limb \"SELECT * FROM sg_edge WHERE anchor_object=\\'UBERON:0002101\\';\"'} sqlview>> SELECT edge.*, ee.predicate AS anchor_predicate, ee.subject AS anchor_object FROM edge JOIN entailed_edge AS ee ON (edge.subject = ee.object)","title":"Other properties"},{"location":"SubgraphEdgeByParent/","text":"Class: SubgraphEdgeByParent An edge within a subgraph anchored around a set of parent terms URI: semsql:SubgraphEdgeByParent Parents is_a: SubgraphQuery - A subgraph query encompasses as subgraph edge and a seed/anchor object and seed/anchor predicate Referenced by class Attributes Own anchor object OPT range: Node anchor predicate OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode subgraph edge by parent\u279eanchor object OPT Description: The parent term range: Node subgraph edge by parent\u279eanchor predicate OPT Description: The entailed predicate that holds between each edge subject and the parent range: String subject OPT range: Node Other properties Comments: sqlview>> SELECT edge.*, ee.predicate AS anchor_predicate, ee.object AS anchor_object FROM edge JOIN edge AS ee ON (edge.subject = ee.subject)","title":"Class: SubgraphEdgeByParent"},{"location":"SubgraphEdgeByParent/#class-subgraphedgebyparent","text":"An edge within a subgraph anchored around a set of parent terms URI: semsql:SubgraphEdgeByParent","title":"Class: SubgraphEdgeByParent"},{"location":"SubgraphEdgeByParent/#parents","text":"is_a: SubgraphQuery - A subgraph query encompasses as subgraph edge and a seed/anchor object and seed/anchor predicate","title":"Parents"},{"location":"SubgraphEdgeByParent/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"SubgraphEdgeByParent/#attributes","text":"","title":"Attributes"},{"location":"SubgraphEdgeByParent/#own","text":"anchor object OPT range: Node anchor predicate OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode subgraph edge by parent\u279eanchor object OPT Description: The parent term range: Node subgraph edge by parent\u279eanchor predicate OPT Description: The entailed predicate that holds between each edge subject and the parent range: String subject OPT range: Node","title":"Own"},{"location":"SubgraphEdgeByParent/#other-properties","text":"Comments: sqlview>> SELECT edge.*, ee.predicate AS anchor_predicate, ee.object AS anchor_object FROM edge JOIN edge AS ee ON (edge.subject = ee.subject)","title":"Other properties"},{"location":"SubgraphEdgeBySelf/","text":"Class: SubgraphEdgeBySelf A special null form of a subgraph query where there is no expansion URI: semsql:SubgraphEdgeBySelf Parents is_a: SubgraphQuery - A subgraph query encompasses as subgraph edge and a seed/anchor object and seed/anchor predicate Attributes Own anchor object OPT range: Node anchor predicate OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode subject OPT range: Node Other properties Comments: sqlview>> SELECT edge.*, edge.predicate AS anchor_predicate, edge.subject AS anchor_object FROM edge","title":"Class: SubgraphEdgeBySelf"},{"location":"SubgraphEdgeBySelf/#class-subgraphedgebyself","text":"A special null form of a subgraph query where there is no expansion URI: semsql:SubgraphEdgeBySelf","title":"Class: SubgraphEdgeBySelf"},{"location":"SubgraphEdgeBySelf/#parents","text":"is_a: SubgraphQuery - A subgraph query encompasses as subgraph edge and a seed/anchor object and seed/anchor predicate","title":"Parents"},{"location":"SubgraphEdgeBySelf/#attributes","text":"","title":"Attributes"},{"location":"SubgraphEdgeBySelf/#own","text":"anchor object OPT range: Node anchor predicate OPT range: String object OPT Description: Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated range: Node predicate OPT range: PropertyNode subject OPT range: Node","title":"Own"},{"location":"SubgraphEdgeBySelf/#other-properties","text":"Comments: sqlview>> SELECT edge.*, edge.predicate AS anchor_predicate, edge.subject AS anchor_object FROM edge","title":"Other properties"},{"location":"SubgraphQuery/","text":"Class: SubgraphQuery A subgraph query encompasses as subgraph edge and a seed/anchor object and seed/anchor predicate URI: semsql:SubgraphQuery Parents is_a: RelationGraphConstruct - A construct used as part of a Relation Graph Children SubgraphEdgeByAncestor - An edge within a subgraph anchored around a set of ancestor terms SubgraphEdgeByChild - An edge within a subgraph anchored around a set of child terms SubgraphEdgeByDescendant - An edge within a subgraph anchored around a set of descendant terms SubgraphEdgeByParent - An edge within a subgraph anchored around a set of parent terms SubgraphEdgeBySelf - A special null form of a subgraph query where there is no expansion Referenced by class Attributes Own subgraph query\u279eanchor object OPT Description: The entity that is used to seed the graph. The seed entity will bear some relationship to each subgraph edge; E.g. with an ancestor subgraph query, all edges will have a subject that descends from the ancestor range: Node subgraph query\u279eanchor predicate OPT Description: The predicate that is used to determine if an edge should be included based on relationship to the anchor_object. range: String subgraph query\u279eobject OPT Description: object of the subgraph edge range: Node subgraph query\u279epredicate OPT Description: predicate of the subgraph edge range: PropertyNode subgraph query\u279esubject OPT Description: subject of the subgraph edge range: Node","title":"Class: SubgraphQuery"},{"location":"SubgraphQuery/#class-subgraphquery","text":"A subgraph query encompasses as subgraph edge and a seed/anchor object and seed/anchor predicate URI: semsql:SubgraphQuery","title":"Class: SubgraphQuery"},{"location":"SubgraphQuery/#parents","text":"is_a: RelationGraphConstruct - A construct used as part of a Relation Graph","title":"Parents"},{"location":"SubgraphQuery/#children","text":"SubgraphEdgeByAncestor - An edge within a subgraph anchored around a set of ancestor terms SubgraphEdgeByChild - An edge within a subgraph anchored around a set of child terms SubgraphEdgeByDescendant - An edge within a subgraph anchored around a set of descendant terms SubgraphEdgeByParent - An edge within a subgraph anchored around a set of parent terms SubgraphEdgeBySelf - A special null form of a subgraph query where there is no expansion","title":"Children"},{"location":"SubgraphQuery/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"SubgraphQuery/#attributes","text":"","title":"Attributes"},{"location":"SubgraphQuery/#own","text":"subgraph query\u279eanchor object OPT Description: The entity that is used to seed the graph. The seed entity will bear some relationship to each subgraph edge; E.g. with an ancestor subgraph query, all edges will have a subject that descends from the ancestor range: Node subgraph query\u279eanchor predicate OPT Description: The predicate that is used to determine if an edge should be included based on relationship to the anchor_object. range: String subgraph query\u279eobject OPT Description: object of the subgraph edge range: Node subgraph query\u279epredicate OPT Description: predicate of the subgraph edge range: PropertyNode subgraph query\u279esubject OPT Description: subject of the subgraph edge range: Node","title":"Own"},{"location":"SymmetricPropertyNode/","text":"Class: SymmetricPropertyNode A node representing an OWL symmetric object property URI: semsql:SymmetricPropertyNode Parents is_a: ObjectPropertyNode - A node representing an OWL object property Attributes Inherited from object property node: id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType Other properties Comments: sqlview>> SELECT DISTINCT subject AS id FROM rdf_type_statement WHERE object='owl:SymmetricProperty'","title":"Class: SymmetricPropertyNode"},{"location":"SymmetricPropertyNode/#class-symmetricpropertynode","text":"A node representing an OWL symmetric object property URI: semsql:SymmetricPropertyNode","title":"Class: SymmetricPropertyNode"},{"location":"SymmetricPropertyNode/#parents","text":"is_a: ObjectPropertyNode - A node representing an OWL object property","title":"Parents"},{"location":"SymmetricPropertyNode/#attributes","text":"","title":"Attributes"},{"location":"SymmetricPropertyNode/#inherited-from-object-property-node","text":"id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType","title":"Inherited from object property node:"},{"location":"SymmetricPropertyNode/#other-properties","text":"Comments: sqlview>> SELECT DISTINCT subject AS id FROM rdf_type_statement WHERE object='owl:SymmetricProperty'","title":"Other properties"},{"location":"TodoNode/","text":"Class: TodoNode URI: semsql.owl:TodoNode Children OntologyNode Referenced by class Attributes","title":"Class: TodoNode"},{"location":"TodoNode/#class-todonode","text":"URI: semsql.owl:TodoNode","title":"Class: TodoNode"},{"location":"TodoNode/#children","text":"OntologyNode","title":"Children"},{"location":"TodoNode/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"TodoNode/#attributes","text":"","title":"Attributes"},{"location":"TrailingWhitespaceProblem/","text":"Class: TrailingWhitespaceProblem URI: semsql:TrailingWhitespaceProblem Parents is_a: Problem - Represents an instance of a problem pertaining to conformance to OBO guidelines Attributes Inherited from problem: problem\u279epredicate OPT Description: The property of the thing that is problematic range: PropertyNode problem\u279esubject OPT Description: The thing that is problematic range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType Other properties Comments: sqlview>> SELECT subject, predicate, value FROM statements WHERE VALUE like ' %' OR VALUE like '% '","title":"Class: TrailingWhitespaceProblem"},{"location":"TrailingWhitespaceProblem/#class-trailingwhitespaceproblem","text":"URI: semsql:TrailingWhitespaceProblem","title":"Class: TrailingWhitespaceProblem"},{"location":"TrailingWhitespaceProblem/#parents","text":"is_a: Problem - Represents an instance of a problem pertaining to conformance to OBO guidelines","title":"Parents"},{"location":"TrailingWhitespaceProblem/#attributes","text":"","title":"Attributes"},{"location":"TrailingWhitespaceProblem/#inherited-from-problem","text":"problem\u279epredicate OPT Description: The property of the thing that is problematic range: PropertyNode problem\u279esubject OPT Description: The thing that is problematic range: Node value OPT Description: Note the range of this slot is always a string. Only used the triple represents a literal assertion range: LiteralAsStringType","title":"Inherited from problem:"},{"location":"TrailingWhitespaceProblem/#other-properties","text":"Comments: sqlview>> SELECT subject, predicate, value FROM statements WHERE VALUE like ' %' OR VALUE like '% '","title":"Other properties"},{"location":"TransitivePropertyNode/","text":"Class: TransitivePropertyNode A node representing an OWL transitive object property URI: semsql:TransitivePropertyNode Parents is_a: ObjectPropertyNode - A node representing an OWL object property Attributes Inherited from object property node: id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType Other properties Comments: sqlview>> SELECT DISTINCT subject AS id FROM rdf_type_statement WHERE object='owl:TransitiveProperty'","title":"Class: TransitivePropertyNode"},{"location":"TransitivePropertyNode/#class-transitivepropertynode","text":"A node representing an OWL transitive object property URI: semsql:TransitivePropertyNode","title":"Class: TransitivePropertyNode"},{"location":"TransitivePropertyNode/#parents","text":"is_a: ObjectPropertyNode - A node representing an OWL object property","title":"Parents"},{"location":"TransitivePropertyNode/#attributes","text":"","title":"Attributes"},{"location":"TransitivePropertyNode/#inherited-from-object-property-node","text":"id REQ Description: An identifier for an element. Note blank node ids are not unique across databases range: NodeIdType","title":"Inherited from object property node:"},{"location":"TransitivePropertyNode/#other-properties","text":"Comments: sqlview>> SELECT DISTINCT subject AS id FROM rdf_type_statement WHERE object='owl:TransitiveProperty'","title":"Other properties"},{"location":"anchor_object/","text":"Slot: anchor_object URI: semsql:anchor_object Domain and Range None -> OPT Node Parents Children subgraph query\u279eanchor object Used by SubgraphEdgeByAncestor SubgraphEdgeByChild SubgraphEdgeByDescendant SubgraphEdgeByParent SubgraphEdgeBySelf","title":"Slot: anchor_object"},{"location":"anchor_object/#slot-anchor_object","text":"URI: semsql:anchor_object","title":"Slot: anchor_object"},{"location":"anchor_object/#domain-and-range","text":"None -> OPT Node","title":"Domain and Range"},{"location":"anchor_object/#parents","text":"","title":"Parents"},{"location":"anchor_object/#children","text":"subgraph query\u279eanchor object","title":"Children"},{"location":"anchor_object/#used-by","text":"SubgraphEdgeByAncestor SubgraphEdgeByChild SubgraphEdgeByDescendant SubgraphEdgeByParent SubgraphEdgeBySelf","title":"Used by"},{"location":"anchor_predicate/","text":"Slot: anchor_predicate URI: semsql:anchor_predicate Domain and Range None -> OPT String Parents Children subgraph query\u279eanchor predicate Used by SubgraphEdgeByAncestor SubgraphEdgeByChild SubgraphEdgeByDescendant SubgraphEdgeByParent SubgraphEdgeBySelf","title":"Slot: anchor_predicate"},{"location":"anchor_predicate/#slot-anchor_predicate","text":"URI: semsql:anchor_predicate","title":"Slot: anchor_predicate"},{"location":"anchor_predicate/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"anchor_predicate/#parents","text":"","title":"Parents"},{"location":"anchor_predicate/#children","text":"subgraph query\u279eanchor predicate","title":"Children"},{"location":"anchor_predicate/#used-by","text":"SubgraphEdgeByAncestor SubgraphEdgeByChild SubgraphEdgeByDescendant SubgraphEdgeByParent SubgraphEdgeBySelf","title":"Used by"},{"location":"axiom_datatype/","text":"Slot: axiom_datatype URI: semsql:axiom_datatype Domain and Range None -> OPT String Parents Children Used by AxiomDbxrefAnnotation OwlAxiomAnnotation","title":"Slot: axiom_datatype"},{"location":"axiom_datatype/#slot-axiom_datatype","text":"URI: semsql:axiom_datatype","title":"Slot: axiom_datatype"},{"location":"axiom_datatype/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"axiom_datatype/#parents","text":"","title":"Parents"},{"location":"axiom_datatype/#children","text":"","title":"Children"},{"location":"axiom_datatype/#used-by","text":"AxiomDbxrefAnnotation OwlAxiomAnnotation","title":"Used by"},{"location":"axiom_language/","text":"Slot: axiom_language URI: semsql:axiom_language Domain and Range None -> OPT String Parents Children Used by AxiomDbxrefAnnotation OwlAxiomAnnotation","title":"Slot: axiom_language"},{"location":"axiom_language/#slot-axiom_language","text":"URI: semsql:axiom_language","title":"Slot: axiom_language"},{"location":"axiom_language/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"axiom_language/#parents","text":"","title":"Parents"},{"location":"axiom_language/#children","text":"","title":"Children"},{"location":"axiom_language/#used-by","text":"AxiomDbxrefAnnotation OwlAxiomAnnotation","title":"Used by"},{"location":"axiom_object/","text":"Slot: axiom_object URI: semsql:axiom_object Domain and Range None -> OPT String Parents Children Used by AxiomDbxrefAnnotation OwlAxiomAnnotation","title":"Slot: axiom_object"},{"location":"axiom_object/#slot-axiom_object","text":"URI: semsql:axiom_object","title":"Slot: axiom_object"},{"location":"axiom_object/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"axiom_object/#parents","text":"","title":"Parents"},{"location":"axiom_object/#children","text":"","title":"Children"},{"location":"axiom_object/#used-by","text":"AxiomDbxrefAnnotation OwlAxiomAnnotation","title":"Used by"},{"location":"axiom_predicate/","text":"Slot: axiom_predicate URI: semsql:axiom_predicate Domain and Range None -> OPT String Parents Children Used by AxiomDbxrefAnnotation OwlAxiomAnnotation","title":"Slot: axiom_predicate"},{"location":"axiom_predicate/#slot-axiom_predicate","text":"URI: semsql:axiom_predicate","title":"Slot: axiom_predicate"},{"location":"axiom_predicate/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"axiom_predicate/#parents","text":"","title":"Parents"},{"location":"axiom_predicate/#children","text":"","title":"Children"},{"location":"axiom_predicate/#used-by","text":"AxiomDbxrefAnnotation OwlAxiomAnnotation","title":"Used by"},{"location":"axiom_value/","text":"Slot: axiom_value URI: semsql:axiom_value Domain and Range None -> OPT String Parents Children Used by AxiomDbxrefAnnotation OwlAxiomAnnotation","title":"Slot: axiom_value"},{"location":"axiom_value/#slot-axiom_value","text":"URI: semsql:axiom_value","title":"Slot: axiom_value"},{"location":"axiom_value/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"axiom_value/#parents","text":"","title":"Parents"},{"location":"axiom_value/#children","text":"","title":"Children"},{"location":"axiom_value/#used-by","text":"AxiomDbxrefAnnotation OwlAxiomAnnotation","title":"Used by"},{"location":"base/","text":"Slot: base The base URI a prefix will expand to URI: semsql:base Domain and Range None -> OPT Uri Parents Children Used by Prefix Other properties Mappings: sh:namespace","title":"Slot: base"},{"location":"base/#slot-base","text":"The base URI a prefix will expand to URI: semsql:base","title":"Slot: base"},{"location":"base/#domain-and-range","text":"None -> OPT Uri","title":"Domain and Range"},{"location":"base/#parents","text":"","title":"Parents"},{"location":"base/#children","text":"","title":"Children"},{"location":"base/#used-by","text":"Prefix","title":"Used by"},{"location":"base/#other-properties","text":"Mappings: sh:namespace","title":"Other properties"},{"location":"datatype/","text":"Slot: datatype URI: semsql:datatype Domain and Range None -> OPT String Parents Children Used by AxiomDbxrefAnnotation HasBroadMatchStatement HasBroadSynonymStatement HasDbxrefStatement HasExactMatchStatement HasExactSynonymStatement HasMappingStatement HasMatchStatement HasNarrowMatchStatement HasNarrowSynonymStatement HasOioSynonymStatement HasRelatedMatchStatement HasRelatedSynonymStatement HasSynonymStatement HasTextDefinitionStatement NodeToNodeStatement NodeToValueStatement OntologyStatusStatement OwlAxiom OwlAxiomAnnotation OwlComplementOfStatement OwlDisjointClassStatement OwlEquivalentClassStatement OwlImportsStatement OwlInverseOfStatement OwlReifiedAxiom OwlSameAsStatement RdfFirstStatement RdfListMemberStatement RdfListStatement RdfRestStatement RdfRestTransitiveStatement RdfTypeStatement RdfsDomainStatement RdfsLabelStatement RdfsRangeStatement RdfsSubclassOfNamedStatement RdfsSubclassOfStatement RdfsSubpropertyOfStatement Statements","title":"Slot: datatype"},{"location":"datatype/#slot-datatype","text":"URI: semsql:datatype","title":"Slot: datatype"},{"location":"datatype/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"datatype/#parents","text":"","title":"Parents"},{"location":"datatype/#children","text":"","title":"Children"},{"location":"datatype/#used-by","text":"AxiomDbxrefAnnotation HasBroadMatchStatement HasBroadSynonymStatement HasDbxrefStatement HasExactMatchStatement HasExactSynonymStatement HasMappingStatement HasMatchStatement HasNarrowMatchStatement HasNarrowSynonymStatement HasOioSynonymStatement HasRelatedMatchStatement HasRelatedSynonymStatement HasSynonymStatement HasTextDefinitionStatement NodeToNodeStatement NodeToValueStatement OntologyStatusStatement OwlAxiom OwlAxiomAnnotation OwlComplementOfStatement OwlDisjointClassStatement OwlEquivalentClassStatement OwlImportsStatement OwlInverseOfStatement OwlReifiedAxiom OwlSameAsStatement RdfFirstStatement RdfListMemberStatement RdfListStatement RdfRestStatement RdfRestTransitiveStatement RdfTypeStatement RdfsDomainStatement RdfsLabelStatement RdfsRangeStatement RdfsSubclassOfNamedStatement RdfsSubclassOfStatement RdfsSubpropertyOfStatement Statements","title":"Used by"},{"location":"description/","text":"Slot: description URI: semsql:description Domain and Range None -> OPT String Parents Children Used by RepairAction Other properties Mappings: dcterms:description","title":"Slot: description"},{"location":"description/#slot-description","text":"URI: semsql:description","title":"Slot: description"},{"location":"description/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"description/#parents","text":"","title":"Parents"},{"location":"description/#children","text":"","title":"Children"},{"location":"description/#used-by","text":"RepairAction","title":"Used by"},{"location":"description/#other-properties","text":"Mappings: dcterms:description","title":"Other properties"},{"location":"filler/","text":"Slot: filler URI: semsql:filler Domain and Range None -> OPT ClassNode Parents Children owl has self\u279efiller Used by OwlAllValuesFrom OwlHasValue OwlRestriction OwlSomeValuesFrom","title":"Slot: filler"},{"location":"filler/#slot-filler","text":"URI: semsql:filler","title":"Slot: filler"},{"location":"filler/#domain-and-range","text":"None -> OPT ClassNode","title":"Domain and Range"},{"location":"filler/#parents","text":"","title":"Parents"},{"location":"filler/#children","text":"owl has self\u279efiller","title":"Children"},{"location":"filler/#used-by","text":"OwlAllValuesFrom OwlHasValue OwlRestriction OwlSomeValuesFrom","title":"Used by"},{"location":"id/","text":"Slot: id An identifier for an element. Note blank node ids are not unique across databases URI: semsql:id Domain and Range None -> REQ NodeIdType Parents Children iri node\u279eid owl restriction\u279eid Used by AnnotationPropertyNode AnonymousClassExpression AnonymousExpression AnonymousIndividualExpression AnonymousPropertyExpression AsymmetricPropertyNode BlankNode ClassNode DeprecatedNode IrreflexivePropertyNode NamedIndividualNode Node ObjectPropertyNode OntologyNode OwlAxiom OwlReifiedAxiom PropertyNode RdfListNode ReflexivePropertyNode SymmetricPropertyNode TransitivePropertyNode","title":"Slot: id"},{"location":"id/#slot-id","text":"An identifier for an element. Note blank node ids are not unique across databases URI: semsql:id","title":"Slot: id"},{"location":"id/#domain-and-range","text":"None -> REQ NodeIdType","title":"Domain and Range"},{"location":"id/#parents","text":"","title":"Parents"},{"location":"id/#children","text":"iri node\u279eid owl restriction\u279eid","title":"Children"},{"location":"id/#used-by","text":"AnnotationPropertyNode AnonymousClassExpression AnonymousExpression AnonymousIndividualExpression AnonymousPropertyExpression AsymmetricPropertyNode BlankNode ClassNode DeprecatedNode IrreflexivePropertyNode NamedIndividualNode Node ObjectPropertyNode OntologyNode OwlAxiom OwlReifiedAxiom PropertyNode RdfListNode ReflexivePropertyNode SymmetricPropertyNode TransitivePropertyNode","title":"Used by"},{"location":"iri_node_id/","text":"Slot: iri_node_id URI: semsql:iri_node_id Domain and Range IriNode -> REQ NodeIdType Parents is_a: id Children Used by IriNode","title":"Slot: iri_node_id"},{"location":"iri_node_id/#slot-iri_node_id","text":"URI: semsql:iri_node_id","title":"Slot: iri_node_id"},{"location":"iri_node_id/#domain-and-range","text":"IriNode -> REQ NodeIdType","title":"Domain and Range"},{"location":"iri_node_id/#parents","text":"is_a: id","title":"Parents"},{"location":"iri_node_id/#children","text":"","title":"Children"},{"location":"iri_node_id/#used-by","text":"IriNode","title":"Used by"},{"location":"language/","text":"Slot: language URI: semsql:language Domain and Range None -> OPT String Parents Children Used by AxiomDbxrefAnnotation HasBroadMatchStatement HasBroadSynonymStatement HasDbxrefStatement HasExactMatchStatement HasExactSynonymStatement HasMappingStatement HasMatchStatement HasNarrowMatchStatement HasNarrowSynonymStatement HasOioSynonymStatement HasRelatedMatchStatement HasRelatedSynonymStatement HasSynonymStatement HasTextDefinitionStatement NodeToNodeStatement NodeToValueStatement OntologyStatusStatement OwlAxiom OwlAxiomAnnotation OwlComplementOfStatement OwlDisjointClassStatement OwlEquivalentClassStatement OwlImportsStatement OwlInverseOfStatement OwlReifiedAxiom OwlSameAsStatement RdfFirstStatement RdfListMemberStatement RdfListStatement RdfRestStatement RdfRestTransitiveStatement RdfTypeStatement RdfsDomainStatement RdfsLabelStatement RdfsRangeStatement RdfsSubclassOfNamedStatement RdfsSubclassOfStatement RdfsSubpropertyOfStatement Statements","title":"Slot: language"},{"location":"language/#slot-language","text":"URI: semsql:language","title":"Slot: language"},{"location":"language/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"language/#parents","text":"","title":"Parents"},{"location":"language/#children","text":"","title":"Children"},{"location":"language/#used-by","text":"AxiomDbxrefAnnotation HasBroadMatchStatement HasBroadSynonymStatement HasDbxrefStatement HasExactMatchStatement HasExactSynonymStatement HasMappingStatement HasMatchStatement HasNarrowMatchStatement HasNarrowSynonymStatement HasOioSynonymStatement HasRelatedMatchStatement HasRelatedSynonymStatement HasSynonymStatement HasTextDefinitionStatement NodeToNodeStatement NodeToValueStatement OntologyStatusStatement OwlAxiom OwlAxiomAnnotation OwlComplementOfStatement OwlDisjointClassStatement OwlEquivalentClassStatement OwlImportsStatement OwlInverseOfStatement OwlReifiedAxiom OwlSameAsStatement RdfFirstStatement RdfListMemberStatement RdfListStatement RdfRestStatement RdfRestTransitiveStatement RdfTypeStatement RdfsDomainStatement RdfsLabelStatement RdfsRangeStatement RdfsSubclassOfNamedStatement RdfsSubclassOfStatement RdfsSubpropertyOfStatement Statements","title":"Used by"},{"location":"nodeWithTwoLabelsProblem__label1/","text":"Slot: nodeWithTwoLabelsProblem__label1 URI: semsql:nodeWithTwoLabelsProblem__label1 Domain and Range None -> OPT String Parents Children Used by NodeWithTwoLabelsProblem","title":"Slot: nodeWithTwoLabelsProblem__label1"},{"location":"nodeWithTwoLabelsProblem__label1/#slot-nodewithtwolabelsproblem__label1","text":"URI: semsql:nodeWithTwoLabelsProblem__label1","title":"Slot: nodeWithTwoLabelsProblem__label1"},{"location":"nodeWithTwoLabelsProblem__label1/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"nodeWithTwoLabelsProblem__label1/#parents","text":"","title":"Parents"},{"location":"nodeWithTwoLabelsProblem__label1/#children","text":"","title":"Children"},{"location":"nodeWithTwoLabelsProblem__label1/#used-by","text":"NodeWithTwoLabelsProblem","title":"Used by"},{"location":"nodeWithTwoLabelsProblem__label2/","text":"Slot: nodeWithTwoLabelsProblem__label2 URI: semsql:nodeWithTwoLabelsProblem__label2 Domain and Range None -> OPT String Parents Children Used by NodeWithTwoLabelsProblem","title":"Slot: nodeWithTwoLabelsProblem__label2"},{"location":"nodeWithTwoLabelsProblem__label2/#slot-nodewithtwolabelsproblem__label2","text":"URI: semsql:nodeWithTwoLabelsProblem__label2","title":"Slot: nodeWithTwoLabelsProblem__label2"},{"location":"nodeWithTwoLabelsProblem__label2/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"nodeWithTwoLabelsProblem__label2/#parents","text":"","title":"Parents"},{"location":"nodeWithTwoLabelsProblem__label2/#children","text":"","title":"Children"},{"location":"nodeWithTwoLabelsProblem__label2/#used-by","text":"NodeWithTwoLabelsProblem","title":"Used by"},{"location":"node_to_node_statement_object/","text":"Slot: node_to_node_statement_object URI: semsql:node_to_node_statement_object Domain and Range NodeToNodeStatement -> REQ Node Parents is_a: object Children owl disjoint class statement\u279eobject owl equivalent class statement\u279eobject owl same as statement\u279eobject rdf type statement\u279eobject rdfs subclass of statement\u279eobject rdfs subproperty of statement\u279eobject Used by NodeToNodeStatement OwlComplementOfStatement OwlImportsStatement OwlInverseOfStatement RdfsDomainStatement RdfsRangeStatement","title":"Slot: node_to_node_statement_object"},{"location":"node_to_node_statement_object/#slot-node_to_node_statement_object","text":"URI: semsql:node_to_node_statement_object","title":"Slot: node_to_node_statement_object"},{"location":"node_to_node_statement_object/#domain-and-range","text":"NodeToNodeStatement -> REQ Node","title":"Domain and Range"},{"location":"node_to_node_statement_object/#parents","text":"is_a: object","title":"Parents"},{"location":"node_to_node_statement_object/#children","text":"owl disjoint class statement\u279eobject owl equivalent class statement\u279eobject owl same as statement\u279eobject rdf type statement\u279eobject rdfs subclass of statement\u279eobject rdfs subproperty of statement\u279eobject","title":"Children"},{"location":"node_to_node_statement_object/#used-by","text":"NodeToNodeStatement OwlComplementOfStatement OwlImportsStatement OwlInverseOfStatement RdfsDomainStatement RdfsRangeStatement","title":"Used by"},{"location":"node_to_value_statement_value/","text":"Slot: node_to_value_statement_value URI: semsql:node_to_value_statement_value Domain and Range NodeToValueStatement -> REQ LiteralAsStringType Parents is_a: value Children rdfs label statement\u279evalue Used by HasBroadMatchStatement HasBroadSynonymStatement HasDbxrefStatement HasExactMatchStatement HasExactSynonymStatement HasMappingStatement HasMatchStatement HasNarrowMatchStatement HasNarrowSynonymStatement HasOioSynonymStatement HasRelatedMatchStatement HasRelatedSynonymStatement HasSynonymStatement HasTextDefinitionStatement NodeToValueStatement OntologyStatusStatement","title":"Slot: node_to_value_statement_value"},{"location":"node_to_value_statement_value/#slot-node_to_value_statement_value","text":"URI: semsql:node_to_value_statement_value","title":"Slot: node_to_value_statement_value"},{"location":"node_to_value_statement_value/#domain-and-range","text":"NodeToValueStatement -> REQ LiteralAsStringType","title":"Domain and Range"},{"location":"node_to_value_statement_value/#parents","text":"is_a: value","title":"Parents"},{"location":"node_to_value_statement_value/#children","text":"rdfs label statement\u279evalue","title":"Children"},{"location":"node_to_value_statement_value/#used-by","text":"HasBroadMatchStatement HasBroadSynonymStatement HasDbxrefStatement HasExactMatchStatement HasExactSynonymStatement HasMappingStatement HasMatchStatement HasNarrowMatchStatement HasNarrowSynonymStatement HasOioSynonymStatement HasRelatedMatchStatement HasRelatedSynonymStatement HasSynonymStatement HasTextDefinitionStatement NodeToValueStatement OntologyStatusStatement","title":"Used by"},{"location":"object/","text":"Slot: object Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated URI: semsql:object Domain and Range None -> OPT Node Parents Children node to node statement\u279eobject owl equivalent to intersection member\u279eobject owl subclass of some values from\u279eobject subgraph query\u279eobject Used by AxiomDbxrefAnnotation Edge EntailedEdge HasBroadMatchStatement HasBroadSynonymStatement HasDbxrefStatement HasExactMatchStatement HasExactSynonymStatement HasMappingStatement HasMatchStatement HasNarrowMatchStatement HasNarrowSynonymStatement HasOioSynonymStatement HasRelatedMatchStatement HasRelatedSynonymStatement HasSynonymStatement HasTextDefinitionStatement NodeToValueStatement OntologyStatusStatement OwlAxiom OwlAxiomAnnotation OwlReifiedAxiom RdfFirstStatement RdfListMemberStatement RdfListStatement RdfRestStatement RdfRestTransitiveStatement RdfsLabelStatement Statements SubgraphEdgeByAncestor SubgraphEdgeByChild SubgraphEdgeByDescendant SubgraphEdgeByParent SubgraphEdgeBySelf Other properties Mappings: rdf:object","title":"Slot: object"},{"location":"object/#slot-object","text":"Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated URI: semsql:object","title":"Slot: object"},{"location":"object/#domain-and-range","text":"None -> OPT Node","title":"Domain and Range"},{"location":"object/#parents","text":"","title":"Parents"},{"location":"object/#children","text":"node to node statement\u279eobject owl equivalent to intersection member\u279eobject owl subclass of some values from\u279eobject subgraph query\u279eobject","title":"Children"},{"location":"object/#used-by","text":"AxiomDbxrefAnnotation Edge EntailedEdge HasBroadMatchStatement HasBroadSynonymStatement HasDbxrefStatement HasExactMatchStatement HasExactSynonymStatement HasMappingStatement HasMatchStatement HasNarrowMatchStatement HasNarrowSynonymStatement HasOioSynonymStatement HasRelatedMatchStatement HasRelatedSynonymStatement HasSynonymStatement HasTextDefinitionStatement NodeToValueStatement OntologyStatusStatement OwlAxiom OwlAxiomAnnotation OwlReifiedAxiom RdfFirstStatement RdfListMemberStatement RdfListStatement RdfRestStatement RdfRestTransitiveStatement RdfsLabelStatement Statements SubgraphEdgeByAncestor SubgraphEdgeByChild SubgraphEdgeByDescendant SubgraphEdgeByParent SubgraphEdgeBySelf","title":"Used by"},{"location":"object/#other-properties","text":"Mappings: rdf:object","title":"Other properties"},{"location":"obo_index/","text":"Semsql_Obo schema Abstractions for working with OBO ontologies. Assumes usage of OMO. Currently this module contains mostly checks/reports, similar to ROBOT report Classes Node - The basic unit of representation in an RDF or OWL graph BlankNode - A node with an ID that is not preserved between databases AnonymousExpression - An OWL expression, such as a class expression. Expressions are \"anonymous\" as they are a composition of named elements rather than a named element themselves AnonymousClassExpression - An OWL anonymous class expression, such as for example SomeValuesFrom(partOf Hand) OwlRestriction - An OWL restriction, such as SomeValuesFrom(partOf Hand) OwlAllValuesFrom OwlHasSelf OwlHasValue OwlSomeValuesFrom - An OWL SomeValuesFrom restriction AnonymousIndividualExpression AnonymousPropertyExpression RdfListNode - A node representing an RDF list. Note that you will not likely need to use this directly. ClassNode - A node that represents an RDFS/OWL class DeprecatedNode IriNode NamedIndividualNode - A node that represents an OWL Named Individual OntologyNode - A node representing an ontology PropertyNode - Note this only directly classifies nodes asserted to be rdf:Properties AnnotationPropertyNode - A node representing an OWL annotation property ObjectPropertyNode - A node representing an OWL object property AsymmetricPropertyNode IrreflexivePropertyNode - A node representing an OWL irreflexive object property ReflexivePropertyNode - A node representing an OWL reflexive object property SymmetricPropertyNode - A node representing an OWL symmetric object property TransitivePropertyNode - A node representing an OWL transitive object property OwlComplexAxiom - An axiom that is composed of two or more statements OwlEquivalentToIntersectionMember - Composition of OwlEquivalentClass , OwlIntersectionOf , and RdfListMember ; C = X1 and ... and Xn OwlSubclassOfSomeValuesFrom - Composition of subClassOf and SomeValuesFrom Prefix - Maps CURIEs to URIs Problem - Represents an instance of a problem pertaining to conformance to OBO guidelines AllProblems LexicalProblem - a problem with the textual value of an annotation property NodeWithTwoLabelsProblem PropertyUsedWithDatatypeValuesAndObjects - A problem in which the same property is used two two different ways, one in which the range is a literal value, the other where it is an object. TrailingWhitespaceProblem RdfLevelSummaryStatistic - Abstract grouping for views/classes that provide some kind of count summary about an individual element CountOfInstantiatedClasses - Number of distinct instantiations of a class. Note in many OBOs, classes are not directly instantiated CountOfPredicates - Number of distinct usages of a predicate. NOTE MAY CHANGE: does not currently count existential usage in OWL CountOfSubclasses - Number of subclasses for a given class RepairAction - Represents an action that needs to be taken to repair a problem Statements - Represents an RDF triple NodeToNodeStatement - A statement where object is non-null and value is not populated OwlComplementOfStatement OwlDisjointClassStatement OwlEquivalentClassStatement - A statement that connects two class nodes where both classes are equivalent OwlImportsStatement OwlInverseOfStatement OwlSameAsStatement - A statement that connects two individual nodes where both individual are equivalent RdfTypeStatement - A statement that indicates the asserted type of the subject entity RdfsDomainStatement RdfsRangeStatement RdfsSubclassOfStatement RdfsSubclassOfNamedStatement RdfsSubpropertyOfStatement NodeToValueStatement - A statement where value is non-null and object is not populated HasMappingStatement HasDbxrefStatement HasMatchStatement HasBroadMatchStatement HasExactMatchStatement HasNarrowMatchStatement HasRelatedMatchStatement HasOioSynonymStatement HasBroadSynonymStatement HasExactSynonymStatement HasNarrowSynonymStatement HasRelatedSynonymStatement HasSynonymStatement HasTextDefinitionStatement OntologyStatusStatement RdfsLabelStatement OwlAxiom OwlAxiomAnnotation AxiomDbxrefAnnotation OwlReifiedAxiom - An OWL axiom that has been reified - i.e. it includes an id field that uniquely identifies that axiom and which can be the subject of additional statements RdfListStatement - A statement that is used to represent aspects of RDF lists RdfFirstStatement - A statement that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfListMemberStatement RdfRestStatement - A statement that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfRestTransitiveStatement Mixins ClassTrait IndividualTrait IsReport - Used to describe classes/views that have a reporting function NodeTrait - abstract groupings/properties for different aspects of the model ClassTrait IndividualTrait PropertyTrait PropertyTrait Slots axiom datatype axiom language axiom object axiom predicate axiom value base - The base URI a prefix will expand to datatype description filler owl has self\u279efiller - This is Null for a self-restriction id - An identifier for an element. Note blank node ids are not unique across databases iri node\u279eid owl restriction\u279eid - the id of the restriction language \u279elabel1 \u279elabel2 object - Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated node to node statement\u279eobject owl disjoint class statement\u279eobject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279eobject - One of the two classes that are equivalent. No significance to subject vs object owl same as statement\u279eobject - One of the two classes that are equivalent. No significance to subject vs object rdf type statement\u279eobject - The entity type rdfs subclass of statement\u279eobject - The superclass element of the triple rdfs subproperty of statement\u279eobject - The superproperty element of the triple owl equivalent to intersection member\u279eobject - a class expression that forms the defining expression owl subclass of some values from\u279eobject - the class D in the axiom C subClassOf P some D on property predicate owl subclass of some values from\u279epredicate - the predicate P in the axiom C subClassOf P some D problem\u279epredicate - The property of the thing that is problematic prefix - A standardized prefix such as 'GO' or 'rdf' or 'FlyBase' \u279ecount_value \u279eelement restriction stanza subject owl disjoint class statement\u279esubject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279esubject - One of the two classes that are equivalent. No significance to subject vs object owl equivalent to intersection member\u279esubject - the defined class owl same as statement\u279esubject - One of the two classes that are equivalent. No significance to subject vs object owl subclass of some values from\u279esubject - the class C in the axiom C subClassOf P some D problem\u279esubject - The thing that is problematic rdf list statement\u279esubject - The rdf:List to which the statement applies rdfs subclass of statement\u279esubject - The subclass element of the triple rdfs subproperty of statement\u279esubject - The subproperty element of the triple repair action\u279esubject - The thing that is problematic value - Note the range of this slot is always a string. Only used the triple represents a literal assertion node to value statement\u279evalue rdfs label statement\u279evalue - The label value Enums Types Built in Bool Decimal ElementIdentifier NCName NodeIdentifier URI URIorCURIE XSDDate XSDDateTime XSDTime float int str Defined Boolean ( Bool ) - A binary (true or false) value Date ( XSDDate ) - a date (year, month and day) in an idealized calendar Datetime ( XSDDateTime ) - The combination of a date and time Decimal ( Decimal ) - A real number with arbitrary precision that conforms to the xsd:decimal specification Double ( float ) - A real number that conforms to the xsd:double specification Float ( float ) - A real number that conforms to the xsd:float specification Integer ( int ) - An integer LiteralAsStringType ( String ) Ncname ( NCName ) - Prefix part of CURIE NodeIdType ( Uriorcurie ) Nodeidentifier ( NodeIdentifier ) - A URI, CURIE or BNODE that represents a node in a model. Objectidentifier ( ElementIdentifier ) - A URI or CURIE that represents an object in the model. String ( str ) - A character string Time ( XSDTime ) - A time object represents a (local) time of day, independent of any particular day Uri ( URI ) - a complete URI Uriorcurie ( URIorCURIE ) - a URI or a CURIE","title":"OBO"},{"location":"obo_index/#semsql_obo-schema","text":"Abstractions for working with OBO ontologies. Assumes usage of OMO. Currently this module contains mostly checks/reports, similar to ROBOT report","title":"Semsql_Obo schema"},{"location":"obo_index/#classes","text":"Node - The basic unit of representation in an RDF or OWL graph BlankNode - A node with an ID that is not preserved between databases AnonymousExpression - An OWL expression, such as a class expression. Expressions are \"anonymous\" as they are a composition of named elements rather than a named element themselves AnonymousClassExpression - An OWL anonymous class expression, such as for example SomeValuesFrom(partOf Hand) OwlRestriction - An OWL restriction, such as SomeValuesFrom(partOf Hand) OwlAllValuesFrom OwlHasSelf OwlHasValue OwlSomeValuesFrom - An OWL SomeValuesFrom restriction AnonymousIndividualExpression AnonymousPropertyExpression RdfListNode - A node representing an RDF list. Note that you will not likely need to use this directly. ClassNode - A node that represents an RDFS/OWL class DeprecatedNode IriNode NamedIndividualNode - A node that represents an OWL Named Individual OntologyNode - A node representing an ontology PropertyNode - Note this only directly classifies nodes asserted to be rdf:Properties AnnotationPropertyNode - A node representing an OWL annotation property ObjectPropertyNode - A node representing an OWL object property AsymmetricPropertyNode IrreflexivePropertyNode - A node representing an OWL irreflexive object property ReflexivePropertyNode - A node representing an OWL reflexive object property SymmetricPropertyNode - A node representing an OWL symmetric object property TransitivePropertyNode - A node representing an OWL transitive object property OwlComplexAxiom - An axiom that is composed of two or more statements OwlEquivalentToIntersectionMember - Composition of OwlEquivalentClass , OwlIntersectionOf , and RdfListMember ; C = X1 and ... and Xn OwlSubclassOfSomeValuesFrom - Composition of subClassOf and SomeValuesFrom Prefix - Maps CURIEs to URIs Problem - Represents an instance of a problem pertaining to conformance to OBO guidelines AllProblems LexicalProblem - a problem with the textual value of an annotation property NodeWithTwoLabelsProblem PropertyUsedWithDatatypeValuesAndObjects - A problem in which the same property is used two two different ways, one in which the range is a literal value, the other where it is an object. TrailingWhitespaceProblem RdfLevelSummaryStatistic - Abstract grouping for views/classes that provide some kind of count summary about an individual element CountOfInstantiatedClasses - Number of distinct instantiations of a class. Note in many OBOs, classes are not directly instantiated CountOfPredicates - Number of distinct usages of a predicate. NOTE MAY CHANGE: does not currently count existential usage in OWL CountOfSubclasses - Number of subclasses for a given class RepairAction - Represents an action that needs to be taken to repair a problem Statements - Represents an RDF triple NodeToNodeStatement - A statement where object is non-null and value is not populated OwlComplementOfStatement OwlDisjointClassStatement OwlEquivalentClassStatement - A statement that connects two class nodes where both classes are equivalent OwlImportsStatement OwlInverseOfStatement OwlSameAsStatement - A statement that connects two individual nodes where both individual are equivalent RdfTypeStatement - A statement that indicates the asserted type of the subject entity RdfsDomainStatement RdfsRangeStatement RdfsSubclassOfStatement RdfsSubclassOfNamedStatement RdfsSubpropertyOfStatement NodeToValueStatement - A statement where value is non-null and object is not populated HasMappingStatement HasDbxrefStatement HasMatchStatement HasBroadMatchStatement HasExactMatchStatement HasNarrowMatchStatement HasRelatedMatchStatement HasOioSynonymStatement HasBroadSynonymStatement HasExactSynonymStatement HasNarrowSynonymStatement HasRelatedSynonymStatement HasSynonymStatement HasTextDefinitionStatement OntologyStatusStatement RdfsLabelStatement OwlAxiom OwlAxiomAnnotation AxiomDbxrefAnnotation OwlReifiedAxiom - An OWL axiom that has been reified - i.e. it includes an id field that uniquely identifies that axiom and which can be the subject of additional statements RdfListStatement - A statement that is used to represent aspects of RDF lists RdfFirstStatement - A statement that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfListMemberStatement RdfRestStatement - A statement that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfRestTransitiveStatement","title":"Classes"},{"location":"obo_index/#mixins","text":"ClassTrait IndividualTrait IsReport - Used to describe classes/views that have a reporting function NodeTrait - abstract groupings/properties for different aspects of the model ClassTrait IndividualTrait PropertyTrait PropertyTrait","title":"Mixins"},{"location":"obo_index/#slots","text":"axiom datatype axiom language axiom object axiom predicate axiom value base - The base URI a prefix will expand to datatype description filler owl has self\u279efiller - This is Null for a self-restriction id - An identifier for an element. Note blank node ids are not unique across databases iri node\u279eid owl restriction\u279eid - the id of the restriction language \u279elabel1 \u279elabel2 object - Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated node to node statement\u279eobject owl disjoint class statement\u279eobject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279eobject - One of the two classes that are equivalent. No significance to subject vs object owl same as statement\u279eobject - One of the two classes that are equivalent. No significance to subject vs object rdf type statement\u279eobject - The entity type rdfs subclass of statement\u279eobject - The superclass element of the triple rdfs subproperty of statement\u279eobject - The superproperty element of the triple owl equivalent to intersection member\u279eobject - a class expression that forms the defining expression owl subclass of some values from\u279eobject - the class D in the axiom C subClassOf P some D on property predicate owl subclass of some values from\u279epredicate - the predicate P in the axiom C subClassOf P some D problem\u279epredicate - The property of the thing that is problematic prefix - A standardized prefix such as 'GO' or 'rdf' or 'FlyBase' \u279ecount_value \u279eelement restriction stanza subject owl disjoint class statement\u279esubject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279esubject - One of the two classes that are equivalent. No significance to subject vs object owl equivalent to intersection member\u279esubject - the defined class owl same as statement\u279esubject - One of the two classes that are equivalent. No significance to subject vs object owl subclass of some values from\u279esubject - the class C in the axiom C subClassOf P some D problem\u279esubject - The thing that is problematic rdf list statement\u279esubject - The rdf:List to which the statement applies rdfs subclass of statement\u279esubject - The subclass element of the triple rdfs subproperty of statement\u279esubject - The subproperty element of the triple repair action\u279esubject - The thing that is problematic value - Note the range of this slot is always a string. Only used the triple represents a literal assertion node to value statement\u279evalue rdfs label statement\u279evalue - The label value","title":"Slots"},{"location":"obo_index/#enums","text":"","title":"Enums"},{"location":"obo_index/#types","text":"","title":"Types"},{"location":"obo_index/#built-in","text":"Bool Decimal ElementIdentifier NCName NodeIdentifier URI URIorCURIE XSDDate XSDDateTime XSDTime float int str","title":"Built in"},{"location":"obo_index/#defined","text":"Boolean ( Bool ) - A binary (true or false) value Date ( XSDDate ) - a date (year, month and day) in an idealized calendar Datetime ( XSDDateTime ) - The combination of a date and time Decimal ( Decimal ) - A real number with arbitrary precision that conforms to the xsd:decimal specification Double ( float ) - A real number that conforms to the xsd:double specification Float ( float ) - A real number that conforms to the xsd:float specification Integer ( int ) - An integer LiteralAsStringType ( String ) Ncname ( NCName ) - Prefix part of CURIE NodeIdType ( Uriorcurie ) Nodeidentifier ( NodeIdentifier ) - A URI, CURIE or BNODE that represents a node in a model. Objectidentifier ( ElementIdentifier ) - A URI or CURIE that represents an object in the model. String ( str ) - A character string Time ( XSDTime ) - A time object represents a (local) time of day, independent of any particular day Uri ( URI ) - a complete URI Uriorcurie ( URIorCURIE ) - a URI or a CURIE","title":"Defined"},{"location":"omo_index/","text":"Semsql_Omo schema Module representing OBO Metadata Ontology abstractions Classes Node - The basic unit of representation in an RDF or OWL graph BlankNode - A node with an ID that is not preserved between databases AnonymousExpression - An OWL expression, such as a class expression. Expressions are \"anonymous\" as they are a composition of named elements rather than a named element themselves AnonymousClassExpression - An OWL anonymous class expression, such as for example SomeValuesFrom(partOf Hand) OwlRestriction - An OWL restriction, such as SomeValuesFrom(partOf Hand) OwlAllValuesFrom OwlHasSelf OwlHasValue OwlSomeValuesFrom - An OWL SomeValuesFrom restriction AnonymousIndividualExpression AnonymousPropertyExpression RdfListNode - A node representing an RDF list. Note that you will not likely need to use this directly. ClassNode - A node that represents an RDFS/OWL class DeprecatedNode IriNode NamedIndividualNode - A node that represents an OWL Named Individual OntologyNode - A node representing an ontology PropertyNode - Note this only directly classifies nodes asserted to be rdf:Properties AnnotationPropertyNode - A node representing an OWL annotation property ObjectPropertyNode - A node representing an OWL object property AsymmetricPropertyNode IrreflexivePropertyNode - A node representing an OWL irreflexive object property ReflexivePropertyNode - A node representing an OWL reflexive object property SymmetricPropertyNode - A node representing an OWL symmetric object property TransitivePropertyNode - A node representing an OWL transitive object property OwlComplexAxiom - An axiom that is composed of two or more statements OwlEquivalentToIntersectionMember - Composition of OwlEquivalentClass , OwlIntersectionOf , and RdfListMember ; C = X1 and ... and Xn OwlSubclassOfSomeValuesFrom - Composition of subClassOf and SomeValuesFrom Prefix - Maps CURIEs to URIs RdfLevelSummaryStatistic - Abstract grouping for views/classes that provide some kind of count summary about an individual element CountOfInstantiatedClasses - Number of distinct instantiations of a class. Note in many OBOs, classes are not directly instantiated CountOfPredicates - Number of distinct usages of a predicate. NOTE MAY CHANGE: does not currently count existential usage in OWL CountOfSubclasses - Number of subclasses for a given class Statements - Represents an RDF triple NodeToNodeStatement - A statement where object is non-null and value is not populated OwlComplementOfStatement OwlDisjointClassStatement OwlEquivalentClassStatement - A statement that connects two class nodes where both classes are equivalent OwlImportsStatement OwlInverseOfStatement OwlSameAsStatement - A statement that connects two individual nodes where both individual are equivalent RdfTypeStatement - A statement that indicates the asserted type of the subject entity RdfsDomainStatement RdfsRangeStatement RdfsSubclassOfStatement RdfsSubclassOfNamedStatement RdfsSubpropertyOfStatement NodeToValueStatement - A statement where value is non-null and object is not populated HasMappingStatement HasDbxrefStatement HasMatchStatement HasBroadMatchStatement HasExactMatchStatement HasNarrowMatchStatement HasRelatedMatchStatement HasOioSynonymStatement HasBroadSynonymStatement HasExactSynonymStatement HasNarrowSynonymStatement HasRelatedSynonymStatement HasSynonymStatement HasTextDefinitionStatement RdfsLabelStatement OwlAxiom OwlAxiomAnnotation AxiomDbxrefAnnotation OwlReifiedAxiom - An OWL axiom that has been reified - i.e. it includes an id field that uniquely identifies that axiom and which can be the subject of additional statements RdfListStatement - A statement that is used to represent aspects of RDF lists RdfFirstStatement - A statement that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfListMemberStatement RdfRestStatement - A statement that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfRestTransitiveStatement Mixins ClassTrait IndividualTrait IsReport - Used to describe classes/views that have a reporting function NodeTrait - abstract groupings/properties for different aspects of the model ClassTrait IndividualTrait PropertyTrait PropertyTrait Slots axiom datatype axiom language axiom object axiom predicate axiom value base - The base URI a prefix will expand to datatype description filler owl has self\u279efiller - This is Null for a self-restriction id - An identifier for an element. Note blank node ids are not unique across databases iri node\u279eid owl restriction\u279eid - the id of the restriction language object - Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated node to node statement\u279eobject owl disjoint class statement\u279eobject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279eobject - One of the two classes that are equivalent. No significance to subject vs object owl same as statement\u279eobject - One of the two classes that are equivalent. No significance to subject vs object rdf type statement\u279eobject - The entity type rdfs subclass of statement\u279eobject - The superclass element of the triple rdfs subproperty of statement\u279eobject - The superproperty element of the triple owl equivalent to intersection member\u279eobject - a class expression that forms the defining expression owl subclass of some values from\u279eobject - the class D in the axiom C subClassOf P some D on property predicate owl subclass of some values from\u279epredicate - the predicate P in the axiom C subClassOf P some D prefix - A standardized prefix such as 'GO' or 'rdf' or 'FlyBase' \u279ecount_value \u279eelement restriction stanza subject owl disjoint class statement\u279esubject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279esubject - One of the two classes that are equivalent. No significance to subject vs object owl equivalent to intersection member\u279esubject - the defined class owl same as statement\u279esubject - One of the two classes that are equivalent. No significance to subject vs object owl subclass of some values from\u279esubject - the class C in the axiom C subClassOf P some D rdf list statement\u279esubject - The rdf:List to which the statement applies rdfs subclass of statement\u279esubject - The subclass element of the triple rdfs subproperty of statement\u279esubject - The subproperty element of the triple value - Note the range of this slot is always a string. Only used the triple represents a literal assertion node to value statement\u279evalue rdfs label statement\u279evalue - The label value Enums Types Built in Bool Decimal ElementIdentifier NCName NodeIdentifier URI URIorCURIE XSDDate XSDDateTime XSDTime float int str Defined Boolean ( Bool ) - A binary (true or false) value Date ( XSDDate ) - a date (year, month and day) in an idealized calendar Datetime ( XSDDateTime ) - The combination of a date and time Decimal ( Decimal ) - A real number with arbitrary precision that conforms to the xsd:decimal specification Double ( float ) - A real number that conforms to the xsd:double specification Float ( float ) - A real number that conforms to the xsd:float specification Integer ( int ) - An integer LiteralAsStringType ( String ) Ncname ( NCName ) - Prefix part of CURIE NodeIdType ( Uriorcurie ) Nodeidentifier ( NodeIdentifier ) - A URI, CURIE or BNODE that represents a node in a model. Objectidentifier ( ElementIdentifier ) - A URI or CURIE that represents an object in the model. String ( str ) - A character string Time ( XSDTime ) - A time object represents a (local) time of day, independent of any particular day Uri ( URI ) - a complete URI Uriorcurie ( URIorCURIE ) - a URI or a CURIE","title":"OMO"},{"location":"omo_index/#semsql_omo-schema","text":"Module representing OBO Metadata Ontology abstractions","title":"Semsql_Omo schema"},{"location":"omo_index/#classes","text":"Node - The basic unit of representation in an RDF or OWL graph BlankNode - A node with an ID that is not preserved between databases AnonymousExpression - An OWL expression, such as a class expression. Expressions are \"anonymous\" as they are a composition of named elements rather than a named element themselves AnonymousClassExpression - An OWL anonymous class expression, such as for example SomeValuesFrom(partOf Hand) OwlRestriction - An OWL restriction, such as SomeValuesFrom(partOf Hand) OwlAllValuesFrom OwlHasSelf OwlHasValue OwlSomeValuesFrom - An OWL SomeValuesFrom restriction AnonymousIndividualExpression AnonymousPropertyExpression RdfListNode - A node representing an RDF list. Note that you will not likely need to use this directly. ClassNode - A node that represents an RDFS/OWL class DeprecatedNode IriNode NamedIndividualNode - A node that represents an OWL Named Individual OntologyNode - A node representing an ontology PropertyNode - Note this only directly classifies nodes asserted to be rdf:Properties AnnotationPropertyNode - A node representing an OWL annotation property ObjectPropertyNode - A node representing an OWL object property AsymmetricPropertyNode IrreflexivePropertyNode - A node representing an OWL irreflexive object property ReflexivePropertyNode - A node representing an OWL reflexive object property SymmetricPropertyNode - A node representing an OWL symmetric object property TransitivePropertyNode - A node representing an OWL transitive object property OwlComplexAxiom - An axiom that is composed of two or more statements OwlEquivalentToIntersectionMember - Composition of OwlEquivalentClass , OwlIntersectionOf , and RdfListMember ; C = X1 and ... and Xn OwlSubclassOfSomeValuesFrom - Composition of subClassOf and SomeValuesFrom Prefix - Maps CURIEs to URIs RdfLevelSummaryStatistic - Abstract grouping for views/classes that provide some kind of count summary about an individual element CountOfInstantiatedClasses - Number of distinct instantiations of a class. Note in many OBOs, classes are not directly instantiated CountOfPredicates - Number of distinct usages of a predicate. NOTE MAY CHANGE: does not currently count existential usage in OWL CountOfSubclasses - Number of subclasses for a given class Statements - Represents an RDF triple NodeToNodeStatement - A statement where object is non-null and value is not populated OwlComplementOfStatement OwlDisjointClassStatement OwlEquivalentClassStatement - A statement that connects two class nodes where both classes are equivalent OwlImportsStatement OwlInverseOfStatement OwlSameAsStatement - A statement that connects two individual nodes where both individual are equivalent RdfTypeStatement - A statement that indicates the asserted type of the subject entity RdfsDomainStatement RdfsRangeStatement RdfsSubclassOfStatement RdfsSubclassOfNamedStatement RdfsSubpropertyOfStatement NodeToValueStatement - A statement where value is non-null and object is not populated HasMappingStatement HasDbxrefStatement HasMatchStatement HasBroadMatchStatement HasExactMatchStatement HasNarrowMatchStatement HasRelatedMatchStatement HasOioSynonymStatement HasBroadSynonymStatement HasExactSynonymStatement HasNarrowSynonymStatement HasRelatedSynonymStatement HasSynonymStatement HasTextDefinitionStatement RdfsLabelStatement OwlAxiom OwlAxiomAnnotation AxiomDbxrefAnnotation OwlReifiedAxiom - An OWL axiom that has been reified - i.e. it includes an id field that uniquely identifies that axiom and which can be the subject of additional statements RdfListStatement - A statement that is used to represent aspects of RDF lists RdfFirstStatement - A statement that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfListMemberStatement RdfRestStatement - A statement that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfRestTransitiveStatement","title":"Classes"},{"location":"omo_index/#mixins","text":"ClassTrait IndividualTrait IsReport - Used to describe classes/views that have a reporting function NodeTrait - abstract groupings/properties for different aspects of the model ClassTrait IndividualTrait PropertyTrait PropertyTrait","title":"Mixins"},{"location":"omo_index/#slots","text":"axiom datatype axiom language axiom object axiom predicate axiom value base - The base URI a prefix will expand to datatype description filler owl has self\u279efiller - This is Null for a self-restriction id - An identifier for an element. Note blank node ids are not unique across databases iri node\u279eid owl restriction\u279eid - the id of the restriction language object - Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated node to node statement\u279eobject owl disjoint class statement\u279eobject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279eobject - One of the two classes that are equivalent. No significance to subject vs object owl same as statement\u279eobject - One of the two classes that are equivalent. No significance to subject vs object rdf type statement\u279eobject - The entity type rdfs subclass of statement\u279eobject - The superclass element of the triple rdfs subproperty of statement\u279eobject - The superproperty element of the triple owl equivalent to intersection member\u279eobject - a class expression that forms the defining expression owl subclass of some values from\u279eobject - the class D in the axiom C subClassOf P some D on property predicate owl subclass of some values from\u279epredicate - the predicate P in the axiom C subClassOf P some D prefix - A standardized prefix such as 'GO' or 'rdf' or 'FlyBase' \u279ecount_value \u279eelement restriction stanza subject owl disjoint class statement\u279esubject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279esubject - One of the two classes that are equivalent. No significance to subject vs object owl equivalent to intersection member\u279esubject - the defined class owl same as statement\u279esubject - One of the two classes that are equivalent. No significance to subject vs object owl subclass of some values from\u279esubject - the class C in the axiom C subClassOf P some D rdf list statement\u279esubject - The rdf:List to which the statement applies rdfs subclass of statement\u279esubject - The subclass element of the triple rdfs subproperty of statement\u279esubject - The subproperty element of the triple value - Note the range of this slot is always a string. Only used the triple represents a literal assertion node to value statement\u279evalue rdfs label statement\u279evalue - The label value","title":"Slots"},{"location":"omo_index/#enums","text":"","title":"Enums"},{"location":"omo_index/#types","text":"","title":"Types"},{"location":"omo_index/#built-in","text":"Bool Decimal ElementIdentifier NCName NodeIdentifier URI URIorCURIE XSDDate XSDDateTime XSDTime float int str","title":"Built in"},{"location":"omo_index/#defined","text":"Boolean ( Bool ) - A binary (true or false) value Date ( XSDDate ) - a date (year, month and day) in an idealized calendar Datetime ( XSDDateTime ) - The combination of a date and time Decimal ( Decimal ) - A real number with arbitrary precision that conforms to the xsd:decimal specification Double ( float ) - A real number that conforms to the xsd:double specification Float ( float ) - A real number that conforms to the xsd:float specification Integer ( int ) - An integer LiteralAsStringType ( String ) Ncname ( NCName ) - Prefix part of CURIE NodeIdType ( Uriorcurie ) Nodeidentifier ( NodeIdentifier ) - A URI, CURIE or BNODE that represents a node in a model. Objectidentifier ( ElementIdentifier ) - A URI or CURIE that represents an object in the model. String ( str ) - A character string Time ( XSDTime ) - A time object represents a (local) time of day, independent of any particular day Uri ( URI ) - a complete URI Uriorcurie ( URIorCURIE ) - a URI or a CURIE","title":"Defined"},{"location":"on_property/","text":"Slot: on_property URI: semsql:on_property Domain and Range None -> OPT Node Parents Children Used by OwlAllValuesFrom OwlHasSelf OwlHasValue OwlRestriction OwlSomeValuesFrom","title":"Slot: on_property"},{"location":"on_property/#slot-on_property","text":"URI: semsql:on_property","title":"Slot: on_property"},{"location":"on_property/#domain-and-range","text":"None -> OPT Node","title":"Domain and Range"},{"location":"on_property/#parents","text":"","title":"Parents"},{"location":"on_property/#children","text":"","title":"Children"},{"location":"on_property/#used-by","text":"OwlAllValuesFrom OwlHasSelf OwlHasValue OwlRestriction OwlSomeValuesFrom","title":"Used by"},{"location":"owl_disjoint_class_statement_object/","text":"Slot: owl_disjoint_class_statement_object One of the two classes that are disjoint. No significance to subject vs object URI: semsql:owl_disjoint_class_statement_object Domain and Range OwlDisjointClassStatement -> REQ ClassNode Parents is_a: node to node statement\u279eobject Children Used by OwlDisjointClassStatement","title":"Slot: owl_disjoint_class_statement_object"},{"location":"owl_disjoint_class_statement_object/#slot-owl_disjoint_class_statement_object","text":"One of the two classes that are disjoint. No significance to subject vs object URI: semsql:owl_disjoint_class_statement_object","title":"Slot: owl_disjoint_class_statement_object"},{"location":"owl_disjoint_class_statement_object/#domain-and-range","text":"OwlDisjointClassStatement -> REQ ClassNode","title":"Domain and Range"},{"location":"owl_disjoint_class_statement_object/#parents","text":"is_a: node to node statement\u279eobject","title":"Parents"},{"location":"owl_disjoint_class_statement_object/#children","text":"","title":"Children"},{"location":"owl_disjoint_class_statement_object/#used-by","text":"OwlDisjointClassStatement","title":"Used by"},{"location":"owl_disjoint_class_statement_subject/","text":"Slot: owl_disjoint_class_statement_subject One of the two classes that are disjoint. No significance to subject vs object URI: semsql:owl_disjoint_class_statement_subject Domain and Range OwlDisjointClassStatement -> OPT ClassNode Parents is_a: subject Children Used by OwlDisjointClassStatement","title":"Slot: owl_disjoint_class_statement_subject"},{"location":"owl_disjoint_class_statement_subject/#slot-owl_disjoint_class_statement_subject","text":"One of the two classes that are disjoint. No significance to subject vs object URI: semsql:owl_disjoint_class_statement_subject","title":"Slot: owl_disjoint_class_statement_subject"},{"location":"owl_disjoint_class_statement_subject/#domain-and-range","text":"OwlDisjointClassStatement -> OPT ClassNode","title":"Domain and Range"},{"location":"owl_disjoint_class_statement_subject/#parents","text":"is_a: subject","title":"Parents"},{"location":"owl_disjoint_class_statement_subject/#children","text":"","title":"Children"},{"location":"owl_disjoint_class_statement_subject/#used-by","text":"OwlDisjointClassStatement","title":"Used by"},{"location":"owl_equivalent_class_statement_object/","text":"Slot: owl_equivalent_class_statement_object One of the two classes that are equivalent. No significance to subject vs object URI: semsql:owl_equivalent_class_statement_object Domain and Range OwlEquivalentClassStatement -> REQ ClassNode Parents is_a: node to node statement\u279eobject Children Used by OwlEquivalentClassStatement","title":"Slot: owl_equivalent_class_statement_object"},{"location":"owl_equivalent_class_statement_object/#slot-owl_equivalent_class_statement_object","text":"One of the two classes that are equivalent. No significance to subject vs object URI: semsql:owl_equivalent_class_statement_object","title":"Slot: owl_equivalent_class_statement_object"},{"location":"owl_equivalent_class_statement_object/#domain-and-range","text":"OwlEquivalentClassStatement -> REQ ClassNode","title":"Domain and Range"},{"location":"owl_equivalent_class_statement_object/#parents","text":"is_a: node to node statement\u279eobject","title":"Parents"},{"location":"owl_equivalent_class_statement_object/#children","text":"","title":"Children"},{"location":"owl_equivalent_class_statement_object/#used-by","text":"OwlEquivalentClassStatement","title":"Used by"},{"location":"owl_equivalent_class_statement_subject/","text":"Slot: owl_equivalent_class_statement_subject One of the two classes that are equivalent. No significance to subject vs object URI: semsql:owl_equivalent_class_statement_subject Domain and Range OwlEquivalentClassStatement -> OPT ClassNode Parents is_a: subject Children Used by OwlEquivalentClassStatement","title":"Slot: owl_equivalent_class_statement_subject"},{"location":"owl_equivalent_class_statement_subject/#slot-owl_equivalent_class_statement_subject","text":"One of the two classes that are equivalent. No significance to subject vs object URI: semsql:owl_equivalent_class_statement_subject","title":"Slot: owl_equivalent_class_statement_subject"},{"location":"owl_equivalent_class_statement_subject/#domain-and-range","text":"OwlEquivalentClassStatement -> OPT ClassNode","title":"Domain and Range"},{"location":"owl_equivalent_class_statement_subject/#parents","text":"is_a: subject","title":"Parents"},{"location":"owl_equivalent_class_statement_subject/#children","text":"","title":"Children"},{"location":"owl_equivalent_class_statement_subject/#used-by","text":"OwlEquivalentClassStatement","title":"Used by"},{"location":"owl_equivalent_to_intersection_member_object/","text":"Slot: owl_equivalent_to_intersection_member_object a class expression that forms the defining expression URI: semsql:owl_equivalent_to_intersection_member_object Domain and Range OwlEquivalentToIntersectionMember -> OPT Node Parents is_a: object Children Used by OwlEquivalentToIntersectionMember","title":"Slot: owl_equivalent_to_intersection_member_object"},{"location":"owl_equivalent_to_intersection_member_object/#slot-owl_equivalent_to_intersection_member_object","text":"a class expression that forms the defining expression URI: semsql:owl_equivalent_to_intersection_member_object","title":"Slot: owl_equivalent_to_intersection_member_object"},{"location":"owl_equivalent_to_intersection_member_object/#domain-and-range","text":"OwlEquivalentToIntersectionMember -> OPT Node","title":"Domain and Range"},{"location":"owl_equivalent_to_intersection_member_object/#parents","text":"is_a: object","title":"Parents"},{"location":"owl_equivalent_to_intersection_member_object/#children","text":"","title":"Children"},{"location":"owl_equivalent_to_intersection_member_object/#used-by","text":"OwlEquivalentToIntersectionMember","title":"Used by"},{"location":"owl_equivalent_to_intersection_member_subject/","text":"Slot: owl_equivalent_to_intersection_member_subject the defined class URI: semsql:owl_equivalent_to_intersection_member_subject Domain and Range OwlEquivalentToIntersectionMember -> OPT Node Parents is_a: subject Children Used by OwlEquivalentToIntersectionMember","title":"Slot: owl_equivalent_to_intersection_member_subject"},{"location":"owl_equivalent_to_intersection_member_subject/#slot-owl_equivalent_to_intersection_member_subject","text":"the defined class URI: semsql:owl_equivalent_to_intersection_member_subject","title":"Slot: owl_equivalent_to_intersection_member_subject"},{"location":"owl_equivalent_to_intersection_member_subject/#domain-and-range","text":"OwlEquivalentToIntersectionMember -> OPT Node","title":"Domain and Range"},{"location":"owl_equivalent_to_intersection_member_subject/#parents","text":"is_a: subject","title":"Parents"},{"location":"owl_equivalent_to_intersection_member_subject/#children","text":"","title":"Children"},{"location":"owl_equivalent_to_intersection_member_subject/#used-by","text":"OwlEquivalentToIntersectionMember","title":"Used by"},{"location":"owl_has_self_filler/","text":"Slot: owl_has_self_filler This is Null for a self-restriction URI: semsql:owl_has_self_filler Domain and Range OwlHasSelf -> OPT ClassNode Parents is_a: filler Children Used by OwlHasSelf","title":"Slot: owl_has_self_filler"},{"location":"owl_has_self_filler/#slot-owl_has_self_filler","text":"This is Null for a self-restriction URI: semsql:owl_has_self_filler","title":"Slot: owl_has_self_filler"},{"location":"owl_has_self_filler/#domain-and-range","text":"OwlHasSelf -> OPT ClassNode","title":"Domain and Range"},{"location":"owl_has_self_filler/#parents","text":"is_a: filler","title":"Parents"},{"location":"owl_has_self_filler/#children","text":"","title":"Children"},{"location":"owl_has_self_filler/#used-by","text":"OwlHasSelf","title":"Used by"},{"location":"owl_index/","text":"Semsql_Owl schema OWL Module Classes Node - The basic unit of representation in an RDF or OWL graph BlankNode - A node with an ID that is not preserved between databases AnonymousExpression - An OWL expression, such as a class expression. Expressions are \"anonymous\" as they are a composition of named elements rather than a named element themselves AnonymousClassExpression - An OWL anonymous class expression, such as for example SomeValuesFrom(partOf Hand) OwlRestriction - An OWL restriction, such as SomeValuesFrom(partOf Hand) OwlAllValuesFrom OwlHasSelf OwlHasValue OwlSomeValuesFrom - An OWL SomeValuesFrom restriction AnonymousIndividualExpression AnonymousPropertyExpression RdfListNode - A node representing an RDF list. Note that you will not likely need to use this directly. ClassNode - A node that represents an RDFS/OWL class DeprecatedNode IriNode NamedIndividualNode - A node that represents an OWL Named Individual OntologyNode - A node representing an ontology PropertyNode - Note this only directly classifies nodes asserted to be rdf:Properties AnnotationPropertyNode - A node representing an OWL annotation property ObjectPropertyNode - A node representing an OWL object property AsymmetricPropertyNode IrreflexivePropertyNode - A node representing an OWL irreflexive object property ReflexivePropertyNode - A node representing an OWL reflexive object property SymmetricPropertyNode - A node representing an OWL symmetric object property TransitivePropertyNode - A node representing an OWL transitive object property OwlComplexAxiom - An axiom that is composed of two or more statements OwlEquivalentToIntersectionMember - Composition of OwlEquivalentClass , OwlIntersectionOf , and RdfListMember ; C = X1 and ... and Xn OwlSubclassOfSomeValuesFrom - Composition of subClassOf and SomeValuesFrom Prefix - Maps CURIEs to URIs RdfLevelSummaryStatistic - Abstract grouping for views/classes that provide some kind of count summary about an individual element CountOfInstantiatedClasses - Number of distinct instantiations of a class. Note in many OBOs, classes are not directly instantiated CountOfPredicates - Number of distinct usages of a predicate. NOTE MAY CHANGE: does not currently count existential usage in OWL CountOfSubclasses - Number of subclasses for a given class Statements - Represents an RDF triple NodeToNodeStatement - A statement where object is non-null and value is not populated OwlComplementOfStatement OwlDisjointClassStatement OwlEquivalentClassStatement - A statement that connects two class nodes where both classes are equivalent OwlImportsStatement OwlInverseOfStatement OwlSameAsStatement - A statement that connects two individual nodes where both individual are equivalent RdfTypeStatement - A statement that indicates the asserted type of the subject entity RdfsDomainStatement RdfsRangeStatement RdfsSubclassOfStatement RdfsSubclassOfNamedStatement RdfsSubpropertyOfStatement NodeToValueStatement - A statement where value is non-null and object is not populated RdfsLabelStatement OwlAxiom OwlAxiomAnnotation OwlReifiedAxiom - An OWL axiom that has been reified - i.e. it includes an id field that uniquely identifies that axiom and which can be the subject of additional statements RdfListStatement - A statement that is used to represent aspects of RDF lists RdfFirstStatement - A statement that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfListMemberStatement RdfRestStatement - A statement that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfRestTransitiveStatement Mixins ClassTrait IndividualTrait IsReport - Used to describe classes/views that have a reporting function NodeTrait - abstract groupings/properties for different aspects of the model ClassTrait IndividualTrait PropertyTrait PropertyTrait Slots axiom datatype axiom language axiom object axiom predicate axiom value base - The base URI a prefix will expand to datatype description filler owl has self\u279efiller - This is Null for a self-restriction id - An identifier for an element. Note blank node ids are not unique across databases iri node\u279eid owl restriction\u279eid - the id of the restriction language object - Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated node to node statement\u279eobject rdf type statement\u279eobject - The entity type rdfs subclass of statement\u279eobject - The superclass element of the triple rdfs subproperty of statement\u279eobject - The superproperty element of the triple owl disjoint class statement\u279eobject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279eobject - One of the two classes that are equivalent. No significance to subject vs object owl equivalent to intersection member\u279eobject - a class expression that forms the defining expression owl same as statement\u279eobject - One of the two classes that are equivalent. No significance to subject vs object owl subclass of some values from\u279eobject - the class D in the axiom C subClassOf P some D on property predicate owl subclass of some values from\u279epredicate - the predicate P in the axiom C subClassOf P some D prefix - A standardized prefix such as 'GO' or 'rdf' or 'FlyBase' \u279ecount_value \u279eelement restriction stanza subject owl disjoint class statement\u279esubject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279esubject - One of the two classes that are equivalent. No significance to subject vs object owl equivalent to intersection member\u279esubject - the defined class owl same as statement\u279esubject - One of the two classes that are equivalent. No significance to subject vs object owl subclass of some values from\u279esubject - the class C in the axiom C subClassOf P some D rdf list statement\u279esubject - The rdf:List to which the statement applies rdfs subclass of statement\u279esubject - The subclass element of the triple rdfs subproperty of statement\u279esubject - The subproperty element of the triple value - Note the range of this slot is always a string. Only used the triple represents a literal assertion node to value statement\u279evalue rdfs label statement\u279evalue - The label value Enums Types Built in Bool Decimal ElementIdentifier NCName NodeIdentifier URI URIorCURIE XSDDate XSDDateTime XSDTime float int str Defined Boolean ( Bool ) - A binary (true or false) value Date ( XSDDate ) - a date (year, month and day) in an idealized calendar Datetime ( XSDDateTime ) - The combination of a date and time Decimal ( Decimal ) - A real number with arbitrary precision that conforms to the xsd:decimal specification Double ( float ) - A real number that conforms to the xsd:double specification Float ( float ) - A real number that conforms to the xsd:float specification Integer ( int ) - An integer LiteralAsStringType ( String ) Ncname ( NCName ) - Prefix part of CURIE NodeIdType ( Uriorcurie ) Nodeidentifier ( NodeIdentifier ) - A URI, CURIE or BNODE that represents a node in a model. Objectidentifier ( ElementIdentifier ) - A URI or CURIE that represents an object in the model. String ( str ) - A character string Time ( XSDTime ) - A time object represents a (local) time of day, independent of any particular day Uri ( URI ) - a complete URI Uriorcurie ( URIorCURIE ) - a URI or a CURIE","title":"OWL"},{"location":"owl_index/#semsql_owl-schema","text":"OWL Module","title":"Semsql_Owl schema"},{"location":"owl_index/#classes","text":"Node - The basic unit of representation in an RDF or OWL graph BlankNode - A node with an ID that is not preserved between databases AnonymousExpression - An OWL expression, such as a class expression. Expressions are \"anonymous\" as they are a composition of named elements rather than a named element themselves AnonymousClassExpression - An OWL anonymous class expression, such as for example SomeValuesFrom(partOf Hand) OwlRestriction - An OWL restriction, such as SomeValuesFrom(partOf Hand) OwlAllValuesFrom OwlHasSelf OwlHasValue OwlSomeValuesFrom - An OWL SomeValuesFrom restriction AnonymousIndividualExpression AnonymousPropertyExpression RdfListNode - A node representing an RDF list. Note that you will not likely need to use this directly. ClassNode - A node that represents an RDFS/OWL class DeprecatedNode IriNode NamedIndividualNode - A node that represents an OWL Named Individual OntologyNode - A node representing an ontology PropertyNode - Note this only directly classifies nodes asserted to be rdf:Properties AnnotationPropertyNode - A node representing an OWL annotation property ObjectPropertyNode - A node representing an OWL object property AsymmetricPropertyNode IrreflexivePropertyNode - A node representing an OWL irreflexive object property ReflexivePropertyNode - A node representing an OWL reflexive object property SymmetricPropertyNode - A node representing an OWL symmetric object property TransitivePropertyNode - A node representing an OWL transitive object property OwlComplexAxiom - An axiom that is composed of two or more statements OwlEquivalentToIntersectionMember - Composition of OwlEquivalentClass , OwlIntersectionOf , and RdfListMember ; C = X1 and ... and Xn OwlSubclassOfSomeValuesFrom - Composition of subClassOf and SomeValuesFrom Prefix - Maps CURIEs to URIs RdfLevelSummaryStatistic - Abstract grouping for views/classes that provide some kind of count summary about an individual element CountOfInstantiatedClasses - Number of distinct instantiations of a class. Note in many OBOs, classes are not directly instantiated CountOfPredicates - Number of distinct usages of a predicate. NOTE MAY CHANGE: does not currently count existential usage in OWL CountOfSubclasses - Number of subclasses for a given class Statements - Represents an RDF triple NodeToNodeStatement - A statement where object is non-null and value is not populated OwlComplementOfStatement OwlDisjointClassStatement OwlEquivalentClassStatement - A statement that connects two class nodes where both classes are equivalent OwlImportsStatement OwlInverseOfStatement OwlSameAsStatement - A statement that connects two individual nodes where both individual are equivalent RdfTypeStatement - A statement that indicates the asserted type of the subject entity RdfsDomainStatement RdfsRangeStatement RdfsSubclassOfStatement RdfsSubclassOfNamedStatement RdfsSubpropertyOfStatement NodeToValueStatement - A statement where value is non-null and object is not populated RdfsLabelStatement OwlAxiom OwlAxiomAnnotation OwlReifiedAxiom - An OWL axiom that has been reified - i.e. it includes an id field that uniquely identifies that axiom and which can be the subject of additional statements RdfListStatement - A statement that is used to represent aspects of RDF lists RdfFirstStatement - A statement that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfListMemberStatement RdfRestStatement - A statement that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfRestTransitiveStatement","title":"Classes"},{"location":"owl_index/#mixins","text":"ClassTrait IndividualTrait IsReport - Used to describe classes/views that have a reporting function NodeTrait - abstract groupings/properties for different aspects of the model ClassTrait IndividualTrait PropertyTrait PropertyTrait","title":"Mixins"},{"location":"owl_index/#slots","text":"axiom datatype axiom language axiom object axiom predicate axiom value base - The base URI a prefix will expand to datatype description filler owl has self\u279efiller - This is Null for a self-restriction id - An identifier for an element. Note blank node ids are not unique across databases iri node\u279eid owl restriction\u279eid - the id of the restriction language object - Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated node to node statement\u279eobject rdf type statement\u279eobject - The entity type rdfs subclass of statement\u279eobject - The superclass element of the triple rdfs subproperty of statement\u279eobject - The superproperty element of the triple owl disjoint class statement\u279eobject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279eobject - One of the two classes that are equivalent. No significance to subject vs object owl equivalent to intersection member\u279eobject - a class expression that forms the defining expression owl same as statement\u279eobject - One of the two classes that are equivalent. No significance to subject vs object owl subclass of some values from\u279eobject - the class D in the axiom C subClassOf P some D on property predicate owl subclass of some values from\u279epredicate - the predicate P in the axiom C subClassOf P some D prefix - A standardized prefix such as 'GO' or 'rdf' or 'FlyBase' \u279ecount_value \u279eelement restriction stanza subject owl disjoint class statement\u279esubject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279esubject - One of the two classes that are equivalent. No significance to subject vs object owl equivalent to intersection member\u279esubject - the defined class owl same as statement\u279esubject - One of the two classes that are equivalent. No significance to subject vs object owl subclass of some values from\u279esubject - the class C in the axiom C subClassOf P some D rdf list statement\u279esubject - The rdf:List to which the statement applies rdfs subclass of statement\u279esubject - The subclass element of the triple rdfs subproperty of statement\u279esubject - The subproperty element of the triple value - Note the range of this slot is always a string. Only used the triple represents a literal assertion node to value statement\u279evalue rdfs label statement\u279evalue - The label value","title":"Slots"},{"location":"owl_index/#enums","text":"","title":"Enums"},{"location":"owl_index/#types","text":"","title":"Types"},{"location":"owl_index/#built-in","text":"Bool Decimal ElementIdentifier NCName NodeIdentifier URI URIorCURIE XSDDate XSDDateTime XSDTime float int str","title":"Built in"},{"location":"owl_index/#defined","text":"Boolean ( Bool ) - A binary (true or false) value Date ( XSDDate ) - a date (year, month and day) in an idealized calendar Datetime ( XSDDateTime ) - The combination of a date and time Decimal ( Decimal ) - A real number with arbitrary precision that conforms to the xsd:decimal specification Double ( float ) - A real number that conforms to the xsd:double specification Float ( float ) - A real number that conforms to the xsd:float specification Integer ( int ) - An integer LiteralAsStringType ( String ) Ncname ( NCName ) - Prefix part of CURIE NodeIdType ( Uriorcurie ) Nodeidentifier ( NodeIdentifier ) - A URI, CURIE or BNODE that represents a node in a model. Objectidentifier ( ElementIdentifier ) - A URI or CURIE that represents an object in the model. String ( str ) - A character string Time ( XSDTime ) - A time object represents a (local) time of day, independent of any particular day Uri ( URI ) - a complete URI Uriorcurie ( URIorCURIE ) - a URI or a CURIE","title":"Defined"},{"location":"owl_restriction_id/","text":"Slot: owl_restriction_id the id of the restriction URI: semsql:owl_restriction_id Domain and Range OwlRestriction -> REQ NodeIdType Parents is_a: id Children Used by OwlAllValuesFrom OwlHasSelf OwlHasValue OwlRestriction OwlSomeValuesFrom","title":"Slot: owl_restriction_id"},{"location":"owl_restriction_id/#slot-owl_restriction_id","text":"the id of the restriction URI: semsql:owl_restriction_id","title":"Slot: owl_restriction_id"},{"location":"owl_restriction_id/#domain-and-range","text":"OwlRestriction -> REQ NodeIdType","title":"Domain and Range"},{"location":"owl_restriction_id/#parents","text":"is_a: id","title":"Parents"},{"location":"owl_restriction_id/#children","text":"","title":"Children"},{"location":"owl_restriction_id/#used-by","text":"OwlAllValuesFrom OwlHasSelf OwlHasValue OwlRestriction OwlSomeValuesFrom","title":"Used by"},{"location":"owl_same_as_statement_object/","text":"Slot: owl_same_as_statement_object One of the two classes that are equivalent. No significance to subject vs object URI: semsql:owl_same_as_statement_object Domain and Range OwlSameAsStatement -> REQ NamedIndividualNode Parents is_a: node to node statement\u279eobject Children Used by OwlSameAsStatement","title":"Slot: owl_same_as_statement_object"},{"location":"owl_same_as_statement_object/#slot-owl_same_as_statement_object","text":"One of the two classes that are equivalent. No significance to subject vs object URI: semsql:owl_same_as_statement_object","title":"Slot: owl_same_as_statement_object"},{"location":"owl_same_as_statement_object/#domain-and-range","text":"OwlSameAsStatement -> REQ NamedIndividualNode","title":"Domain and Range"},{"location":"owl_same_as_statement_object/#parents","text":"is_a: node to node statement\u279eobject","title":"Parents"},{"location":"owl_same_as_statement_object/#children","text":"","title":"Children"},{"location":"owl_same_as_statement_object/#used-by","text":"OwlSameAsStatement","title":"Used by"},{"location":"owl_same_as_statement_subject/","text":"Slot: owl_same_as_statement_subject One of the two classes that are equivalent. No significance to subject vs object URI: semsql:owl_same_as_statement_subject Domain and Range OwlSameAsStatement -> OPT NamedIndividualNode Parents is_a: subject Children Used by OwlSameAsStatement","title":"Slot: owl_same_as_statement_subject"},{"location":"owl_same_as_statement_subject/#slot-owl_same_as_statement_subject","text":"One of the two classes that are equivalent. No significance to subject vs object URI: semsql:owl_same_as_statement_subject","title":"Slot: owl_same_as_statement_subject"},{"location":"owl_same_as_statement_subject/#domain-and-range","text":"OwlSameAsStatement -> OPT NamedIndividualNode","title":"Domain and Range"},{"location":"owl_same_as_statement_subject/#parents","text":"is_a: subject","title":"Parents"},{"location":"owl_same_as_statement_subject/#children","text":"","title":"Children"},{"location":"owl_same_as_statement_subject/#used-by","text":"OwlSameAsStatement","title":"Used by"},{"location":"owl_subclass_of_some_values_from_object/","text":"Slot: owl_subclass_of_some_values_from_object the class D in the axiom C subClassOf P some D URI: semsql:owl_subclass_of_some_values_from_object Domain and Range OwlSubclassOfSomeValuesFrom -> OPT Node Parents is_a: object Children Used by OwlSubclassOfSomeValuesFrom","title":"Slot: owl_subclass_of_some_values_from_object"},{"location":"owl_subclass_of_some_values_from_object/#slot-owl_subclass_of_some_values_from_object","text":"the class D in the axiom C subClassOf P some D URI: semsql:owl_subclass_of_some_values_from_object","title":"Slot: owl_subclass_of_some_values_from_object"},{"location":"owl_subclass_of_some_values_from_object/#domain-and-range","text":"OwlSubclassOfSomeValuesFrom -> OPT Node","title":"Domain and Range"},{"location":"owl_subclass_of_some_values_from_object/#parents","text":"is_a: object","title":"Parents"},{"location":"owl_subclass_of_some_values_from_object/#children","text":"","title":"Children"},{"location":"owl_subclass_of_some_values_from_object/#used-by","text":"OwlSubclassOfSomeValuesFrom","title":"Used by"},{"location":"owl_subclass_of_some_values_from_predicate/","text":"Slot: owl_subclass_of_some_values_from_predicate the predicate P in the axiom C subClassOf P some D URI: semsql:owl_subclass_of_some_values_from_predicate Domain and Range OwlSubclassOfSomeValuesFrom -> OPT PropertyNode Parents is_a: predicate Children Used by OwlSubclassOfSomeValuesFrom","title":"Slot: owl_subclass_of_some_values_from_predicate"},{"location":"owl_subclass_of_some_values_from_predicate/#slot-owl_subclass_of_some_values_from_predicate","text":"the predicate P in the axiom C subClassOf P some D URI: semsql:owl_subclass_of_some_values_from_predicate","title":"Slot: owl_subclass_of_some_values_from_predicate"},{"location":"owl_subclass_of_some_values_from_predicate/#domain-and-range","text":"OwlSubclassOfSomeValuesFrom -> OPT PropertyNode","title":"Domain and Range"},{"location":"owl_subclass_of_some_values_from_predicate/#parents","text":"is_a: predicate","title":"Parents"},{"location":"owl_subclass_of_some_values_from_predicate/#children","text":"","title":"Children"},{"location":"owl_subclass_of_some_values_from_predicate/#used-by","text":"OwlSubclassOfSomeValuesFrom","title":"Used by"},{"location":"owl_subclass_of_some_values_from_subject/","text":"Slot: owl_subclass_of_some_values_from_subject the class C in the axiom C subClassOf P some D URI: semsql:owl_subclass_of_some_values_from_subject Domain and Range OwlSubclassOfSomeValuesFrom -> OPT Node Parents is_a: subject Children Used by OwlSubclassOfSomeValuesFrom","title":"Slot: owl_subclass_of_some_values_from_subject"},{"location":"owl_subclass_of_some_values_from_subject/#slot-owl_subclass_of_some_values_from_subject","text":"the class C in the axiom C subClassOf P some D URI: semsql:owl_subclass_of_some_values_from_subject","title":"Slot: owl_subclass_of_some_values_from_subject"},{"location":"owl_subclass_of_some_values_from_subject/#domain-and-range","text":"OwlSubclassOfSomeValuesFrom -> OPT Node","title":"Domain and Range"},{"location":"owl_subclass_of_some_values_from_subject/#parents","text":"is_a: subject","title":"Parents"},{"location":"owl_subclass_of_some_values_from_subject/#children","text":"","title":"Children"},{"location":"owl_subclass_of_some_values_from_subject/#used-by","text":"OwlSubclassOfSomeValuesFrom","title":"Used by"},{"location":"predicate/","text":"Slot: predicate URI: semsql:predicate Domain and Range None -> OPT PropertyNode Parents Children owl subclass of some values from\u279epredicate problem\u279epredicate subgraph query\u279epredicate Used by AxiomDbxrefAnnotation Edge EntailedEdge HasBroadMatchStatement HasBroadSynonymStatement HasDbxrefStatement HasExactMatchStatement HasExactSynonymStatement HasMappingStatement HasMatchStatement HasNarrowMatchStatement HasNarrowSynonymStatement HasOioSynonymStatement HasRelatedMatchStatement HasRelatedSynonymStatement HasSynonymStatement HasTextDefinitionStatement NodeToNodeStatement NodeToValueStatement OntologyStatusStatement OwlAxiom OwlAxiomAnnotation OwlComplementOfStatement OwlDisjointClassStatement OwlEquivalentClassStatement OwlImportsStatement OwlInverseOfStatement OwlReifiedAxiom OwlSameAsStatement RdfFirstStatement RdfListMemberStatement RdfListStatement RdfRestStatement RdfRestTransitiveStatement RdfTypeStatement RdfsDomainStatement RdfsLabelStatement RdfsRangeStatement RdfsSubclassOfNamedStatement RdfsSubclassOfStatement RdfsSubpropertyOfStatement Statements SubgraphEdgeByAncestor SubgraphEdgeByChild SubgraphEdgeByDescendant SubgraphEdgeByParent SubgraphEdgeBySelf Other properties Mappings: rdf:predicate","title":"Slot: predicate"},{"location":"predicate/#slot-predicate","text":"URI: semsql:predicate","title":"Slot: predicate"},{"location":"predicate/#domain-and-range","text":"None -> OPT PropertyNode","title":"Domain and Range"},{"location":"predicate/#parents","text":"","title":"Parents"},{"location":"predicate/#children","text":"owl subclass of some values from\u279epredicate problem\u279epredicate subgraph query\u279epredicate","title":"Children"},{"location":"predicate/#used-by","text":"AxiomDbxrefAnnotation Edge EntailedEdge HasBroadMatchStatement HasBroadSynonymStatement HasDbxrefStatement HasExactMatchStatement HasExactSynonymStatement HasMappingStatement HasMatchStatement HasNarrowMatchStatement HasNarrowSynonymStatement HasOioSynonymStatement HasRelatedMatchStatement HasRelatedSynonymStatement HasSynonymStatement HasTextDefinitionStatement NodeToNodeStatement NodeToValueStatement OntologyStatusStatement OwlAxiom OwlAxiomAnnotation OwlComplementOfStatement OwlDisjointClassStatement OwlEquivalentClassStatement OwlImportsStatement OwlInverseOfStatement OwlReifiedAxiom OwlSameAsStatement RdfFirstStatement RdfListMemberStatement RdfListStatement RdfRestStatement RdfRestTransitiveStatement RdfTypeStatement RdfsDomainStatement RdfsLabelStatement RdfsRangeStatement RdfsSubclassOfNamedStatement RdfsSubclassOfStatement RdfsSubpropertyOfStatement Statements SubgraphEdgeByAncestor SubgraphEdgeByChild SubgraphEdgeByDescendant SubgraphEdgeByParent SubgraphEdgeBySelf","title":"Used by"},{"location":"predicate/#other-properties","text":"Mappings: rdf:predicate","title":"Other properties"},{"location":"prefix/","text":"Class: Prefix Maps CURIEs to URIs URI: semsql:Prefix Attributes Own base OPT Description: The base URI a prefix will expand to range: Uri prefix OPT Description: A standardized prefix such as 'GO' or 'rdf' or 'FlyBase' range: Ncname Other properties Mappings: sh:PrefixDeclaration In Subsets: export base table","title":"Class: Prefix"},{"location":"prefix/#class-prefix","text":"Maps CURIEs to URIs URI: semsql:Prefix","title":"Class: Prefix"},{"location":"prefix/#attributes","text":"","title":"Attributes"},{"location":"prefix/#own","text":"base OPT Description: The base URI a prefix will expand to range: Uri prefix OPT Description: A standardized prefix such as 'GO' or 'rdf' or 'FlyBase' range: Ncname","title":"Own"},{"location":"prefix/#other-properties","text":"Mappings: sh:PrefixDeclaration In Subsets: export base table","title":"Other properties"},{"location":"problem_predicate/","text":"Slot: problem_predicate The property of the thing that is problematic URI: semsql:problem_predicate Domain and Range Problem -> OPT PropertyNode Parents is_a: predicate Children Used by AllProblems LexicalProblem NodeWithTwoLabelsProblem Problem PropertyUsedWithDatatypeValuesAndObjects TrailingWhitespaceProblem","title":"Slot: problem_predicate"},{"location":"problem_predicate/#slot-problem_predicate","text":"The property of the thing that is problematic URI: semsql:problem_predicate","title":"Slot: problem_predicate"},{"location":"problem_predicate/#domain-and-range","text":"Problem -> OPT PropertyNode","title":"Domain and Range"},{"location":"problem_predicate/#parents","text":"is_a: predicate","title":"Parents"},{"location":"problem_predicate/#children","text":"","title":"Children"},{"location":"problem_predicate/#used-by","text":"AllProblems LexicalProblem NodeWithTwoLabelsProblem Problem PropertyUsedWithDatatypeValuesAndObjects TrailingWhitespaceProblem","title":"Used by"},{"location":"problem_subject/","text":"Slot: problem_subject The thing that is problematic URI: semsql:problem_subject Domain and Range Problem -> OPT Node Parents is_a: subject Children Used by AllProblems LexicalProblem NodeWithTwoLabelsProblem Problem PropertyUsedWithDatatypeValuesAndObjects TrailingWhitespaceProblem","title":"Slot: problem_subject"},{"location":"problem_subject/#slot-problem_subject","text":"The thing that is problematic URI: semsql:problem_subject","title":"Slot: problem_subject"},{"location":"problem_subject/#domain-and-range","text":"Problem -> OPT Node","title":"Domain and Range"},{"location":"problem_subject/#parents","text":"is_a: subject","title":"Parents"},{"location":"problem_subject/#children","text":"","title":"Children"},{"location":"problem_subject/#used-by","text":"AllProblems LexicalProblem NodeWithTwoLabelsProblem Problem PropertyUsedWithDatatypeValuesAndObjects TrailingWhitespaceProblem","title":"Used by"},{"location":"rdfLevelSummaryStatistic__count_value/","text":"Slot: rdfLevelSummaryStatistic__count_value URI: semsql:rdfLevelSummaryStatistic__count_value Domain and Range None -> OPT Integer Parents Children Used by CountOfInstantiatedClasses CountOfPredicates CountOfSubclasses RdfLevelSummaryStatistic","title":"Slot: rdfLevelSummaryStatistic__count_value"},{"location":"rdfLevelSummaryStatistic__count_value/#slot-rdflevelsummarystatistic__count_value","text":"URI: semsql:rdfLevelSummaryStatistic__count_value","title":"Slot: rdfLevelSummaryStatistic__count_value"},{"location":"rdfLevelSummaryStatistic__count_value/#domain-and-range","text":"None -> OPT Integer","title":"Domain and Range"},{"location":"rdfLevelSummaryStatistic__count_value/#parents","text":"","title":"Parents"},{"location":"rdfLevelSummaryStatistic__count_value/#children","text":"","title":"Children"},{"location":"rdfLevelSummaryStatistic__count_value/#used-by","text":"CountOfInstantiatedClasses CountOfPredicates CountOfSubclasses RdfLevelSummaryStatistic","title":"Used by"},{"location":"rdfLevelSummaryStatistic__element/","text":"Slot: rdfLevelSummaryStatistic__element URI: semsql:rdfLevelSummaryStatistic__element Domain and Range None -> OPT Node Parents Children Used by CountOfInstantiatedClasses CountOfPredicates CountOfSubclasses RdfLevelSummaryStatistic","title":"Slot: rdfLevelSummaryStatistic__element"},{"location":"rdfLevelSummaryStatistic__element/#slot-rdflevelsummarystatistic__element","text":"URI: semsql:rdfLevelSummaryStatistic__element","title":"Slot: rdfLevelSummaryStatistic__element"},{"location":"rdfLevelSummaryStatistic__element/#domain-and-range","text":"None -> OPT Node","title":"Domain and Range"},{"location":"rdfLevelSummaryStatistic__element/#parents","text":"","title":"Parents"},{"location":"rdfLevelSummaryStatistic__element/#children","text":"","title":"Children"},{"location":"rdfLevelSummaryStatistic__element/#used-by","text":"CountOfInstantiatedClasses CountOfPredicates CountOfSubclasses RdfLevelSummaryStatistic","title":"Used by"},{"location":"rdfLevelSummaryStatistic__number_of_usages/","text":"Slot: rdfLevelSummaryStatistic__number_of_usages URI: semsql:rdfLevelSummaryStatistic__number_of_usages Domain and Range None -> OPT Integer Parents Children Used by CountOfInstantiatedClasses CountOfPredicates RdfLevelSummaryStatistic","title":"Slot: rdfLevelSummaryStatistic__number_of_usages"},{"location":"rdfLevelSummaryStatistic__number_of_usages/#slot-rdflevelsummarystatistic__number_of_usages","text":"URI: semsql:rdfLevelSummaryStatistic__number_of_usages","title":"Slot: rdfLevelSummaryStatistic__number_of_usages"},{"location":"rdfLevelSummaryStatistic__number_of_usages/#domain-and-range","text":"None -> OPT Integer","title":"Domain and Range"},{"location":"rdfLevelSummaryStatistic__number_of_usages/#parents","text":"","title":"Parents"},{"location":"rdfLevelSummaryStatistic__number_of_usages/#children","text":"","title":"Children"},{"location":"rdfLevelSummaryStatistic__number_of_usages/#used-by","text":"CountOfInstantiatedClasses CountOfPredicates RdfLevelSummaryStatistic","title":"Used by"},{"location":"rdf_index/","text":"Semsql-Rdf schema Abstractions for working with RDF and RDFS triples Classes Node - The basic unit of representation in an RDF or OWL graph BlankNode - A node with an ID that is not preserved between databases RdfListNode - A node representing an RDF list. Note that you will not likely need to use this directly. ClassNode - A node that represents an RDFS/OWL class IriNode NamedIndividualNode - A node that represents an OWL Named Individual PropertyNode - Note this only directly classifies nodes asserted to be rdf:Properties Prefix - Maps CURIEs to URIs RdfLevelSummaryStatistic - Abstract grouping for views/classes that provide some kind of count summary about an individual element CountOfInstantiatedClasses - Number of distinct instantiations of a class. Note in many OBOs, classes are not directly instantiated CountOfPredicates - Number of distinct usages of a predicate. NOTE MAY CHANGE: does not currently count existential usage in OWL CountOfSubclasses - Number of subclasses for a given class Statements - Represents an RDF triple NodeToNodeStatement - A statement where object is non-null and value is not populated RdfTypeStatement - A statement that indicates the asserted type of the subject entity RdfsDomainStatement RdfsRangeStatement RdfsSubclassOfStatement RdfsSubclassOfNamedStatement RdfsSubpropertyOfStatement NodeToValueStatement - A statement where value is non-null and object is not populated RdfsLabelStatement RdfListStatement - A statement that is used to represent aspects of RDF lists RdfFirstStatement - A statement that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfListMemberStatement RdfRestStatement - A statement that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfRestTransitiveStatement Mixins ClassTrait IndividualTrait IsReport - Used to describe classes/views that have a reporting function NodeTrait - abstract groupings/properties for different aspects of the model ClassTrait IndividualTrait PropertyTrait PropertyTrait Slots base - The base URI a prefix will expand to datatype description id - An identifier for an element. Note blank node ids are not unique across databases iri node\u279eid language object - Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated node to node statement\u279eobject rdf type statement\u279eobject - The entity type rdfs subclass of statement\u279eobject - The superclass element of the triple rdfs subproperty of statement\u279eobject - The superproperty element of the triple predicate prefix - A standardized prefix such as 'GO' or 'rdf' or 'FlyBase' \u279ecount_value \u279eelement stanza subject rdf list statement\u279esubject - The rdf:List to which the statement applies rdfs subclass of statement\u279esubject - The subclass element of the triple rdfs subproperty of statement\u279esubject - The subproperty element of the triple value - Note the range of this slot is always a string. Only used the triple represents a literal assertion node to value statement\u279evalue rdfs label statement\u279evalue - The label value Enums Types Built in Bool Decimal ElementIdentifier NCName NodeIdentifier URI URIorCURIE XSDDate XSDDateTime XSDTime float int str Defined Boolean ( Bool ) - A binary (true or false) value Date ( XSDDate ) - a date (year, month and day) in an idealized calendar Datetime ( XSDDateTime ) - The combination of a date and time Decimal ( Decimal ) - A real number with arbitrary precision that conforms to the xsd:decimal specification Double ( float ) - A real number that conforms to the xsd:double specification Float ( float ) - A real number that conforms to the xsd:float specification Integer ( int ) - An integer LiteralAsStringType ( String ) Ncname ( NCName ) - Prefix part of CURIE NodeIdType ( Uriorcurie ) Nodeidentifier ( NodeIdentifier ) - A URI, CURIE or BNODE that represents a node in a model. Objectidentifier ( ElementIdentifier ) - A URI or CURIE that represents an object in the model. String ( str ) - A character string Time ( XSDTime ) - A time object represents a (local) time of day, independent of any particular day Uri ( URI ) - a complete URI Uriorcurie ( URIorCURIE ) - a URI or a CURIE","title":"RDF"},{"location":"rdf_index/#semsql-rdf-schema","text":"Abstractions for working with RDF and RDFS triples","title":"Semsql-Rdf schema"},{"location":"rdf_index/#classes","text":"Node - The basic unit of representation in an RDF or OWL graph BlankNode - A node with an ID that is not preserved between databases RdfListNode - A node representing an RDF list. Note that you will not likely need to use this directly. ClassNode - A node that represents an RDFS/OWL class IriNode NamedIndividualNode - A node that represents an OWL Named Individual PropertyNode - Note this only directly classifies nodes asserted to be rdf:Properties Prefix - Maps CURIEs to URIs RdfLevelSummaryStatistic - Abstract grouping for views/classes that provide some kind of count summary about an individual element CountOfInstantiatedClasses - Number of distinct instantiations of a class. Note in many OBOs, classes are not directly instantiated CountOfPredicates - Number of distinct usages of a predicate. NOTE MAY CHANGE: does not currently count existential usage in OWL CountOfSubclasses - Number of subclasses for a given class Statements - Represents an RDF triple NodeToNodeStatement - A statement where object is non-null and value is not populated RdfTypeStatement - A statement that indicates the asserted type of the subject entity RdfsDomainStatement RdfsRangeStatement RdfsSubclassOfStatement RdfsSubclassOfNamedStatement RdfsSubpropertyOfStatement NodeToValueStatement - A statement where value is non-null and object is not populated RdfsLabelStatement RdfListStatement - A statement that is used to represent aspects of RDF lists RdfFirstStatement - A statement that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfListMemberStatement RdfRestStatement - A statement that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfRestTransitiveStatement","title":"Classes"},{"location":"rdf_index/#mixins","text":"ClassTrait IndividualTrait IsReport - Used to describe classes/views that have a reporting function NodeTrait - abstract groupings/properties for different aspects of the model ClassTrait IndividualTrait PropertyTrait PropertyTrait","title":"Mixins"},{"location":"rdf_index/#slots","text":"base - The base URI a prefix will expand to datatype description id - An identifier for an element. Note blank node ids are not unique across databases iri node\u279eid language object - Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated node to node statement\u279eobject rdf type statement\u279eobject - The entity type rdfs subclass of statement\u279eobject - The superclass element of the triple rdfs subproperty of statement\u279eobject - The superproperty element of the triple predicate prefix - A standardized prefix such as 'GO' or 'rdf' or 'FlyBase' \u279ecount_value \u279eelement stanza subject rdf list statement\u279esubject - The rdf:List to which the statement applies rdfs subclass of statement\u279esubject - The subclass element of the triple rdfs subproperty of statement\u279esubject - The subproperty element of the triple value - Note the range of this slot is always a string. Only used the triple represents a literal assertion node to value statement\u279evalue rdfs label statement\u279evalue - The label value","title":"Slots"},{"location":"rdf_index/#enums","text":"","title":"Enums"},{"location":"rdf_index/#types","text":"","title":"Types"},{"location":"rdf_index/#built-in","text":"Bool Decimal ElementIdentifier NCName NodeIdentifier URI URIorCURIE XSDDate XSDDateTime XSDTime float int str","title":"Built in"},{"location":"rdf_index/#defined","text":"Boolean ( Bool ) - A binary (true or false) value Date ( XSDDate ) - a date (year, month and day) in an idealized calendar Datetime ( XSDDateTime ) - The combination of a date and time Decimal ( Decimal ) - A real number with arbitrary precision that conforms to the xsd:decimal specification Double ( float ) - A real number that conforms to the xsd:double specification Float ( float ) - A real number that conforms to the xsd:float specification Integer ( int ) - An integer LiteralAsStringType ( String ) Ncname ( NCName ) - Prefix part of CURIE NodeIdType ( Uriorcurie ) Nodeidentifier ( NodeIdentifier ) - A URI, CURIE or BNODE that represents a node in a model. Objectidentifier ( ElementIdentifier ) - A URI or CURIE that represents an object in the model. String ( str ) - A character string Time ( XSDTime ) - A time object represents a (local) time of day, independent of any particular day Uri ( URI ) - a complete URI Uriorcurie ( URIorCURIE ) - a URI or a CURIE","title":"Defined"},{"location":"rdf_list_statement_subject/","text":"Slot: rdf_list_statement_subject The rdf:List to which the statement applies URI: semsql:rdf_list_statement_subject Domain and Range RdfListStatement -> OPT RdfListNode Parents is_a: subject Children Used by RdfFirstStatement RdfListMemberStatement RdfListStatement RdfRestStatement RdfRestTransitiveStatement","title":"Slot: rdf_list_statement_subject"},{"location":"rdf_list_statement_subject/#slot-rdf_list_statement_subject","text":"The rdf:List to which the statement applies URI: semsql:rdf_list_statement_subject","title":"Slot: rdf_list_statement_subject"},{"location":"rdf_list_statement_subject/#domain-and-range","text":"RdfListStatement -> OPT RdfListNode","title":"Domain and Range"},{"location":"rdf_list_statement_subject/#parents","text":"is_a: subject","title":"Parents"},{"location":"rdf_list_statement_subject/#children","text":"","title":"Children"},{"location":"rdf_list_statement_subject/#used-by","text":"RdfFirstStatement RdfListMemberStatement RdfListStatement RdfRestStatement RdfRestTransitiveStatement","title":"Used by"},{"location":"rdf_type_statement_object/","text":"Slot: rdf_type_statement_object The entity type URI: semsql:rdf_type_statement_object Domain and Range RdfTypeStatement -> REQ ClassNode Parents is_a: node to node statement\u279eobject Children Used by RdfTypeStatement","title":"Slot: rdf_type_statement_object"},{"location":"rdf_type_statement_object/#slot-rdf_type_statement_object","text":"The entity type URI: semsql:rdf_type_statement_object","title":"Slot: rdf_type_statement_object"},{"location":"rdf_type_statement_object/#domain-and-range","text":"RdfTypeStatement -> REQ ClassNode","title":"Domain and Range"},{"location":"rdf_type_statement_object/#parents","text":"is_a: node to node statement\u279eobject","title":"Parents"},{"location":"rdf_type_statement_object/#children","text":"","title":"Children"},{"location":"rdf_type_statement_object/#used-by","text":"RdfTypeStatement","title":"Used by"},{"location":"rdfs_label_statement_value/","text":"Slot: rdfs_label_statement_value The label value URI: semsql:rdfs_label_statement_value Domain and Range RdfsLabelStatement -> REQ String Parents is_a: node to value statement\u279evalue Children Used by RdfsLabelStatement","title":"Slot: rdfs_label_statement_value"},{"location":"rdfs_label_statement_value/#slot-rdfs_label_statement_value","text":"The label value URI: semsql:rdfs_label_statement_value","title":"Slot: rdfs_label_statement_value"},{"location":"rdfs_label_statement_value/#domain-and-range","text":"RdfsLabelStatement -> REQ String","title":"Domain and Range"},{"location":"rdfs_label_statement_value/#parents","text":"is_a: node to value statement\u279evalue","title":"Parents"},{"location":"rdfs_label_statement_value/#children","text":"","title":"Children"},{"location":"rdfs_label_statement_value/#used-by","text":"RdfsLabelStatement","title":"Used by"},{"location":"rdfs_subClassOf_statement_object/","text":"Slot: rdfs_subClassOf_statement_object The superclass element of the triple URI: semsql:rdfs_subClassOf_statement_object Domain and Range RdfsSubClassOfStatement -> OPT ClassNode Parents is_a: object Children Used by RdfsSubClassOfStatement","title":"Slot: rdfs_subClassOf_statement_object"},{"location":"rdfs_subClassOf_statement_object/#slot-rdfs_subclassof_statement_object","text":"The superclass element of the triple URI: semsql:rdfs_subClassOf_statement_object","title":"Slot: rdfs_subClassOf_statement_object"},{"location":"rdfs_subClassOf_statement_object/#domain-and-range","text":"RdfsSubClassOfStatement -> OPT ClassNode","title":"Domain and Range"},{"location":"rdfs_subClassOf_statement_object/#parents","text":"is_a: object","title":"Parents"},{"location":"rdfs_subClassOf_statement_object/#children","text":"","title":"Children"},{"location":"rdfs_subClassOf_statement_object/#used-by","text":"RdfsSubClassOfStatement","title":"Used by"},{"location":"rdfs_subClassOf_statement_subject/","text":"Slot: rdfs_subClassOf_statement_subject The subclass element of the triple URI: semsql:rdfs_subClassOf_statement_subject Domain and Range RdfsSubClassOfStatement -> OPT ClassNode Parents is_a: subject Children Used by RdfsSubClassOfStatement","title":"Slot: rdfs_subClassOf_statement_subject"},{"location":"rdfs_subClassOf_statement_subject/#slot-rdfs_subclassof_statement_subject","text":"The subclass element of the triple URI: semsql:rdfs_subClassOf_statement_subject","title":"Slot: rdfs_subClassOf_statement_subject"},{"location":"rdfs_subClassOf_statement_subject/#domain-and-range","text":"RdfsSubClassOfStatement -> OPT ClassNode","title":"Domain and Range"},{"location":"rdfs_subClassOf_statement_subject/#parents","text":"is_a: subject","title":"Parents"},{"location":"rdfs_subClassOf_statement_subject/#children","text":"","title":"Children"},{"location":"rdfs_subClassOf_statement_subject/#used-by","text":"RdfsSubClassOfStatement","title":"Used by"},{"location":"rdfs_subclass_of_statement_object/","text":"Slot: rdfs_subclass_of_statement_object The superclass element of the triple URI: semsql:rdfs_subclass_of_statement_object Domain and Range RdfsSubclassOfStatement -> REQ ClassNode Parents is_a: node to node statement\u279eobject Children Used by RdfsSubclassOfNamedStatement RdfsSubclassOfStatement","title":"Slot: rdfs_subclass_of_statement_object"},{"location":"rdfs_subclass_of_statement_object/#slot-rdfs_subclass_of_statement_object","text":"The superclass element of the triple URI: semsql:rdfs_subclass_of_statement_object","title":"Slot: rdfs_subclass_of_statement_object"},{"location":"rdfs_subclass_of_statement_object/#domain-and-range","text":"RdfsSubclassOfStatement -> REQ ClassNode","title":"Domain and Range"},{"location":"rdfs_subclass_of_statement_object/#parents","text":"is_a: node to node statement\u279eobject","title":"Parents"},{"location":"rdfs_subclass_of_statement_object/#children","text":"","title":"Children"},{"location":"rdfs_subclass_of_statement_object/#used-by","text":"RdfsSubclassOfNamedStatement RdfsSubclassOfStatement","title":"Used by"},{"location":"rdfs_subclass_of_statement_subject/","text":"Slot: rdfs_subclass_of_statement_subject The subclass element of the triple URI: semsql:rdfs_subclass_of_statement_subject Domain and Range RdfsSubclassOfStatement -> OPT ClassNode Parents is_a: subject Children Used by RdfsSubclassOfNamedStatement RdfsSubclassOfStatement","title":"Slot: rdfs_subclass_of_statement_subject"},{"location":"rdfs_subclass_of_statement_subject/#slot-rdfs_subclass_of_statement_subject","text":"The subclass element of the triple URI: semsql:rdfs_subclass_of_statement_subject","title":"Slot: rdfs_subclass_of_statement_subject"},{"location":"rdfs_subclass_of_statement_subject/#domain-and-range","text":"RdfsSubclassOfStatement -> OPT ClassNode","title":"Domain and Range"},{"location":"rdfs_subclass_of_statement_subject/#parents","text":"is_a: subject","title":"Parents"},{"location":"rdfs_subclass_of_statement_subject/#children","text":"","title":"Children"},{"location":"rdfs_subclass_of_statement_subject/#used-by","text":"RdfsSubclassOfNamedStatement RdfsSubclassOfStatement","title":"Used by"},{"location":"rdfs_subproperty_of_statement_object/","text":"Slot: rdfs_subproperty_of_statement_object The superproperty element of the triple URI: semsql:rdfs_subproperty_of_statement_object Domain and Range RdfsSubpropertyOfStatement -> REQ PropertyNode Parents is_a: node to node statement\u279eobject Children Used by RdfsSubpropertyOfStatement","title":"Slot: rdfs_subproperty_of_statement_object"},{"location":"rdfs_subproperty_of_statement_object/#slot-rdfs_subproperty_of_statement_object","text":"The superproperty element of the triple URI: semsql:rdfs_subproperty_of_statement_object","title":"Slot: rdfs_subproperty_of_statement_object"},{"location":"rdfs_subproperty_of_statement_object/#domain-and-range","text":"RdfsSubpropertyOfStatement -> REQ PropertyNode","title":"Domain and Range"},{"location":"rdfs_subproperty_of_statement_object/#parents","text":"is_a: node to node statement\u279eobject","title":"Parents"},{"location":"rdfs_subproperty_of_statement_object/#children","text":"","title":"Children"},{"location":"rdfs_subproperty_of_statement_object/#used-by","text":"RdfsSubpropertyOfStatement","title":"Used by"},{"location":"rdfs_subproperty_of_statement_subject/","text":"Slot: rdfs_subproperty_of_statement_subject The subproperty element of the triple URI: semsql:rdfs_subproperty_of_statement_subject Domain and Range RdfsSubpropertyOfStatement -> OPT PropertyNode Parents is_a: subject Children Used by RdfsSubpropertyOfStatement","title":"Slot: rdfs_subproperty_of_statement_subject"},{"location":"rdfs_subproperty_of_statement_subject/#slot-rdfs_subproperty_of_statement_subject","text":"The subproperty element of the triple URI: semsql:rdfs_subproperty_of_statement_subject","title":"Slot: rdfs_subproperty_of_statement_subject"},{"location":"rdfs_subproperty_of_statement_subject/#domain-and-range","text":"RdfsSubpropertyOfStatement -> OPT PropertyNode","title":"Domain and Range"},{"location":"rdfs_subproperty_of_statement_subject/#parents","text":"is_a: subject","title":"Parents"},{"location":"rdfs_subproperty_of_statement_subject/#children","text":"","title":"Children"},{"location":"rdfs_subproperty_of_statement_subject/#used-by","text":"RdfsSubpropertyOfStatement","title":"Used by"},{"location":"relation_graph_index/","text":"Relation_Graph schema Module for representing Relation Graphs. The core concept in a relation graph is an Edge , which consists of subject predicate object When mapping from OWL, an Edge corresponds to one of: A SubClassOf B , where B is a named class, and the predicate is rdfs:subClassOf A SubClassOf P some B , and the predicate is P Classes Node - The basic unit of representation in an RDF or OWL graph BlankNode - A node with an ID that is not preserved between databases AnonymousExpression - An OWL expression, such as a class expression. Expressions are \"anonymous\" as they are a composition of named elements rather than a named element themselves AnonymousClassExpression - An OWL anonymous class expression, such as for example SomeValuesFrom(partOf Hand) OwlRestriction - An OWL restriction, such as SomeValuesFrom(partOf Hand) OwlAllValuesFrom OwlHasSelf OwlHasValue OwlSomeValuesFrom - An OWL SomeValuesFrom restriction AnonymousIndividualExpression AnonymousPropertyExpression RdfListNode - A node representing an RDF list. Note that you will not likely need to use this directly. ClassNode - A node that represents an RDFS/OWL class DeprecatedNode IriNode NamedIndividualNode - A node that represents an OWL Named Individual OntologyNode - A node representing an ontology PropertyNode - Note this only directly classifies nodes asserted to be rdf:Properties AnnotationPropertyNode - A node representing an OWL annotation property ObjectPropertyNode - A node representing an OWL object property AsymmetricPropertyNode IrreflexivePropertyNode - A node representing an OWL irreflexive object property ReflexivePropertyNode - A node representing an OWL reflexive object property SymmetricPropertyNode - A node representing an OWL symmetric object property TransitivePropertyNode - A node representing an OWL transitive object property OwlComplexAxiom - An axiom that is composed of two or more statements OwlEquivalentToIntersectionMember - Composition of OwlEquivalentClass , OwlIntersectionOf , and RdfListMember ; C = X1 and ... and Xn OwlSubclassOfSomeValuesFrom - Composition of subClassOf and SomeValuesFrom Prefix - Maps CURIEs to URIs RdfLevelSummaryStatistic - Abstract grouping for views/classes that provide some kind of count summary about an individual element CountOfInstantiatedClasses - Number of distinct instantiations of a class. Note in many OBOs, classes are not directly instantiated CountOfPredicates - Number of distinct usages of a predicate. NOTE MAY CHANGE: does not currently count existential usage in OWL CountOfSubclasses - Number of subclasses for a given class RelationGraphConstruct - A construct used as part of a Relation Graph Edge - A relation graph edge that connects two entities by a predicate. Note an edge is distinct from a statement, in that an axiom such as A SubClassOf R some B is represented as multiple statements, but is a single relation graph edge EntailedEdge - A relation graph edge that is inferred SubgraphQuery - A subgraph query encompasses as subgraph edge and a seed/anchor object and seed/anchor predicate SubgraphEdgeByAncestor - An edge within a subgraph anchored around a set of ancestor terms SubgraphEdgeByChild - An edge within a subgraph anchored around a set of child terms SubgraphEdgeByDescendant - An edge within a subgraph anchored around a set of descendant terms SubgraphEdgeByParent - An edge within a subgraph anchored around a set of parent terms SubgraphEdgeBySelf - A special null form of a subgraph query where there is no expansion Statements - Represents an RDF triple NodeToNodeStatement - A statement where object is non-null and value is not populated OwlComplementOfStatement OwlDisjointClassStatement OwlEquivalentClassStatement - A statement that connects two class nodes where both classes are equivalent OwlImportsStatement OwlInverseOfStatement OwlSameAsStatement - A statement that connects two individual nodes where both individual are equivalent RdfTypeStatement - A statement that indicates the asserted type of the subject entity RdfsDomainStatement RdfsRangeStatement RdfsSubclassOfStatement RdfsSubclassOfNamedStatement RdfsSubpropertyOfStatement NodeToValueStatement - A statement where value is non-null and object is not populated RdfsLabelStatement OwlAxiom OwlAxiomAnnotation OwlReifiedAxiom - An OWL axiom that has been reified - i.e. it includes an id field that uniquely identifies that axiom and which can be the subject of additional statements RdfListStatement - A statement that is used to represent aspects of RDF lists RdfFirstStatement - A statement that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfListMemberStatement RdfRestStatement - A statement that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfRestTransitiveStatement Mixins ClassTrait IndividualTrait IsReport - Used to describe classes/views that have a reporting function NodeTrait - abstract groupings/properties for different aspects of the model ClassTrait IndividualTrait PropertyTrait PropertyTrait Slots anchor object subgraph query\u279eanchor object - The entity that is used to seed the graph. The seed entity will bear some relationship to each subgraph edge; E.g. with an ancestor subgraph query, all edges will have a subject that descends from the ancestor subgraph edge by ancestor\u279eanchor object - The ancestor term subgraph edge by child\u279eanchor object - The child term subgraph edge by descendant\u279eanchor object - The descendant term subgraph edge by parent\u279eanchor object - The parent term anchor predicate subgraph query\u279eanchor predicate - The predicate that is used to determine if an edge should be included based on relationship to the anchor_object. subgraph edge by ancestor\u279eanchor predicate - The entailed predicate that holds between each edge subject and the ancestor subgraph edge by child\u279eanchor predicate - The entailed predicate that holds between the child and each edge subject subgraph edge by descendant\u279eanchor predicate - The entailed predicate that holds between the descendant and each edge subject subgraph edge by parent\u279eanchor predicate - The entailed predicate that holds between each edge subject and the parent axiom datatype axiom language axiom object axiom predicate axiom value base - The base URI a prefix will expand to datatype description filler owl has self\u279efiller - This is Null for a self-restriction id - An identifier for an element. Note blank node ids are not unique across databases iri node\u279eid owl restriction\u279eid - the id of the restriction language object - Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated node to node statement\u279eobject owl disjoint class statement\u279eobject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279eobject - One of the two classes that are equivalent. No significance to subject vs object owl same as statement\u279eobject - One of the two classes that are equivalent. No significance to subject vs object rdf type statement\u279eobject - The entity type rdfs subclass of statement\u279eobject - The superclass element of the triple rdfs subproperty of statement\u279eobject - The superproperty element of the triple owl equivalent to intersection member\u279eobject - a class expression that forms the defining expression owl subclass of some values from\u279eobject - the class D in the axiom C subClassOf P some D subgraph query\u279eobject - object of the subgraph edge on property predicate owl subclass of some values from\u279epredicate - the predicate P in the axiom C subClassOf P some D subgraph query\u279epredicate - predicate of the subgraph edge prefix - A standardized prefix such as 'GO' or 'rdf' or 'FlyBase' \u279ecount_value \u279eelement restriction stanza subject owl disjoint class statement\u279esubject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279esubject - One of the two classes that are equivalent. No significance to subject vs object owl equivalent to intersection member\u279esubject - the defined class owl same as statement\u279esubject - One of the two classes that are equivalent. No significance to subject vs object owl subclass of some values from\u279esubject - the class C in the axiom C subClassOf P some D rdf list statement\u279esubject - The rdf:List to which the statement applies rdfs subclass of statement\u279esubject - The subclass element of the triple rdfs subproperty of statement\u279esubject - The subproperty element of the triple subgraph query\u279esubject - subject of the subgraph edge value - Note the range of this slot is always a string. Only used the triple represents a literal assertion node to value statement\u279evalue rdfs label statement\u279evalue - The label value Enums Types Built in Bool Decimal ElementIdentifier NCName NodeIdentifier URI URIorCURIE XSDDate XSDDateTime XSDTime float int str Defined Boolean ( Bool ) - A binary (true or false) value Date ( XSDDate ) - a date (year, month and day) in an idealized calendar Datetime ( XSDDateTime ) - The combination of a date and time Decimal ( Decimal ) - A real number with arbitrary precision that conforms to the xsd:decimal specification Double ( float ) - A real number that conforms to the xsd:double specification Float ( float ) - A real number that conforms to the xsd:float specification Integer ( int ) - An integer LiteralAsStringType ( String ) Ncname ( NCName ) - Prefix part of CURIE NodeIdType ( Uriorcurie ) Nodeidentifier ( NodeIdentifier ) - A URI, CURIE or BNODE that represents a node in a model. Objectidentifier ( ElementIdentifier ) - A URI or CURIE that represents an object in the model. String ( str ) - A character string Time ( XSDTime ) - A time object represents a (local) time of day, independent of any particular day Uri ( URI ) - a complete URI Uriorcurie ( URIorCURIE ) - a URI or a CURIE","title":"Relation Graph"},{"location":"relation_graph_index/#relation_graph-schema","text":"Module for representing Relation Graphs. The core concept in a relation graph is an Edge , which consists of subject predicate object When mapping from OWL, an Edge corresponds to one of: A SubClassOf B , where B is a named class, and the predicate is rdfs:subClassOf A SubClassOf P some B , and the predicate is P","title":"Relation_Graph schema"},{"location":"relation_graph_index/#classes","text":"Node - The basic unit of representation in an RDF or OWL graph BlankNode - A node with an ID that is not preserved between databases AnonymousExpression - An OWL expression, such as a class expression. Expressions are \"anonymous\" as they are a composition of named elements rather than a named element themselves AnonymousClassExpression - An OWL anonymous class expression, such as for example SomeValuesFrom(partOf Hand) OwlRestriction - An OWL restriction, such as SomeValuesFrom(partOf Hand) OwlAllValuesFrom OwlHasSelf OwlHasValue OwlSomeValuesFrom - An OWL SomeValuesFrom restriction AnonymousIndividualExpression AnonymousPropertyExpression RdfListNode - A node representing an RDF list. Note that you will not likely need to use this directly. ClassNode - A node that represents an RDFS/OWL class DeprecatedNode IriNode NamedIndividualNode - A node that represents an OWL Named Individual OntologyNode - A node representing an ontology PropertyNode - Note this only directly classifies nodes asserted to be rdf:Properties AnnotationPropertyNode - A node representing an OWL annotation property ObjectPropertyNode - A node representing an OWL object property AsymmetricPropertyNode IrreflexivePropertyNode - A node representing an OWL irreflexive object property ReflexivePropertyNode - A node representing an OWL reflexive object property SymmetricPropertyNode - A node representing an OWL symmetric object property TransitivePropertyNode - A node representing an OWL transitive object property OwlComplexAxiom - An axiom that is composed of two or more statements OwlEquivalentToIntersectionMember - Composition of OwlEquivalentClass , OwlIntersectionOf , and RdfListMember ; C = X1 and ... and Xn OwlSubclassOfSomeValuesFrom - Composition of subClassOf and SomeValuesFrom Prefix - Maps CURIEs to URIs RdfLevelSummaryStatistic - Abstract grouping for views/classes that provide some kind of count summary about an individual element CountOfInstantiatedClasses - Number of distinct instantiations of a class. Note in many OBOs, classes are not directly instantiated CountOfPredicates - Number of distinct usages of a predicate. NOTE MAY CHANGE: does not currently count existential usage in OWL CountOfSubclasses - Number of subclasses for a given class RelationGraphConstruct - A construct used as part of a Relation Graph Edge - A relation graph edge that connects two entities by a predicate. Note an edge is distinct from a statement, in that an axiom such as A SubClassOf R some B is represented as multiple statements, but is a single relation graph edge EntailedEdge - A relation graph edge that is inferred SubgraphQuery - A subgraph query encompasses as subgraph edge and a seed/anchor object and seed/anchor predicate SubgraphEdgeByAncestor - An edge within a subgraph anchored around a set of ancestor terms SubgraphEdgeByChild - An edge within a subgraph anchored around a set of child terms SubgraphEdgeByDescendant - An edge within a subgraph anchored around a set of descendant terms SubgraphEdgeByParent - An edge within a subgraph anchored around a set of parent terms SubgraphEdgeBySelf - A special null form of a subgraph query where there is no expansion Statements - Represents an RDF triple NodeToNodeStatement - A statement where object is non-null and value is not populated OwlComplementOfStatement OwlDisjointClassStatement OwlEquivalentClassStatement - A statement that connects two class nodes where both classes are equivalent OwlImportsStatement OwlInverseOfStatement OwlSameAsStatement - A statement that connects two individual nodes where both individual are equivalent RdfTypeStatement - A statement that indicates the asserted type of the subject entity RdfsDomainStatement RdfsRangeStatement RdfsSubclassOfStatement RdfsSubclassOfNamedStatement RdfsSubpropertyOfStatement NodeToValueStatement - A statement where value is non-null and object is not populated RdfsLabelStatement OwlAxiom OwlAxiomAnnotation OwlReifiedAxiom - An OWL axiom that has been reified - i.e. it includes an id field that uniquely identifies that axiom and which can be the subject of additional statements RdfListStatement - A statement that is used to represent aspects of RDF lists RdfFirstStatement - A statement that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfListMemberStatement RdfRestStatement - A statement that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfRestTransitiveStatement","title":"Classes"},{"location":"relation_graph_index/#mixins","text":"ClassTrait IndividualTrait IsReport - Used to describe classes/views that have a reporting function NodeTrait - abstract groupings/properties for different aspects of the model ClassTrait IndividualTrait PropertyTrait PropertyTrait","title":"Mixins"},{"location":"relation_graph_index/#slots","text":"anchor object subgraph query\u279eanchor object - The entity that is used to seed the graph. The seed entity will bear some relationship to each subgraph edge; E.g. with an ancestor subgraph query, all edges will have a subject that descends from the ancestor subgraph edge by ancestor\u279eanchor object - The ancestor term subgraph edge by child\u279eanchor object - The child term subgraph edge by descendant\u279eanchor object - The descendant term subgraph edge by parent\u279eanchor object - The parent term anchor predicate subgraph query\u279eanchor predicate - The predicate that is used to determine if an edge should be included based on relationship to the anchor_object. subgraph edge by ancestor\u279eanchor predicate - The entailed predicate that holds between each edge subject and the ancestor subgraph edge by child\u279eanchor predicate - The entailed predicate that holds between the child and each edge subject subgraph edge by descendant\u279eanchor predicate - The entailed predicate that holds between the descendant and each edge subject subgraph edge by parent\u279eanchor predicate - The entailed predicate that holds between each edge subject and the parent axiom datatype axiom language axiom object axiom predicate axiom value base - The base URI a prefix will expand to datatype description filler owl has self\u279efiller - This is Null for a self-restriction id - An identifier for an element. Note blank node ids are not unique across databases iri node\u279eid owl restriction\u279eid - the id of the restriction language object - Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated node to node statement\u279eobject owl disjoint class statement\u279eobject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279eobject - One of the two classes that are equivalent. No significance to subject vs object owl same as statement\u279eobject - One of the two classes that are equivalent. No significance to subject vs object rdf type statement\u279eobject - The entity type rdfs subclass of statement\u279eobject - The superclass element of the triple rdfs subproperty of statement\u279eobject - The superproperty element of the triple owl equivalent to intersection member\u279eobject - a class expression that forms the defining expression owl subclass of some values from\u279eobject - the class D in the axiom C subClassOf P some D subgraph query\u279eobject - object of the subgraph edge on property predicate owl subclass of some values from\u279epredicate - the predicate P in the axiom C subClassOf P some D subgraph query\u279epredicate - predicate of the subgraph edge prefix - A standardized prefix such as 'GO' or 'rdf' or 'FlyBase' \u279ecount_value \u279eelement restriction stanza subject owl disjoint class statement\u279esubject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279esubject - One of the two classes that are equivalent. No significance to subject vs object owl equivalent to intersection member\u279esubject - the defined class owl same as statement\u279esubject - One of the two classes that are equivalent. No significance to subject vs object owl subclass of some values from\u279esubject - the class C in the axiom C subClassOf P some D rdf list statement\u279esubject - The rdf:List to which the statement applies rdfs subclass of statement\u279esubject - The subclass element of the triple rdfs subproperty of statement\u279esubject - The subproperty element of the triple subgraph query\u279esubject - subject of the subgraph edge value - Note the range of this slot is always a string. Only used the triple represents a literal assertion node to value statement\u279evalue rdfs label statement\u279evalue - The label value","title":"Slots"},{"location":"relation_graph_index/#enums","text":"","title":"Enums"},{"location":"relation_graph_index/#types","text":"","title":"Types"},{"location":"relation_graph_index/#built-in","text":"Bool Decimal ElementIdentifier NCName NodeIdentifier URI URIorCURIE XSDDate XSDDateTime XSDTime float int str","title":"Built in"},{"location":"relation_graph_index/#defined","text":"Boolean ( Bool ) - A binary (true or false) value Date ( XSDDate ) - a date (year, month and day) in an idealized calendar Datetime ( XSDDateTime ) - The combination of a date and time Decimal ( Decimal ) - A real number with arbitrary precision that conforms to the xsd:decimal specification Double ( float ) - A real number that conforms to the xsd:double specification Float ( float ) - A real number that conforms to the xsd:float specification Integer ( int ) - An integer LiteralAsStringType ( String ) Ncname ( NCName ) - Prefix part of CURIE NodeIdType ( Uriorcurie ) Nodeidentifier ( NodeIdentifier ) - A URI, CURIE or BNODE that represents a node in a model. Objectidentifier ( ElementIdentifier ) - A URI or CURIE that represents an object in the model. String ( str ) - A character string Time ( XSDTime ) - A time object represents a (local) time of day, independent of any particular day Uri ( URI ) - a complete URI Uriorcurie ( URIorCURIE ) - a URI or a CURIE","title":"Defined"},{"location":"repair_action_subject/","text":"Slot: repair_action_subject The thing that is problematic URI: semsql:repair_action_subject Domain and Range RepairAction -> OPT Node Parents is_a: subject Children Used by RepairAction","title":"Slot: repair_action_subject"},{"location":"repair_action_subject/#slot-repair_action_subject","text":"The thing that is problematic URI: semsql:repair_action_subject","title":"Slot: repair_action_subject"},{"location":"repair_action_subject/#domain-and-range","text":"RepairAction -> OPT Node","title":"Domain and Range"},{"location":"repair_action_subject/#parents","text":"is_a: subject","title":"Parents"},{"location":"repair_action_subject/#children","text":"","title":"Children"},{"location":"repair_action_subject/#used-by","text":"RepairAction","title":"Used by"},{"location":"restriction/","text":"Slot: restriction URI: semsql:restriction Domain and Range None -> OPT BlankNode Parents Children Used by","title":"Slot: restriction"},{"location":"restriction/#slot-restriction","text":"URI: semsql:restriction","title":"Slot: restriction"},{"location":"restriction/#domain-and-range","text":"None -> OPT BlankNode","title":"Domain and Range"},{"location":"restriction/#parents","text":"","title":"Parents"},{"location":"restriction/#children","text":"","title":"Children"},{"location":"restriction/#used-by","text":"","title":"Used by"},{"location":"semsql_index/","text":"Semsql schema A datamodel for RDF, OWL, and OBO Ontologies designed to work harmoniously with SQL databases. Note that the primary purpose of this linkml schema is to organize and define SQL VIEWs to be used on top of a generic SQL database following the rdftab statements schema. These SQL views are encoded with the sqlviews>> tag inside the yaml. We use linkml to do this rather than a simple SQL DDL file because linkml gives us a standard way to do things such as: attach descriptions to each view define a data dictionary of all columns used, together with domains/ranges modular structure with imports the ability to attach rich semantic metadata to each schema element Additionally, the framework provides automatic compilation to SQLAlchemy models, and tools for being able to turn views into indexed tables for efficient querying, as well as a rich searchable documentation system and other tooling. This schema is best browsed online: https://cmungall.github.io/semantic-sql/ Note that things are in flux, and there some oddities that need ironed out, see issues for details See the github repo for code to convert from the linkml yaml into SQL DDL Classes Node - The basic unit of representation in an RDF or OWL graph BlankNode - A node with an ID that is not preserved between databases AnonymousExpression - An OWL expression, such as a class expression. Expressions are \"anonymous\" as they are a composition of named elements rather than a named element themselves AnonymousClassExpression - An OWL anonymous class expression, such as for example SomeValuesFrom(partOf Hand) OwlRestriction - An OWL restriction, such as SomeValuesFrom(partOf Hand) OwlAllValuesFrom OwlHasSelf OwlHasValue OwlSomeValuesFrom - An OWL SomeValuesFrom restriction AnonymousIndividualExpression AnonymousPropertyExpression RdfListNode - A node representing an RDF list. Note that you will not likely need to use this directly. ClassNode - A node that represents an RDFS/OWL class DeprecatedNode IriNode NamedIndividualNode - A node that represents an OWL Named Individual OntologyNode - A node representing an ontology PropertyNode - Note this only directly classifies nodes asserted to be rdf:Properties AnnotationPropertyNode - A node representing an OWL annotation property ObjectPropertyNode - A node representing an OWL object property AsymmetricPropertyNode IrreflexivePropertyNode - A node representing an OWL irreflexive object property ReflexivePropertyNode - A node representing an OWL reflexive object property SymmetricPropertyNode - A node representing an OWL symmetric object property TransitivePropertyNode - A node representing an OWL transitive object property OwlComplexAxiom - An axiom that is composed of two or more statements OwlEquivalentToIntersectionMember - Composition of OwlEquivalentClass , OwlIntersectionOf , and RdfListMember ; C = X1 and ... and Xn OwlSubclassOfSomeValuesFrom - Composition of subClassOf and SomeValuesFrom Prefix - Maps CURIEs to URIs Problem - Represents an instance of a problem pertaining to conformance to OBO guidelines AllProblems LexicalProblem - a problem with the textual value of an annotation property NodeWithTwoLabelsProblem PropertyUsedWithDatatypeValuesAndObjects - A problem in which the same property is used two two different ways, one in which the range is a literal value, the other where it is an object. TrailingWhitespaceProblem RdfLevelSummaryStatistic - Abstract grouping for views/classes that provide some kind of count summary about an individual element CountOfInstantiatedClasses - Number of distinct instantiations of a class. Note in many OBOs, classes are not directly instantiated CountOfPredicates - Number of distinct usages of a predicate. NOTE MAY CHANGE: does not currently count existential usage in OWL CountOfSubclasses - Number of subclasses for a given class RelationGraphConstruct - A construct used as part of a Relation Graph Edge - A relation graph edge that connects two entities by a predicate. Note an edge is distinct from a statement, in that an axiom such as A SubClassOf R some B is represented as multiple statements, but is a single relation graph edge EntailedEdge - A relation graph edge that is inferred SubgraphQuery - A subgraph query encompasses as subgraph edge and a seed/anchor object and seed/anchor predicate SubgraphEdgeByAncestor - An edge within a subgraph anchored around a set of ancestor terms SubgraphEdgeByChild - An edge within a subgraph anchored around a set of child terms SubgraphEdgeByDescendant - An edge within a subgraph anchored around a set of descendant terms SubgraphEdgeByParent - An edge within a subgraph anchored around a set of parent terms SubgraphEdgeBySelf - A special null form of a subgraph query where there is no expansion RepairAction - Represents an action that needs to be taken to repair a problem Statements - Represents an RDF triple NodeToNodeStatement - A statement where object is non-null and value is not populated OwlComplementOfStatement OwlDisjointClassStatement OwlEquivalentClassStatement - A statement that connects two class nodes where both classes are equivalent OwlImportsStatement OwlInverseOfStatement OwlSameAsStatement - A statement that connects two individual nodes where both individual are equivalent RdfTypeStatement - A statement that indicates the asserted type of the subject entity RdfsDomainStatement RdfsRangeStatement RdfsSubclassOfStatement RdfsSubclassOfNamedStatement RdfsSubpropertyOfStatement NodeToValueStatement - A statement where value is non-null and object is not populated HasMappingStatement HasDbxrefStatement HasMatchStatement HasBroadMatchStatement HasExactMatchStatement HasNarrowMatchStatement HasRelatedMatchStatement HasOioSynonymStatement HasBroadSynonymStatement HasExactSynonymStatement HasNarrowSynonymStatement HasRelatedSynonymStatement HasSynonymStatement HasTextDefinitionStatement OntologyStatusStatement RdfsLabelStatement OwlAxiom OwlAxiomAnnotation AxiomDbxrefAnnotation OwlReifiedAxiom - An OWL axiom that has been reified - i.e. it includes an id field that uniquely identifies that axiom and which can be the subject of additional statements RdfListStatement - A statement that is used to represent aspects of RDF lists RdfFirstStatement - A statement that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfListMemberStatement RdfRestStatement - A statement that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfRestTransitiveStatement Mixins ClassTrait IndividualTrait IsReport - Used to describe classes/views that have a reporting function NodeTrait - abstract groupings/properties for different aspects of the model ClassTrait IndividualTrait PropertyTrait PropertyTrait Slots anchor object subgraph query\u279eanchor object - The entity that is used to seed the graph. The seed entity will bear some relationship to each subgraph edge; E.g. with an ancestor subgraph query, all edges will have a subject that descends from the ancestor subgraph edge by ancestor\u279eanchor object - The ancestor term subgraph edge by child\u279eanchor object - The child term subgraph edge by descendant\u279eanchor object - The descendant term subgraph edge by parent\u279eanchor object - The parent term anchor predicate subgraph query\u279eanchor predicate - The predicate that is used to determine if an edge should be included based on relationship to the anchor_object. subgraph edge by ancestor\u279eanchor predicate - The entailed predicate that holds between each edge subject and the ancestor subgraph edge by child\u279eanchor predicate - The entailed predicate that holds between the child and each edge subject subgraph edge by descendant\u279eanchor predicate - The entailed predicate that holds between the descendant and each edge subject subgraph edge by parent\u279eanchor predicate - The entailed predicate that holds between each edge subject and the parent axiom datatype axiom language axiom object axiom predicate axiom value base - The base URI a prefix will expand to datatype description filler owl has self\u279efiller - This is Null for a self-restriction id - An identifier for an element. Note blank node ids are not unique across databases iri node\u279eid owl restriction\u279eid - the id of the restriction language \u279elabel1 \u279elabel2 object - Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated node to node statement\u279eobject owl disjoint class statement\u279eobject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279eobject - One of the two classes that are equivalent. No significance to subject vs object owl same as statement\u279eobject - One of the two classes that are equivalent. No significance to subject vs object rdf type statement\u279eobject - The entity type rdfs subclass of statement\u279eobject - The superclass element of the triple rdfs subproperty of statement\u279eobject - The superproperty element of the triple owl equivalent to intersection member\u279eobject - a class expression that forms the defining expression owl subclass of some values from\u279eobject - the class D in the axiom C subClassOf P some D subgraph query\u279eobject - object of the subgraph edge on property predicate owl subclass of some values from\u279epredicate - the predicate P in the axiom C subClassOf P some D problem\u279epredicate - The property of the thing that is problematic subgraph query\u279epredicate - predicate of the subgraph edge prefix - A standardized prefix such as 'GO' or 'rdf' or 'FlyBase' \u279ecount_value \u279eelement restriction stanza subject owl disjoint class statement\u279esubject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279esubject - One of the two classes that are equivalent. No significance to subject vs object owl equivalent to intersection member\u279esubject - the defined class owl same as statement\u279esubject - One of the two classes that are equivalent. No significance to subject vs object owl subclass of some values from\u279esubject - the class C in the axiom C subClassOf P some D problem\u279esubject - The thing that is problematic rdf list statement\u279esubject - The rdf:List to which the statement applies rdfs subclass of statement\u279esubject - The subclass element of the triple rdfs subproperty of statement\u279esubject - The subproperty element of the triple repair action\u279esubject - The thing that is problematic subgraph query\u279esubject - subject of the subgraph edge value - Note the range of this slot is always a string. Only used the triple represents a literal assertion node to value statement\u279evalue rdfs label statement\u279evalue - The label value Enums Types Built in Bool Decimal ElementIdentifier NCName NodeIdentifier URI URIorCURIE XSDDate XSDDateTime XSDTime float int str Defined Boolean ( Bool ) - A binary (true or false) value Date ( XSDDate ) - a date (year, month and day) in an idealized calendar Datetime ( XSDDateTime ) - The combination of a date and time Decimal ( Decimal ) - A real number with arbitrary precision that conforms to the xsd:decimal specification Double ( float ) - A real number that conforms to the xsd:double specification Float ( float ) - A real number that conforms to the xsd:float specification Integer ( int ) - An integer LiteralAsStringType ( String ) Ncname ( NCName ) - Prefix part of CURIE NodeIdType ( Uriorcurie ) Nodeidentifier ( NodeIdentifier ) - A URI, CURIE or BNODE that represents a node in a model. Objectidentifier ( ElementIdentifier ) - A URI or CURIE that represents an object in the model. String ( str ) - A character string Time ( XSDTime ) - A time object represents a (local) time of day, independent of any particular day Uri ( URI ) - a complete URI Uriorcurie ( URIorCURIE ) - a URI or a CURIE","title":"Semsql schema"},{"location":"semsql_index/#semsql-schema","text":"A datamodel for RDF, OWL, and OBO Ontologies designed to work harmoniously with SQL databases. Note that the primary purpose of this linkml schema is to organize and define SQL VIEWs to be used on top of a generic SQL database following the rdftab statements schema. These SQL views are encoded with the sqlviews>> tag inside the yaml. We use linkml to do this rather than a simple SQL DDL file because linkml gives us a standard way to do things such as: attach descriptions to each view define a data dictionary of all columns used, together with domains/ranges modular structure with imports the ability to attach rich semantic metadata to each schema element Additionally, the framework provides automatic compilation to SQLAlchemy models, and tools for being able to turn views into indexed tables for efficient querying, as well as a rich searchable documentation system and other tooling. This schema is best browsed online: https://cmungall.github.io/semantic-sql/ Note that things are in flux, and there some oddities that need ironed out, see issues for details See the github repo for code to convert from the linkml yaml into SQL DDL","title":"Semsql schema"},{"location":"semsql_index/#classes","text":"Node - The basic unit of representation in an RDF or OWL graph BlankNode - A node with an ID that is not preserved between databases AnonymousExpression - An OWL expression, such as a class expression. Expressions are \"anonymous\" as they are a composition of named elements rather than a named element themselves AnonymousClassExpression - An OWL anonymous class expression, such as for example SomeValuesFrom(partOf Hand) OwlRestriction - An OWL restriction, such as SomeValuesFrom(partOf Hand) OwlAllValuesFrom OwlHasSelf OwlHasValue OwlSomeValuesFrom - An OWL SomeValuesFrom restriction AnonymousIndividualExpression AnonymousPropertyExpression RdfListNode - A node representing an RDF list. Note that you will not likely need to use this directly. ClassNode - A node that represents an RDFS/OWL class DeprecatedNode IriNode NamedIndividualNode - A node that represents an OWL Named Individual OntologyNode - A node representing an ontology PropertyNode - Note this only directly classifies nodes asserted to be rdf:Properties AnnotationPropertyNode - A node representing an OWL annotation property ObjectPropertyNode - A node representing an OWL object property AsymmetricPropertyNode IrreflexivePropertyNode - A node representing an OWL irreflexive object property ReflexivePropertyNode - A node representing an OWL reflexive object property SymmetricPropertyNode - A node representing an OWL symmetric object property TransitivePropertyNode - A node representing an OWL transitive object property OwlComplexAxiom - An axiom that is composed of two or more statements OwlEquivalentToIntersectionMember - Composition of OwlEquivalentClass , OwlIntersectionOf , and RdfListMember ; C = X1 and ... and Xn OwlSubclassOfSomeValuesFrom - Composition of subClassOf and SomeValuesFrom Prefix - Maps CURIEs to URIs Problem - Represents an instance of a problem pertaining to conformance to OBO guidelines AllProblems LexicalProblem - a problem with the textual value of an annotation property NodeWithTwoLabelsProblem PropertyUsedWithDatatypeValuesAndObjects - A problem in which the same property is used two two different ways, one in which the range is a literal value, the other where it is an object. TrailingWhitespaceProblem RdfLevelSummaryStatistic - Abstract grouping for views/classes that provide some kind of count summary about an individual element CountOfInstantiatedClasses - Number of distinct instantiations of a class. Note in many OBOs, classes are not directly instantiated CountOfPredicates - Number of distinct usages of a predicate. NOTE MAY CHANGE: does not currently count existential usage in OWL CountOfSubclasses - Number of subclasses for a given class RelationGraphConstruct - A construct used as part of a Relation Graph Edge - A relation graph edge that connects two entities by a predicate. Note an edge is distinct from a statement, in that an axiom such as A SubClassOf R some B is represented as multiple statements, but is a single relation graph edge EntailedEdge - A relation graph edge that is inferred SubgraphQuery - A subgraph query encompasses as subgraph edge and a seed/anchor object and seed/anchor predicate SubgraphEdgeByAncestor - An edge within a subgraph anchored around a set of ancestor terms SubgraphEdgeByChild - An edge within a subgraph anchored around a set of child terms SubgraphEdgeByDescendant - An edge within a subgraph anchored around a set of descendant terms SubgraphEdgeByParent - An edge within a subgraph anchored around a set of parent terms SubgraphEdgeBySelf - A special null form of a subgraph query where there is no expansion RepairAction - Represents an action that needs to be taken to repair a problem Statements - Represents an RDF triple NodeToNodeStatement - A statement where object is non-null and value is not populated OwlComplementOfStatement OwlDisjointClassStatement OwlEquivalentClassStatement - A statement that connects two class nodes where both classes are equivalent OwlImportsStatement OwlInverseOfStatement OwlSameAsStatement - A statement that connects two individual nodes where both individual are equivalent RdfTypeStatement - A statement that indicates the asserted type of the subject entity RdfsDomainStatement RdfsRangeStatement RdfsSubclassOfStatement RdfsSubclassOfNamedStatement RdfsSubpropertyOfStatement NodeToValueStatement - A statement where value is non-null and object is not populated HasMappingStatement HasDbxrefStatement HasMatchStatement HasBroadMatchStatement HasExactMatchStatement HasNarrowMatchStatement HasRelatedMatchStatement HasOioSynonymStatement HasBroadSynonymStatement HasExactSynonymStatement HasNarrowSynonymStatement HasRelatedSynonymStatement HasSynonymStatement HasTextDefinitionStatement OntologyStatusStatement RdfsLabelStatement OwlAxiom OwlAxiomAnnotation AxiomDbxrefAnnotation OwlReifiedAxiom - An OWL axiom that has been reified - i.e. it includes an id field that uniquely identifies that axiom and which can be the subject of additional statements RdfListStatement - A statement that is used to represent aspects of RDF lists RdfFirstStatement - A statement that connects a list to its first element. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfListMemberStatement RdfRestStatement - A statement that connects a list to its remaining elements. This is a low-level triple, it is unlikely you need to use this directly. It is used to define rdf_list_member_statement, which is more useful RdfRestTransitiveStatement","title":"Classes"},{"location":"semsql_index/#mixins","text":"ClassTrait IndividualTrait IsReport - Used to describe classes/views that have a reporting function NodeTrait - abstract groupings/properties for different aspects of the model ClassTrait IndividualTrait PropertyTrait PropertyTrait","title":"Mixins"},{"location":"semsql_index/#slots","text":"anchor object subgraph query\u279eanchor object - The entity that is used to seed the graph. The seed entity will bear some relationship to each subgraph edge; E.g. with an ancestor subgraph query, all edges will have a subject that descends from the ancestor subgraph edge by ancestor\u279eanchor object - The ancestor term subgraph edge by child\u279eanchor object - The child term subgraph edge by descendant\u279eanchor object - The descendant term subgraph edge by parent\u279eanchor object - The parent term anchor predicate subgraph query\u279eanchor predicate - The predicate that is used to determine if an edge should be included based on relationship to the anchor_object. subgraph edge by ancestor\u279eanchor predicate - The entailed predicate that holds between each edge subject and the ancestor subgraph edge by child\u279eanchor predicate - The entailed predicate that holds between the child and each edge subject subgraph edge by descendant\u279eanchor predicate - The entailed predicate that holds between the descendant and each edge subject subgraph edge by parent\u279eanchor predicate - The entailed predicate that holds between each edge subject and the parent axiom datatype axiom language axiom object axiom predicate axiom value base - The base URI a prefix will expand to datatype description filler owl has self\u279efiller - This is Null for a self-restriction id - An identifier for an element. Note blank node ids are not unique across databases iri node\u279eid owl restriction\u279eid - the id of the restriction language \u279elabel1 \u279elabel2 object - Note the range of this slot is always a node. If the triple represents a literal, instead value will be populated node to node statement\u279eobject owl disjoint class statement\u279eobject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279eobject - One of the two classes that are equivalent. No significance to subject vs object owl same as statement\u279eobject - One of the two classes that are equivalent. No significance to subject vs object rdf type statement\u279eobject - The entity type rdfs subclass of statement\u279eobject - The superclass element of the triple rdfs subproperty of statement\u279eobject - The superproperty element of the triple owl equivalent to intersection member\u279eobject - a class expression that forms the defining expression owl subclass of some values from\u279eobject - the class D in the axiom C subClassOf P some D subgraph query\u279eobject - object of the subgraph edge on property predicate owl subclass of some values from\u279epredicate - the predicate P in the axiom C subClassOf P some D problem\u279epredicate - The property of the thing that is problematic subgraph query\u279epredicate - predicate of the subgraph edge prefix - A standardized prefix such as 'GO' or 'rdf' or 'FlyBase' \u279ecount_value \u279eelement restriction stanza subject owl disjoint class statement\u279esubject - One of the two classes that are disjoint. No significance to subject vs object owl equivalent class statement\u279esubject - One of the two classes that are equivalent. No significance to subject vs object owl equivalent to intersection member\u279esubject - the defined class owl same as statement\u279esubject - One of the two classes that are equivalent. No significance to subject vs object owl subclass of some values from\u279esubject - the class C in the axiom C subClassOf P some D problem\u279esubject - The thing that is problematic rdf list statement\u279esubject - The rdf:List to which the statement applies rdfs subclass of statement\u279esubject - The subclass element of the triple rdfs subproperty of statement\u279esubject - The subproperty element of the triple repair action\u279esubject - The thing that is problematic subgraph query\u279esubject - subject of the subgraph edge value - Note the range of this slot is always a string. Only used the triple represents a literal assertion node to value statement\u279evalue rdfs label statement\u279evalue - The label value","title":"Slots"},{"location":"semsql_index/#enums","text":"","title":"Enums"},{"location":"semsql_index/#types","text":"","title":"Types"},{"location":"semsql_index/#built-in","text":"Bool Decimal ElementIdentifier NCName NodeIdentifier URI URIorCURIE XSDDate XSDDateTime XSDTime float int str","title":"Built in"},{"location":"semsql_index/#defined","text":"Boolean ( Bool ) - A binary (true or false) value Date ( XSDDate ) - a date (year, month and day) in an idealized calendar Datetime ( XSDDateTime ) - The combination of a date and time Decimal ( Decimal ) - A real number with arbitrary precision that conforms to the xsd:decimal specification Double ( float ) - A real number that conforms to the xsd:double specification Float ( float ) - A real number that conforms to the xsd:float specification Integer ( int ) - An integer LiteralAsStringType ( String ) Ncname ( NCName ) - Prefix part of CURIE NodeIdType ( Uriorcurie ) Nodeidentifier ( NodeIdentifier ) - A URI, CURIE or BNODE that represents a node in a model. Objectidentifier ( ElementIdentifier ) - A URI or CURIE that represents an object in the model. String ( str ) - A character string Time ( XSDTime ) - A time object represents a (local) time of day, independent of any particular day Uri ( URI ) - a complete URI Uriorcurie ( URIorCURIE ) - a URI or a CURIE","title":"Defined"},{"location":"stanza/","text":"Slot: stanza URI: semsql:stanza Domain and Range None -> OPT Node Parents Children Used by AxiomDbxrefAnnotation HasBroadMatchStatement HasBroadSynonymStatement HasDbxrefStatement HasExactMatchStatement HasExactSynonymStatement HasMappingStatement HasMatchStatement HasNarrowMatchStatement HasNarrowSynonymStatement HasOioSynonymStatement HasRelatedMatchStatement HasRelatedSynonymStatement HasSynonymStatement HasTextDefinitionStatement NodeToNodeStatement NodeToValueStatement OntologyStatusStatement OwlAxiom OwlAxiomAnnotation OwlComplementOfStatement OwlDisjointClassStatement OwlEquivalentClassStatement OwlImportsStatement OwlInverseOfStatement OwlReifiedAxiom OwlSameAsStatement RdfFirstStatement RdfListMemberStatement RdfListStatement RdfRestStatement RdfRestTransitiveStatement RdfTypeStatement RdfsDomainStatement RdfsLabelStatement RdfsRangeStatement RdfsSubclassOfNamedStatement RdfsSubclassOfStatement RdfsSubpropertyOfStatement Statements Other properties See also: https://github.com/ontodev/rdftab.rs#stanzas","title":"Slot: stanza"},{"location":"stanza/#slot-stanza","text":"URI: semsql:stanza","title":"Slot: stanza"},{"location":"stanza/#domain-and-range","text":"None -> OPT Node","title":"Domain and Range"},{"location":"stanza/#parents","text":"","title":"Parents"},{"location":"stanza/#children","text":"","title":"Children"},{"location":"stanza/#used-by","text":"AxiomDbxrefAnnotation HasBroadMatchStatement HasBroadSynonymStatement HasDbxrefStatement HasExactMatchStatement HasExactSynonymStatement HasMappingStatement HasMatchStatement HasNarrowMatchStatement HasNarrowSynonymStatement HasOioSynonymStatement HasRelatedMatchStatement HasRelatedSynonymStatement HasSynonymStatement HasTextDefinitionStatement NodeToNodeStatement NodeToValueStatement OntologyStatusStatement OwlAxiom OwlAxiomAnnotation OwlComplementOfStatement OwlDisjointClassStatement OwlEquivalentClassStatement OwlImportsStatement OwlInverseOfStatement OwlReifiedAxiom OwlSameAsStatement RdfFirstStatement RdfListMemberStatement RdfListStatement RdfRestStatement RdfRestTransitiveStatement RdfTypeStatement RdfsDomainStatement RdfsLabelStatement RdfsRangeStatement RdfsSubclassOfNamedStatement RdfsSubclassOfStatement RdfsSubpropertyOfStatement Statements","title":"Used by"},{"location":"stanza/#other-properties","text":"See also: https://github.com/ontodev/rdftab.rs#stanzas","title":"Other properties"},{"location":"subgraph_edge_by_ancestor_anchor_object/","text":"Slot: subgraph_edge_by_ancestor_anchor_object The ancestor term URI: semsql:subgraph_edge_by_ancestor_anchor_object Domain and Range SubgraphEdgeByAncestor -> OPT Node Parents is_a: subgraph query\u279eanchor object Children Used by SubgraphEdgeByAncestor","title":"Slot: subgraph_edge_by_ancestor_anchor_object"},{"location":"subgraph_edge_by_ancestor_anchor_object/#slot-subgraph_edge_by_ancestor_anchor_object","text":"The ancestor term URI: semsql:subgraph_edge_by_ancestor_anchor_object","title":"Slot: subgraph_edge_by_ancestor_anchor_object"},{"location":"subgraph_edge_by_ancestor_anchor_object/#domain-and-range","text":"SubgraphEdgeByAncestor -> OPT Node","title":"Domain and Range"},{"location":"subgraph_edge_by_ancestor_anchor_object/#parents","text":"is_a: subgraph query\u279eanchor object","title":"Parents"},{"location":"subgraph_edge_by_ancestor_anchor_object/#children","text":"","title":"Children"},{"location":"subgraph_edge_by_ancestor_anchor_object/#used-by","text":"SubgraphEdgeByAncestor","title":"Used by"},{"location":"subgraph_edge_by_ancestor_anchor_predicate/","text":"Slot: subgraph_edge_by_ancestor_anchor_predicate The entailed predicate that holds between each edge subject and the ancestor URI: semsql:subgraph_edge_by_ancestor_anchor_predicate Domain and Range SubgraphEdgeByAncestor -> OPT String Parents is_a: subgraph query\u279eanchor predicate Children Used by SubgraphEdgeByAncestor","title":"Slot: subgraph_edge_by_ancestor_anchor_predicate"},{"location":"subgraph_edge_by_ancestor_anchor_predicate/#slot-subgraph_edge_by_ancestor_anchor_predicate","text":"The entailed predicate that holds between each edge subject and the ancestor URI: semsql:subgraph_edge_by_ancestor_anchor_predicate","title":"Slot: subgraph_edge_by_ancestor_anchor_predicate"},{"location":"subgraph_edge_by_ancestor_anchor_predicate/#domain-and-range","text":"SubgraphEdgeByAncestor -> OPT String","title":"Domain and Range"},{"location":"subgraph_edge_by_ancestor_anchor_predicate/#parents","text":"is_a: subgraph query\u279eanchor predicate","title":"Parents"},{"location":"subgraph_edge_by_ancestor_anchor_predicate/#children","text":"","title":"Children"},{"location":"subgraph_edge_by_ancestor_anchor_predicate/#used-by","text":"SubgraphEdgeByAncestor","title":"Used by"},{"location":"subgraph_edge_by_child_anchor_object/","text":"Slot: subgraph_edge_by_child_anchor_object The child term URI: semsql:subgraph_edge_by_child_anchor_object Domain and Range SubgraphEdgeByChild -> OPT Node Parents is_a: subgraph query\u279eanchor object Children Used by SubgraphEdgeByChild","title":"Slot: subgraph_edge_by_child_anchor_object"},{"location":"subgraph_edge_by_child_anchor_object/#slot-subgraph_edge_by_child_anchor_object","text":"The child term URI: semsql:subgraph_edge_by_child_anchor_object","title":"Slot: subgraph_edge_by_child_anchor_object"},{"location":"subgraph_edge_by_child_anchor_object/#domain-and-range","text":"SubgraphEdgeByChild -> OPT Node","title":"Domain and Range"},{"location":"subgraph_edge_by_child_anchor_object/#parents","text":"is_a: subgraph query\u279eanchor object","title":"Parents"},{"location":"subgraph_edge_by_child_anchor_object/#children","text":"","title":"Children"},{"location":"subgraph_edge_by_child_anchor_object/#used-by","text":"SubgraphEdgeByChild","title":"Used by"},{"location":"subgraph_edge_by_child_anchor_predicate/","text":"Slot: subgraph_edge_by_child_anchor_predicate The entailed predicate that holds between the child and each edge subject URI: semsql:subgraph_edge_by_child_anchor_predicate Domain and Range SubgraphEdgeByChild -> OPT String Parents is_a: subgraph query\u279eanchor predicate Children Used by SubgraphEdgeByChild","title":"Slot: subgraph_edge_by_child_anchor_predicate"},{"location":"subgraph_edge_by_child_anchor_predicate/#slot-subgraph_edge_by_child_anchor_predicate","text":"The entailed predicate that holds between the child and each edge subject URI: semsql:subgraph_edge_by_child_anchor_predicate","title":"Slot: subgraph_edge_by_child_anchor_predicate"},{"location":"subgraph_edge_by_child_anchor_predicate/#domain-and-range","text":"SubgraphEdgeByChild -> OPT String","title":"Domain and Range"},{"location":"subgraph_edge_by_child_anchor_predicate/#parents","text":"is_a: subgraph query\u279eanchor predicate","title":"Parents"},{"location":"subgraph_edge_by_child_anchor_predicate/#children","text":"","title":"Children"},{"location":"subgraph_edge_by_child_anchor_predicate/#used-by","text":"SubgraphEdgeByChild","title":"Used by"},{"location":"subgraph_edge_by_descendant_anchor_object/","text":"Slot: subgraph_edge_by_descendant_anchor_object The descendant term URI: semsql:subgraph_edge_by_descendant_anchor_object Domain and Range SubgraphEdgeByDescendant -> OPT Node Parents is_a: subgraph query\u279eanchor object Children Used by SubgraphEdgeByDescendant","title":"Slot: subgraph_edge_by_descendant_anchor_object"},{"location":"subgraph_edge_by_descendant_anchor_object/#slot-subgraph_edge_by_descendant_anchor_object","text":"The descendant term URI: semsql:subgraph_edge_by_descendant_anchor_object","title":"Slot: subgraph_edge_by_descendant_anchor_object"},{"location":"subgraph_edge_by_descendant_anchor_object/#domain-and-range","text":"SubgraphEdgeByDescendant -> OPT Node","title":"Domain and Range"},{"location":"subgraph_edge_by_descendant_anchor_object/#parents","text":"is_a: subgraph query\u279eanchor object","title":"Parents"},{"location":"subgraph_edge_by_descendant_anchor_object/#children","text":"","title":"Children"},{"location":"subgraph_edge_by_descendant_anchor_object/#used-by","text":"SubgraphEdgeByDescendant","title":"Used by"},{"location":"subgraph_edge_by_descendant_anchor_predicate/","text":"Slot: subgraph_edge_by_descendant_anchor_predicate The entailed predicate that holds between the descendant and each edge subject URI: semsql:subgraph_edge_by_descendant_anchor_predicate Domain and Range SubgraphEdgeByDescendant -> OPT String Parents is_a: subgraph query\u279eanchor predicate Children Used by SubgraphEdgeByDescendant","title":"Slot: subgraph_edge_by_descendant_anchor_predicate"},{"location":"subgraph_edge_by_descendant_anchor_predicate/#slot-subgraph_edge_by_descendant_anchor_predicate","text":"The entailed predicate that holds between the descendant and each edge subject URI: semsql:subgraph_edge_by_descendant_anchor_predicate","title":"Slot: subgraph_edge_by_descendant_anchor_predicate"},{"location":"subgraph_edge_by_descendant_anchor_predicate/#domain-and-range","text":"SubgraphEdgeByDescendant -> OPT String","title":"Domain and Range"},{"location":"subgraph_edge_by_descendant_anchor_predicate/#parents","text":"is_a: subgraph query\u279eanchor predicate","title":"Parents"},{"location":"subgraph_edge_by_descendant_anchor_predicate/#children","text":"","title":"Children"},{"location":"subgraph_edge_by_descendant_anchor_predicate/#used-by","text":"SubgraphEdgeByDescendant","title":"Used by"},{"location":"subgraph_edge_by_parent_anchor_object/","text":"Slot: subgraph_edge_by_parent_anchor_object The parent term URI: semsql:subgraph_edge_by_parent_anchor_object Domain and Range SubgraphEdgeByParent -> OPT Node Parents is_a: subgraph query\u279eanchor object Children Used by SubgraphEdgeByParent","title":"Slot: subgraph_edge_by_parent_anchor_object"},{"location":"subgraph_edge_by_parent_anchor_object/#slot-subgraph_edge_by_parent_anchor_object","text":"The parent term URI: semsql:subgraph_edge_by_parent_anchor_object","title":"Slot: subgraph_edge_by_parent_anchor_object"},{"location":"subgraph_edge_by_parent_anchor_object/#domain-and-range","text":"SubgraphEdgeByParent -> OPT Node","title":"Domain and Range"},{"location":"subgraph_edge_by_parent_anchor_object/#parents","text":"is_a: subgraph query\u279eanchor object","title":"Parents"},{"location":"subgraph_edge_by_parent_anchor_object/#children","text":"","title":"Children"},{"location":"subgraph_edge_by_parent_anchor_object/#used-by","text":"SubgraphEdgeByParent","title":"Used by"},{"location":"subgraph_edge_by_parent_anchor_predicate/","text":"Slot: subgraph_edge_by_parent_anchor_predicate The entailed predicate that holds between each edge subject and the parent URI: semsql:subgraph_edge_by_parent_anchor_predicate Domain and Range SubgraphEdgeByParent -> OPT String Parents is_a: subgraph query\u279eanchor predicate Children Used by SubgraphEdgeByParent","title":"Slot: subgraph_edge_by_parent_anchor_predicate"},{"location":"subgraph_edge_by_parent_anchor_predicate/#slot-subgraph_edge_by_parent_anchor_predicate","text":"The entailed predicate that holds between each edge subject and the parent URI: semsql:subgraph_edge_by_parent_anchor_predicate","title":"Slot: subgraph_edge_by_parent_anchor_predicate"},{"location":"subgraph_edge_by_parent_anchor_predicate/#domain-and-range","text":"SubgraphEdgeByParent -> OPT String","title":"Domain and Range"},{"location":"subgraph_edge_by_parent_anchor_predicate/#parents","text":"is_a: subgraph query\u279eanchor predicate","title":"Parents"},{"location":"subgraph_edge_by_parent_anchor_predicate/#children","text":"","title":"Children"},{"location":"subgraph_edge_by_parent_anchor_predicate/#used-by","text":"SubgraphEdgeByParent","title":"Used by"},{"location":"subgraph_query_anchor_object/","text":"Slot: subgraph_query_anchor_object The entity that is used to seed the graph. The seed entity will bear some relationship to each subgraph edge; E.g. with an ancestor subgraph query, all edges will have a subject that descends from the ancestor URI: semsql:subgraph_query_anchor_object Domain and Range SubgraphQuery -> OPT Node Parents is_a: anchor object Children subgraph edge by ancestor\u279eanchor object subgraph edge by child\u279eanchor object subgraph edge by descendant\u279eanchor object subgraph edge by parent\u279eanchor object Used by SubgraphQuery","title":"Slot: subgraph_query_anchor_object"},{"location":"subgraph_query_anchor_object/#slot-subgraph_query_anchor_object","text":"The entity that is used to seed the graph. The seed entity will bear some relationship to each subgraph edge; E.g. with an ancestor subgraph query, all edges will have a subject that descends from the ancestor URI: semsql:subgraph_query_anchor_object","title":"Slot: subgraph_query_anchor_object"},{"location":"subgraph_query_anchor_object/#domain-and-range","text":"SubgraphQuery -> OPT Node","title":"Domain and Range"},{"location":"subgraph_query_anchor_object/#parents","text":"is_a: anchor object","title":"Parents"},{"location":"subgraph_query_anchor_object/#children","text":"subgraph edge by ancestor\u279eanchor object subgraph edge by child\u279eanchor object subgraph edge by descendant\u279eanchor object subgraph edge by parent\u279eanchor object","title":"Children"},{"location":"subgraph_query_anchor_object/#used-by","text":"SubgraphQuery","title":"Used by"},{"location":"subgraph_query_anchor_predicate/","text":"Slot: subgraph_query_anchor_predicate The predicate that is used to determine if an edge should be included based on relationship to the anchor_object. URI: semsql:subgraph_query_anchor_predicate Domain and Range SubgraphQuery -> OPT String Parents is_a: anchor predicate Children subgraph edge by ancestor\u279eanchor predicate subgraph edge by child\u279eanchor predicate subgraph edge by descendant\u279eanchor predicate subgraph edge by parent\u279eanchor predicate Used by SubgraphQuery","title":"Slot: subgraph_query_anchor_predicate"},{"location":"subgraph_query_anchor_predicate/#slot-subgraph_query_anchor_predicate","text":"The predicate that is used to determine if an edge should be included based on relationship to the anchor_object. URI: semsql:subgraph_query_anchor_predicate","title":"Slot: subgraph_query_anchor_predicate"},{"location":"subgraph_query_anchor_predicate/#domain-and-range","text":"SubgraphQuery -> OPT String","title":"Domain and Range"},{"location":"subgraph_query_anchor_predicate/#parents","text":"is_a: anchor predicate","title":"Parents"},{"location":"subgraph_query_anchor_predicate/#children","text":"subgraph edge by ancestor\u279eanchor predicate subgraph edge by child\u279eanchor predicate subgraph edge by descendant\u279eanchor predicate subgraph edge by parent\u279eanchor predicate","title":"Children"},{"location":"subgraph_query_anchor_predicate/#used-by","text":"SubgraphQuery","title":"Used by"},{"location":"subgraph_query_object/","text":"Slot: subgraph_query_object object of the subgraph edge URI: semsql:subgraph_query_object Domain and Range SubgraphQuery -> OPT Node Parents is_a: object Children Used by SubgraphQuery","title":"Slot: subgraph_query_object"},{"location":"subgraph_query_object/#slot-subgraph_query_object","text":"object of the subgraph edge URI: semsql:subgraph_query_object","title":"Slot: subgraph_query_object"},{"location":"subgraph_query_object/#domain-and-range","text":"SubgraphQuery -> OPT Node","title":"Domain and Range"},{"location":"subgraph_query_object/#parents","text":"is_a: object","title":"Parents"},{"location":"subgraph_query_object/#children","text":"","title":"Children"},{"location":"subgraph_query_object/#used-by","text":"SubgraphQuery","title":"Used by"},{"location":"subgraph_query_predicate/","text":"Slot: subgraph_query_predicate predicate of the subgraph edge URI: semsql:subgraph_query_predicate Domain and Range SubgraphQuery -> OPT PropertyNode Parents is_a: predicate Children Used by SubgraphQuery","title":"Slot: subgraph_query_predicate"},{"location":"subgraph_query_predicate/#slot-subgraph_query_predicate","text":"predicate of the subgraph edge URI: semsql:subgraph_query_predicate","title":"Slot: subgraph_query_predicate"},{"location":"subgraph_query_predicate/#domain-and-range","text":"SubgraphQuery -> OPT PropertyNode","title":"Domain and Range"},{"location":"subgraph_query_predicate/#parents","text":"is_a: predicate","title":"Parents"},{"location":"subgraph_query_predicate/#children","text":"","title":"Children"},{"location":"subgraph_query_predicate/#used-by","text":"SubgraphQuery","title":"Used by"},{"location":"subgraph_query_subject/","text":"Slot: subgraph_query_subject subject of the subgraph edge URI: semsql:subgraph_query_subject Domain and Range SubgraphQuery -> OPT Node Parents is_a: subject Children Used by SubgraphQuery","title":"Slot: subgraph_query_subject"},{"location":"subgraph_query_subject/#slot-subgraph_query_subject","text":"subject of the subgraph edge URI: semsql:subgraph_query_subject","title":"Slot: subgraph_query_subject"},{"location":"subgraph_query_subject/#domain-and-range","text":"SubgraphQuery -> OPT Node","title":"Domain and Range"},{"location":"subgraph_query_subject/#parents","text":"is_a: subject","title":"Parents"},{"location":"subgraph_query_subject/#children","text":"","title":"Children"},{"location":"subgraph_query_subject/#used-by","text":"SubgraphQuery","title":"Used by"},{"location":"subject/","text":"Slot: subject URI: semsql:subject Domain and Range None -> OPT Node Parents Children owl disjoint class statement\u279esubject owl equivalent class statement\u279esubject owl equivalent to intersection member\u279esubject owl same as statement\u279esubject owl subclass of some values from\u279esubject problem\u279esubject rdf list statement\u279esubject rdfs subclass of statement\u279esubject rdfs subproperty of statement\u279esubject repair action\u279esubject subgraph query\u279esubject Used by AxiomDbxrefAnnotation Edge EntailedEdge HasBroadMatchStatement HasBroadSynonymStatement HasDbxrefStatement HasExactMatchStatement HasExactSynonymStatement HasMappingStatement HasMatchStatement HasNarrowMatchStatement HasNarrowSynonymStatement HasOioSynonymStatement HasRelatedMatchStatement HasRelatedSynonymStatement HasSynonymStatement HasTextDefinitionStatement NodeToNodeStatement NodeToValueStatement OntologyStatusStatement OwlAxiom OwlAxiomAnnotation OwlComplementOfStatement OwlImportsStatement OwlInverseOfStatement OwlReifiedAxiom RdfTypeStatement RdfsDomainStatement RdfsLabelStatement RdfsRangeStatement Statements SubgraphEdgeByAncestor SubgraphEdgeByChild SubgraphEdgeByDescendant SubgraphEdgeByParent SubgraphEdgeBySelf Other properties Mappings: rdf:subject","title":"Slot: subject"},{"location":"subject/#slot-subject","text":"URI: semsql:subject","title":"Slot: subject"},{"location":"subject/#domain-and-range","text":"None -> OPT Node","title":"Domain and Range"},{"location":"subject/#parents","text":"","title":"Parents"},{"location":"subject/#children","text":"owl disjoint class statement\u279esubject owl equivalent class statement\u279esubject owl equivalent to intersection member\u279esubject owl same as statement\u279esubject owl subclass of some values from\u279esubject problem\u279esubject rdf list statement\u279esubject rdfs subclass of statement\u279esubject rdfs subproperty of statement\u279esubject repair action\u279esubject subgraph query\u279esubject","title":"Children"},{"location":"subject/#used-by","text":"AxiomDbxrefAnnotation Edge EntailedEdge HasBroadMatchStatement HasBroadSynonymStatement HasDbxrefStatement HasExactMatchStatement HasExactSynonymStatement HasMappingStatement HasMatchStatement HasNarrowMatchStatement HasNarrowSynonymStatement HasOioSynonymStatement HasRelatedMatchStatement HasRelatedSynonymStatement HasSynonymStatement HasTextDefinitionStatement NodeToNodeStatement NodeToValueStatement OntologyStatusStatement OwlAxiom OwlAxiomAnnotation OwlComplementOfStatement OwlImportsStatement OwlInverseOfStatement OwlReifiedAxiom RdfTypeStatement RdfsDomainStatement RdfsLabelStatement RdfsRangeStatement Statements SubgraphEdgeByAncestor SubgraphEdgeByChild SubgraphEdgeByDescendant SubgraphEdgeByParent SubgraphEdgeBySelf","title":"Used by"},{"location":"subject/#other-properties","text":"Mappings: rdf:subject","title":"Other properties"},{"location":"value/","text":"Slot: value Note the range of this slot is always a string. Only used the triple represents a literal assertion URI: semsql:value Domain and Range None -> OPT LiteralAsStringType Parents Children node to value statement\u279evalue Used by AllProblems AxiomDbxrefAnnotation LexicalProblem NodeToNodeStatement NodeWithTwoLabelsProblem OwlAxiom OwlAxiomAnnotation OwlComplementOfStatement OwlDisjointClassStatement OwlEquivalentClassStatement OwlImportsStatement OwlInverseOfStatement OwlReifiedAxiom OwlSameAsStatement Problem PropertyUsedWithDatatypeValuesAndObjects RdfFirstStatement RdfListMemberStatement RdfListStatement RdfRestStatement RdfRestTransitiveStatement RdfTypeStatement RdfsDomainStatement RdfsRangeStatement RdfsSubclassOfNamedStatement RdfsSubclassOfStatement RdfsSubpropertyOfStatement Statements TrailingWhitespaceProblem Other properties Close Mappings: rdf:object","title":"Slot: value"},{"location":"value/#slot-value","text":"Note the range of this slot is always a string. Only used the triple represents a literal assertion URI: semsql:value","title":"Slot: value"},{"location":"value/#domain-and-range","text":"None -> OPT LiteralAsStringType","title":"Domain and Range"},{"location":"value/#parents","text":"","title":"Parents"},{"location":"value/#children","text":"node to value statement\u279evalue","title":"Children"},{"location":"value/#used-by","text":"AllProblems AxiomDbxrefAnnotation LexicalProblem NodeToNodeStatement NodeWithTwoLabelsProblem OwlAxiom OwlAxiomAnnotation OwlComplementOfStatement OwlDisjointClassStatement OwlEquivalentClassStatement OwlImportsStatement OwlInverseOfStatement OwlReifiedAxiom OwlSameAsStatement Problem PropertyUsedWithDatatypeValuesAndObjects RdfFirstStatement RdfListMemberStatement RdfListStatement RdfRestStatement RdfRestTransitiveStatement RdfTypeStatement RdfsDomainStatement RdfsRangeStatement RdfsSubclassOfNamedStatement RdfsSubclassOfStatement RdfsSubpropertyOfStatement Statements TrailingWhitespaceProblem","title":"Used by"},{"location":"value/#other-properties","text":"Close Mappings: rdf:object","title":"Other properties"},{"location":"types/Boolean/","text":"Type: Boolean A binary (true or false) value URI: linkml:Boolean Root (builtin) type Bool Representation bool","title":"Type: Boolean"},{"location":"types/Boolean/#type-boolean","text":"A binary (true or false) value URI: linkml:Boolean Root (builtin) type Bool Representation bool","title":"Type: Boolean"},{"location":"types/Date/","text":"Type: Date a date (year, month and day) in an idealized calendar URI: linkml:Date Root (builtin) type XSDDate Representation str","title":"Type: Date"},{"location":"types/Date/#type-date","text":"a date (year, month and day) in an idealized calendar URI: linkml:Date Root (builtin) type XSDDate Representation str","title":"Type: Date"},{"location":"types/Datetime/","text":"Type: Datetime The combination of a date and time URI: linkml:Datetime Root (builtin) type XSDDateTime Representation str","title":"Type: Datetime"},{"location":"types/Datetime/#type-datetime","text":"The combination of a date and time URI: linkml:Datetime Root (builtin) type XSDDateTime Representation str","title":"Type: Datetime"},{"location":"types/Decimal/","text":"Type: Decimal A real number with arbitrary precision that conforms to the xsd:decimal specification URI: linkml:Decimal Root (builtin) type Decimal","title":"Type: Decimal"},{"location":"types/Decimal/#type-decimal","text":"A real number with arbitrary precision that conforms to the xsd:decimal specification URI: linkml:Decimal Root (builtin) type Decimal","title":"Type: Decimal"},{"location":"types/Double/","text":"Type: Double A real number that conforms to the xsd:double specification URI: linkml:Double Root (builtin) type float","title":"Type: Double"},{"location":"types/Double/#type-double","text":"A real number that conforms to the xsd:double specification URI: linkml:Double Root (builtin) type float","title":"Type: Double"},{"location":"types/Float/","text":"Type: Float A real number that conforms to the xsd:float specification URI: linkml:Float Root (builtin) type float","title":"Type: Float"},{"location":"types/Float/#type-float","text":"A real number that conforms to the xsd:float specification URI: linkml:Float Root (builtin) type float","title":"Type: Float"},{"location":"types/Integer/","text":"Type: Integer An integer URI: linkml:Integer Root (builtin) type int","title":"Type: Integer"},{"location":"types/Integer/#type-integer","text":"An integer URI: linkml:Integer Root (builtin) type int","title":"Type: Integer"},{"location":"types/LiteralAsStringType/","text":"Type: LiteralAsStringType URI: semsql_rdf:LiteralAsStringType Parent type String Root (builtin) type str","title":"Type: LiteralAsStringType"},{"location":"types/LiteralAsStringType/#type-literalasstringtype","text":"URI: semsql_rdf:LiteralAsStringType Parent type String Root (builtin) type str","title":"Type: LiteralAsStringType"},{"location":"types/Ncname/","text":"Type: Ncname Prefix part of CURIE URI: linkml:Ncname Root (builtin) type NCName Representation str","title":"Type: Ncname"},{"location":"types/Ncname/#type-ncname","text":"Prefix part of CURIE URI: linkml:Ncname Root (builtin) type NCName Representation str","title":"Type: Ncname"},{"location":"types/NodeIdType/","text":"Type: NodeIdType URI: semsql_rdf:NodeIdType Parent type Uriorcurie Root (builtin) type URIorCURIE Representation str","title":"Type: NodeIdType"},{"location":"types/NodeIdType/#type-nodeidtype","text":"URI: semsql_rdf:NodeIdType Parent type Uriorcurie Root (builtin) type URIorCURIE Representation str","title":"Type: NodeIdType"},{"location":"types/Nodeidentifier/","text":"Type: Nodeidentifier A URI, CURIE or BNODE that represents a node in a model. URI: linkml:Nodeidentifier Root (builtin) type NodeIdentifier Representation str","title":"Type: Nodeidentifier"},{"location":"types/Nodeidentifier/#type-nodeidentifier","text":"A URI, CURIE or BNODE that represents a node in a model. URI: linkml:Nodeidentifier Root (builtin) type NodeIdentifier Representation str","title":"Type: Nodeidentifier"},{"location":"types/Objectidentifier/","text":"Type: Objectidentifier A URI or CURIE that represents an object in the model. URI: linkml:Objectidentifier Root (builtin) type ElementIdentifier Representation str Other properties Comments: Used for inheritence and type checking","title":"Type: Objectidentifier"},{"location":"types/Objectidentifier/#type-objectidentifier","text":"A URI or CURIE that represents an object in the model. URI: linkml:Objectidentifier Root (builtin) type ElementIdentifier Representation str","title":"Type: Objectidentifier"},{"location":"types/Objectidentifier/#other-properties","text":"Comments: Used for inheritence and type checking","title":"Other properties"},{"location":"types/String/","text":"Type: String A character string URI: linkml:String Root (builtin) type str","title":"Type: String"},{"location":"types/String/#type-string","text":"A character string URI: linkml:String Root (builtin) type str","title":"Type: String"},{"location":"types/Time/","text":"Type: Time A time object represents a (local) time of day, independent of any particular day URI: linkml:Time Root (builtin) type XSDTime Representation str","title":"Type: Time"},{"location":"types/Time/#type-time","text":"A time object represents a (local) time of day, independent of any particular day URI: linkml:Time Root (builtin) type XSDTime Representation str","title":"Type: Time"},{"location":"types/Uri/","text":"Type: Uri a complete URI URI: linkml:Uri Root (builtin) type URI Representation str","title":"Type: Uri"},{"location":"types/Uri/#type-uri","text":"a complete URI URI: linkml:Uri Root (builtin) type URI Representation str","title":"Type: Uri"},{"location":"types/Uriorcurie/","text":"Type: Uriorcurie a URI or a CURIE URI: linkml:Uriorcurie Root (builtin) type URIorCURIE Representation str","title":"Type: Uriorcurie"},{"location":"types/Uriorcurie/#type-uriorcurie","text":"a URI or a CURIE URI: linkml:Uriorcurie Root (builtin) type URIorCURIE Representation str","title":"Type: Uriorcurie"}]}